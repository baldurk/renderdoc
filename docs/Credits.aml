<?xml version="1.0" encoding="utf-8"?>
<topic id="ddeda389-3bd8-460d-b420-20e563003da4" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>RenderDoc wouldn't have been possible without both the tools and libraries that were
      used in its construction, as well as the many people who helped and contributed to make it
      the program it is today.</para>
    </introduction>
    <section address="Credits">
      <title>3rd Party Credits</title>
      <content>
        <para>The following libraries and components are incorporated into RenderDoc, listed here in
        no particular order. Thanks go out to the developers and contributors behind each of these
        libraries who generously donated their work to other free projects!</para>
        
<list class="bullet">

  <listItem><para>
  <externalLink>
<linkText>mhook</linkText>
<linkAlternateText>mhook DLL hooking library, used to inject RenderDoc into applications.</linkAlternateText>
<linkUri>http://codefromthe70s.org/mhook23.aspx</linkUri>
</externalLink>
  </para></listItem>
  
  <listItem><para>
  <externalLink>
<linkText>TreeView with Columns</linkText>
<linkAlternateText>TreeView with Columns, an invaluable control filling a much needed niche in .NET winforms.</linkAlternateText>
<linkUri>http://www.codeproject.com/Articles/23746/TreeView-with-Columns</linkUri>
</externalLink>
  </para></listItem>
  
  <listItem><para>
  <externalLink>
<linkText>Dock Panel Suite</linkText>
<linkAlternateText>Dock Panel Suite, a mature and stable library that adds the docking and flexibility of RenderDoc's UI.</linkAlternateText>
<linkUri>http://dockpanelsuite.com/</linkUri>
</externalLink>
  </para></listItem>
  
  <listItem><para>
  <externalLink>
<linkText>famfamfam Silk Icon set</linkText>
<linkAlternateText>Lending an air of professionalism and artistic quality to the UI, the Silk icon set is used throughout RenderDoc.</linkAlternateText>
<linkUri>http://www.famfamfam.com/lab/icons/silk/</linkUri>
</externalLink>
  </para></listItem>
  
  <listItem><para>
  <externalLink>
<linkText>ScintillaNET</linkText>
<linkAlternateText>ScintillaNET and by extension Scintilla provide a powerful text editor for the shader viewers.</linkAlternateText>
<linkUri>http://scintillanet.codeplex.com/</linkUri>
</externalLink>
  </para></listItem>
  
  <listItem><para>
  <externalLink>
<linkText>Google Breakpad</linkText>
<linkAlternateText>Google Breakpad provides a rock-solid crash handling and reporting base that help keep RenderDoc stable.</linkAlternateText>
<linkUri>https://code.google.com/p/google-breakpad/</linkUri>
</externalLink>
  </para></listItem>
  
  <listItem><para>
  <externalLink>
<linkText>miniz</linkText>
<linkAlternateText>miniz public domain zip library is used to compress the crash reports for sending.</linkAlternateText>
<linkUri>https://code.google.com/p/miniz/</linkUri>
</externalLink>
  </para></listItem>
  
  <listItem><para>
  <externalLink>
<linkText>ILM's half implementation</linkText>
<linkAlternateText>Used for decoding half data for display.</linkAlternateText>
<linkUri>https://github.com/openexr/openexr/tree/master/IlmBase/Half</linkUri>
</externalLink>
  </para></listItem>
  
  <listItem><para>
  <externalLink>
<linkText>jpeg-compressor</linkText>
<linkAlternateText>Used to compress screenshots into jpg format for thumbnail previews.</linkAlternateText>
<linkUri>https://code.google.com/p/jpeg-compressor/</linkUri>
</externalLink>
  </para></listItem>
  
  <listItem><para>
  <externalLink>
<linkText>lz4</linkText>
<linkAlternateText>lz4 compresses large data transfers (textures and buffers) when going across network connections.</linkAlternateText>
<linkUri>https://code.google.com/p/lz4/</linkUri>
</externalLink>
  </para></listItem>
  
  <listItem><para>
  <externalLink>
<linkText>stb</linkText>
<linkAlternateText>Used to read and write various image formats.</linkAlternateText>
<linkUri>https://github.com/nothings/stb</linkUri>
</externalLink>
  </para></listItem>
  
  <listItem><para>
  <externalLink>
<linkText>Sandcastle Help File Builder</linkText>
<linkAlternateText>Sandcastle Help File Builder for creating this documentation that you're reading!</linkAlternateText>
<linkUri>http://shfb.codeplex.com/</linkUri>
</externalLink>
  </para></listItem>
  
</list>

      </content>
    </section>
    <section address="Thanks">
      <title>Thanks</title>
      <content>
      <para>There have been many people who have helped in the creation of RenderDoc. Whether
      testing, feedback or contributing artwork and design critique everyone listed here and
      many more besides have been invaluable in taking RenderDoc from an idea on paper to its
      current state. Greets fly out to the following people, listed in no particular order.</para>
      
<list class="bullet">
  <listItem><para>Chris Bunner, Charlie Cole, James Chilvers, Andrew Khan, Benjamin Hill, Jake Turner, Alex Weighell and the rest
  of the Crytek UK R&amp;D team.</para></listItem>
  <listItem><para>Colin Bonstead, Marco Corbetta, Pascal Eggert, Marcel Hatam, Sascha Hoba, Theodor Mader, Mathieu Pinard, Chris Raine, Nicolas Schulz, Tiago Sousa, Sean Tracy, Carsten Wenzel,
  and everyone else at the rest of the Crytek Studios.</para></listItem>
  <listItem><para>Daniel Sexton</para></listItem>
  <listItem><para>Jason Mendel</para></listItem>
  <listItem><para>Jacob Kapostins</para></listItem>
  <listItem><para>Iain Cantlay</para></listItem>
  <listItem><para>Luke Lambert</para></listItem>
  <listItem><para>Gareth Thomas</para></listItem>
  <listItem><para>George Ilenei</para></listItem>
</list>

      </content>
    </section>
  </developerConceptualDocument>
</topic>
