/******************************************************************************
 * The MIT License (MIT)
 * 
 * Copyright (c) 2015-2016 Baldur Karlsson
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 ******************************************************************************/


#pragma once

// This file is autogenerated with hookset.pl - any changes will be overwritten
// next time that script is run.
// $ pwd
// .../renderdoc/driver/gles
// $ ./gles_hookset.pl > gles_hookset_defs.h
////////////////////////////////////////////////////

// dllexport functions
#define DLLExportHooks() \
    HookInit(glActiveTexture); \
    HookInit(glAttachShader); \
    HookInit(glBindBuffer); \
    HookInit(glBindFramebuffer); \
    HookInit(glBindTexture); \
    HookInit(glBlendFunc); \
    HookInit(glBufferData); \
    HookInit(glBufferSubData); \
    HookInit(glCheckFramebufferStatus); \
    HookInit(glClear); \
    HookInit(glClearColor); \
    HookInit(glColorMask); \
    HookInit(glCompileShader); \
    HookInit(glCompressedTexSubImage2D); \
    HookInit(glCreateProgram); \
    HookInit(glCreateShader); \
    HookInit(glDeleteBuffers); \
    HookInit(glDeleteFramebuffers); \
    HookInit(glDeleteProgram); \
    HookInit(glDeleteShader); \
    HookInit(glDeleteTextures); \
    HookInit(glDepthFunc); \
    HookInit(glDepthMask); \
    HookInit(glDetachShader); \
    HookInit(glDisable); \
    HookInit(glDisableVertexAttribArray); \
    HookInit(glDrawArrays); \
    HookInit(glEnable); \
    HookInit(glEnableVertexAttribArray); \
    HookInit(glFinish); \
    HookInit(glFlush); \
    HookInit(glFramebufferTexture2D); \
    HookInit(glGenBuffers); \
    HookInit(glGenFramebuffers); \
    HookInit(glGenTextures); \
    HookInit(glGetBufferParameteriv); \
    HookInit(glGetError); \
    HookInit(glGetFramebufferAttachmentParameteriv); \
    HookInit(glGetIntegerv); \
    HookInit(glGetProgramiv); \
    HookInit(glGetProgramInfoLog); \
    HookInit(glGetShaderiv); \
    HookInit(glGetShaderInfoLog); \
    HookInit(glGetTexParameterfv); \
    HookInit(glGetTexParameteriv); \
    HookInit(glGetUniformfv); \
    HookInit(glGetUniformiv); \
    HookInit(glGetUniformLocation); \
    HookInit(glGetVertexAttribfv); \
    HookInit(glGetVertexAttribiv); \
    HookInit(glIsBuffer); \
    HookInit(glIsEnabled); \
    HookInit(glIsFramebuffer); \
    HookInit(glIsProgram); \
    HookInit(glIsRenderbuffer); \
    HookInit(glIsShader); \
    HookInit(glIsTexture); \
    HookInit(glLinkProgram); \
    HookInit(glShaderSource); \
    HookInit(glStencilMask); \
    HookInit(glStencilMaskSeparate); \
    HookInit(glTexParameteri); \
    HookInit(glTexParameteriv); \
    HookInit(glTexSubImage2D); \
    HookInit(glUseProgram); \
    HookInit(glVertexAttribPointer); \
    HookInit(glViewport); \
    HookInit(glReadBuffer); \
    HookInit(glTexSubImage3D); \
    HookInit(glCompressedTexSubImage3D); \
    HookInit(glGenQueries); \
    HookInit(glDeleteQueries); \
    HookInit(glIsQuery); \
    HookInit(glBeginQuery); \
    HookInit(glEndQuery); \
    HookInit(glGetQueryObjectuiv); \
    HookInit(glUnmapBuffer); \
    HookInit(glBlitFramebuffer); \
    HookInit(glFramebufferTextureLayer); \
    HookInit(glMapBufferRange); \
    HookInit(glBindVertexArray); \
    HookInit(glDeleteVertexArrays); \
    HookInit(glGenVertexArrays); \
    HookInit(glIsVertexArray); \
    HookInit(glGetIntegeri_v); \
    HookInit(glBeginTransformFeedback); \
    HookInit(glEndTransformFeedback); \
    HookInit(glBindBufferBase); \
    HookInit(glTransformFeedbackVaryings); \
    HookInit(glGetUniformuiv); \
    HookInit(glClearBufferiv); \
    HookInit(glClearBufferfv); \
    HookInit(glClearBufferfi); \
    HookInit(glGetStringi); \
    HookInit(glIsSync); \
    HookInit(glGetInteger64i_v); \
    HookInit(glGenSamplers); \
    HookInit(glDeleteSamplers); \
    HookInit(glIsSampler); \
    HookInit(glBindSampler); \
    HookInit(glSamplerParameteri); \
    HookInit(glGetSamplerParameteriv); \
    HookInit(glGetSamplerParameterfv); \
    HookInit(glBindTransformFeedback); \
    HookInit(glDeleteTransformFeedbacks); \
    HookInit(glGenTransformFeedbacks); \
    HookInit(glIsTransformFeedback); \
    HookInit(glProgramParameteri); \
    HookInit(glTexStorage2D); \
    HookInit(glGetProgramResourceIndex); \
    HookInit(glGetProgramResourceiv); \
    HookInit(glUseProgramStages); \
    HookInit(glCreateShaderProgramv); \
    HookInit(glBindProgramPipeline); \
    HookInit(glDeleteProgramPipelines); \
    HookInit(glGenProgramPipelines); \
    HookInit(glIsProgramPipeline); \
    HookInit(glBindImageTexture); \
    HookInit(glGetBooleani_v); \
    HookInit(glTexStorage2DMultisample); \
    HookInit(glGetTexLevelParameteriv); \
    HookInit(glGetTexLevelParameterfv); \
    HookInit(glBindVertexBuffer); \
    HookInit(glVertexAttribFormat); \
    HookInit(glVertexAttribIFormat); \
    HookInit(glGetDebugMessageLog); \
    HookInit(glObjectLabel); \
    HookInit(glGetObjectLabel); \
    HookInit(glDisablei); \
    HookInit(glIsEnabledi); \
    HookInit(glDrawElementsBaseVertex); \
    HookInit(glFramebufferTexture); \
    HookInit(glGetGraphicsResetStatus); \
    HookInit(glGetTexParameterIiv); \
    HookInit(glGetTexParameterIuiv); \
    HookInit(glTexStorage3DMultisample); \



// gl extensions
#define HookCheckGLExtensions() \
    HookExtension(PFNGLFRAMEBUFFERTEXTUREOESPROC, glFramebufferTextureOES); \
    HookExtensionAlias(PFNGLFRAMEBUFFERTEXTUREOESPROC, glFramebufferTextureOES,         ); \
    HookExtension(PFNGLMAPBUFFEROESPROC, glMapBufferOES); \
    HookExtensionAlias(PFNGLMAPBUFFEROESPROC, glMapBufferOES,     ); \
    HookExtension(PFNGLUNMAPBUFFEROESPROC, glUnmapBufferOES); \
    HookExtensionAlias(PFNGLUNMAPBUFFEROESPROC, glUnmapBufferOES,     ); \
    HookExtension(PFNGLFRAMEBUFFERTEXTURE3DOESPROC, glFramebufferTexture3DOES); \
    HookExtension(PFNGLVIEWPORTARRAYVOESPROC, glViewportArrayvOES); \
    HookExtension(PFNGLVIEWPORTINDEXEDFOESPROC, glViewportIndexedfOES); \
    HookExtension(PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC, glDrawArraysInstancedBaseInstanceEXT); \
    HookExtension(PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC, glDrawElementsInstancedBaseVertexBaseInstanceEXT); \
    HookExtension(PFNGLBUFFERSTORAGEEXTPROC, glBufferStorageEXT); \
    HookExtension(PFNGLTEXTURESTORAGE2DEXTPROC, glTextureStorage2DEXT); \
    HookExtension(PFNGLTEXTURESTORAGE3DEXTPROC, glTextureStorage3DEXT); \
    HookExtension(PFNGLPOLYGONMODENVPROC, glPolygonModeNV); \
    HookExtension(PFNGLGETFLOATI_VNVPROC, glGetFloati_vNV); \
    HookExtension(PFNGLACTIVETEXTUREPROC, glActiveTexture); \
    HookExtension(PFNGLATTACHSHADERPROC, glAttachShader); \
    HookExtension(PFNGLBINDBUFFERPROC, glBindBuffer); \
    HookExtension(PFNGLBINDFRAMEBUFFERPROC, glBindFramebuffer); \
    HookExtension(PFNGLBINDTEXTUREPROC, glBindTexture); \
    HookExtension(PFNGLBLENDFUNCPROC, glBlendFunc); \
    HookExtension(PFNGLBUFFERDATAPROC, glBufferData); \
    HookExtension(PFNGLBUFFERSUBDATAPROC, glBufferSubData); \
    HookExtension(PFNGLCHECKFRAMEBUFFERSTATUSPROC, glCheckFramebufferStatus); \
    HookExtension(PFNGLCLEARPROC, glClear); \
    HookExtension(PFNGLCLEARCOLORPROC, glClearColor); \
    HookExtension(PFNGLCOLORMASKPROC, glColorMask); \
    HookExtension(PFNGLCOMPILESHADERPROC, glCompileShader); \
    HookExtension(PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC, glCompressedTexSubImage2D); \
    HookExtension(PFNGLCREATEPROGRAMPROC, glCreateProgram); \
    HookExtension(PFNGLCREATESHADERPROC, glCreateShader); \
    HookExtension(PFNGLDELETEBUFFERSPROC, glDeleteBuffers); \
    HookExtension(PFNGLDELETEFRAMEBUFFERSPROC, glDeleteFramebuffers); \
    HookExtension(PFNGLDELETEPROGRAMPROC, glDeleteProgram); \
    HookExtension(PFNGLDELETESHADERPROC, glDeleteShader); \
    HookExtension(PFNGLDELETETEXTURESPROC, glDeleteTextures); \
    HookExtension(PFNGLDEPTHFUNCPROC, glDepthFunc); \
    HookExtension(PFNGLDEPTHMASKPROC, glDepthMask); \
    HookExtension(PFNGLDETACHSHADERPROC, glDetachShader); \
    HookExtension(PFNGLDISABLEPROC, glDisable); \
    HookExtension(PFNGLDISABLEVERTEXATTRIBARRAYPROC, glDisableVertexAttribArray); \
    HookExtension(PFNGLDRAWARRAYSPROC, glDrawArrays); \
    HookExtension(PFNGLENABLEPROC, glEnable); \
    HookExtension(PFNGLENABLEVERTEXATTRIBARRAYPROC, glEnableVertexAttribArray); \
    HookExtension(PFNGLFINISHPROC, glFinish); \
    HookExtension(PFNGLFLUSHPROC, glFlush); \
    HookExtension(PFNGLFRAMEBUFFERTEXTURE2DPROC, glFramebufferTexture2D); \
    HookExtension(PFNGLGENBUFFERSPROC, glGenBuffers); \
    HookExtension(PFNGLGENFRAMEBUFFERSPROC, glGenFramebuffers); \
    HookExtension(PFNGLGENTEXTURESPROC, glGenTextures); \
    HookExtension(PFNGLGETBUFFERPARAMETERIVPROC, glGetBufferParameteriv); \
    HookExtension(PFNGLGETERRORPROC, glGetError); \
    HookExtension(PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC, glGetFramebufferAttachmentParameteriv); \
    HookExtension(PFNGLGETINTEGERVPROC, glGetIntegerv); \
    HookExtension(PFNGLGETPROGRAMIVPROC, glGetProgramiv); \
    HookExtension(PFNGLGETPROGRAMINFOLOGPROC, glGetProgramInfoLog); \
    HookExtension(PFNGLGETSHADERIVPROC, glGetShaderiv); \
    HookExtension(PFNGLGETSHADERINFOLOGPROC, glGetShaderInfoLog); \
    HookExtension(PFNGLGETTEXPARAMETERFVPROC, glGetTexParameterfv); \
    HookExtension(PFNGLGETTEXPARAMETERIVPROC, glGetTexParameteriv); \
    HookExtension(PFNGLGETUNIFORMFVPROC, glGetUniformfv); \
    HookExtension(PFNGLGETUNIFORMIVPROC, glGetUniformiv); \
    HookExtension(PFNGLGETUNIFORMLOCATIONPROC, glGetUniformLocation); \
    HookExtension(PFNGLGETVERTEXATTRIBFVPROC, glGetVertexAttribfv); \
    HookExtension(PFNGLGETVERTEXATTRIBIVPROC, glGetVertexAttribiv); \
    HookExtension(PFNGLISBUFFERPROC, glIsBuffer); \
    HookExtension(PFNGLISENABLEDPROC, glIsEnabled); \
    HookExtension(PFNGLISFRAMEBUFFERPROC, glIsFramebuffer); \
    HookExtension(PFNGLISPROGRAMPROC, glIsProgram); \
    HookExtension(PFNGLISRENDERBUFFERPROC, glIsRenderbuffer); \
    HookExtension(PFNGLISSHADERPROC, glIsShader); \
    HookExtension(PFNGLISTEXTUREPROC, glIsTexture); \
    HookExtension(PFNGLLINKPROGRAMPROC, glLinkProgram); \
    HookExtension(PFNGLSHADERSOURCEPROC, glShaderSource); \
    HookExtension(PFNGLSTENCILMASKPROC, glStencilMask); \
    HookExtension(PFNGLSTENCILMASKSEPARATEPROC, glStencilMaskSeparate); \
    HookExtension(PFNGLTEXPARAMETERIPROC, glTexParameteri); \
    HookExtension(PFNGLTEXPARAMETERIVPROC, glTexParameteriv); \
    HookExtension(PFNGLTEXSUBIMAGE2DPROC, glTexSubImage2D); \
    HookExtension(PFNGLUSEPROGRAMPROC, glUseProgram); \
    HookExtension(PFNGLVERTEXATTRIBPOINTERPROC, glVertexAttribPointer); \
    HookExtension(PFNGLVIEWPORTPROC, glViewport); \
    HookExtension(PFNGLREADBUFFERPROC, glReadBuffer); \
    HookExtension(PFNGLTEXSUBIMAGE3DPROC, glTexSubImage3D); \
    HookExtension(PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC, glCompressedTexSubImage3D); \
    HookExtension(PFNGLGENQUERIESPROC, glGenQueries); \
    HookExtension(PFNGLDELETEQUERIESPROC, glDeleteQueries); \
    HookExtension(PFNGLISQUERYPROC, glIsQuery); \
    HookExtension(PFNGLBEGINQUERYPROC, glBeginQuery); \
    HookExtension(PFNGLENDQUERYPROC, glEndQuery); \
    HookExtension(PFNGLGETQUERYOBJECTUIVPROC, glGetQueryObjectuiv); \
    HookExtension(PFNGLUNMAPBUFFERPROC, glUnmapBuffer); \
    HookExtension(PFNGLBLITFRAMEBUFFERPROC, glBlitFramebuffer); \
    HookExtension(PFNGLFRAMEBUFFERTEXTURELAYERPROC, glFramebufferTextureLayer); \
    HookExtension(PFNGLMAPBUFFERRANGEPROC, glMapBufferRange); \
    HookExtension(PFNGLBINDVERTEXARRAYPROC, glBindVertexArray); \
    HookExtension(PFNGLDELETEVERTEXARRAYSPROC, glDeleteVertexArrays); \
    HookExtension(PFNGLGENVERTEXARRAYSPROC, glGenVertexArrays); \
    HookExtension(PFNGLISVERTEXARRAYPROC, glIsVertexArray); \
    HookExtension(PFNGLGETINTEGERI_VPROC, glGetIntegeri_v); \
    HookExtension(PFNGLBEGINTRANSFORMFEEDBACKPROC, glBeginTransformFeedback); \
    HookExtension(PFNGLENDTRANSFORMFEEDBACKPROC, glEndTransformFeedback); \
    HookExtension(PFNGLBINDBUFFERBASEPROC, glBindBufferBase); \
    HookExtension(PFNGLTRANSFORMFEEDBACKVARYINGSPROC, glTransformFeedbackVaryings); \
    HookExtension(PFNGLGETUNIFORMUIVPROC, glGetUniformuiv); \
    HookExtension(PFNGLCLEARBUFFERIVPROC, glClearBufferiv); \
    HookExtension(PFNGLCLEARBUFFERFVPROC, glClearBufferfv); \
    HookExtension(PFNGLCLEARBUFFERFIPROC, glClearBufferfi); \
    HookExtension(PFNGLGETSTRINGIPROC, glGetStringi); \
    HookExtension(PFNGLISSYNCPROC, glIsSync); \
    HookExtension(PFNGLGETINTEGER64I_VPROC, glGetInteger64i_v); \
    HookExtension(PFNGLGENSAMPLERSPROC, glGenSamplers); \
    HookExtension(PFNGLDELETESAMPLERSPROC, glDeleteSamplers); \
    HookExtension(PFNGLISSAMPLERPROC, glIsSampler); \
    HookExtension(PFNGLBINDSAMPLERPROC, glBindSampler); \
    HookExtension(PFNGLSAMPLERPARAMETERIPROC, glSamplerParameteri); \
    HookExtension(PFNGLGETSAMPLERPARAMETERIVPROC, glGetSamplerParameteriv); \
    HookExtension(PFNGLGETSAMPLERPARAMETERFVPROC, glGetSamplerParameterfv); \
    HookExtension(PFNGLBINDTRANSFORMFEEDBACKPROC, glBindTransformFeedback); \
    HookExtension(PFNGLDELETETRANSFORMFEEDBACKSPROC, glDeleteTransformFeedbacks); \
    HookExtension(PFNGLGENTRANSFORMFEEDBACKSPROC, glGenTransformFeedbacks); \
    HookExtension(PFNGLISTRANSFORMFEEDBACKPROC, glIsTransformFeedback); \
    HookExtension(PFNGLPROGRAMPARAMETERIPROC, glProgramParameteri); \
    HookExtension(PFNGLTEXSTORAGE2DPROC, glTexStorage2D); \
    HookExtension(PFNGLGETPROGRAMRESOURCEINDEXPROC, glGetProgramResourceIndex); \
    HookExtension(PFNGLGETPROGRAMRESOURCEIVPROC, glGetProgramResourceiv); \
    HookExtension(PFNGLUSEPROGRAMSTAGESPROC, glUseProgramStages); \
    HookExtension(PFNGLCREATESHADERPROGRAMVPROC, glCreateShaderProgramv); \
    HookExtension(PFNGLBINDPROGRAMPIPELINEPROC, glBindProgramPipeline); \
    HookExtension(PFNGLDELETEPROGRAMPIPELINESPROC, glDeleteProgramPipelines); \
    HookExtension(PFNGLGENPROGRAMPIPELINESPROC, glGenProgramPipelines); \
    HookExtension(PFNGLISPROGRAMPIPELINEPROC, glIsProgramPipeline); \
    HookExtension(PFNGLBINDIMAGETEXTUREPROC, glBindImageTexture); \
    HookExtension(PFNGLGETBOOLEANI_VPROC, glGetBooleani_v); \
    HookExtension(PFNGLTEXSTORAGE2DMULTISAMPLEPROC, glTexStorage2DMultisample); \
    HookExtension(PFNGLGETTEXLEVELPARAMETERIVPROC, glGetTexLevelParameteriv); \
    HookExtension(PFNGLGETTEXLEVELPARAMETERFVPROC, glGetTexLevelParameterfv); \
    HookExtension(PFNGLBINDVERTEXBUFFERPROC, glBindVertexBuffer); \
    HookExtension(PFNGLVERTEXATTRIBFORMATPROC, glVertexAttribFormat); \
    HookExtension(PFNGLVERTEXATTRIBIFORMATPROC, glVertexAttribIFormat); \
    HookExtension(PFNGLGETDEBUGMESSAGELOGPROC, glGetDebugMessageLog); \
    HookExtension(PFNGLOBJECTLABELPROC, glObjectLabel); \
    HookExtension(PFNGLGETOBJECTLABELPROC, glGetObjectLabel); \
    HookExtension(PFNGLDISABLEIPROC, glDisablei); \
    HookExtension(PFNGLISENABLEDIPROC, glIsEnabledi); \
    HookExtension(PFNGLDRAWELEMENTSBASEVERTEXPROC, glDrawElementsBaseVertex); \
    HookExtension(PFNGLFRAMEBUFFERTEXTUREPROC, glFramebufferTexture); \
    HookExtension(PFNGLGETGRAPHICSRESETSTATUSPROC, glGetGraphicsResetStatus); \
    HookExtension(PFNGLGETTEXPARAMETERIIVPROC, glGetTexParameterIiv); \
    HookExtension(PFNGLGETTEXPARAMETERIUIVPROC, glGetTexParameterIuiv); \
    HookExtension(PFNGLTEXSTORAGE3DMULTISAMPLEPROC, glTexStorage3DMultisample); \



// dllexport functions
#define DefineDLLExportHooks() \
    HookWrapper1(void, glActiveTexture, GLenum, texture); \
    HookWrapper2(void, glAttachShader, GLuint, program, GLuint, shader); \
    HookWrapper2(void, glBindBuffer, GLenum, target, GLuint, buffer); \
    HookWrapper2(void, glBindFramebuffer, GLenum, target, GLuint, framebuffer); \
    HookWrapper2(void, glBindTexture, GLenum, target, GLuint, texture); \
    HookWrapper2(void, glBlendFunc, GLenum, sfactor, GLenum, dfactor); \
    HookWrapper4(void, glBufferData, GLenum, target, GLsizeiptr, size, const void *, data, GLenum, usage); \
    HookWrapper4(void, glBufferSubData, GLenum, target, GLintptr, offset, GLsizeiptr, size, const void *, data); \
    HookWrapper1(GLenum, glCheckFramebufferStatus, GLenum, target); \
    HookWrapper1(void, glClear, GLbitfield, mask); \
    HookWrapper4(void, glClearColor, GLfloat, red, GLfloat, green, GLfloat, blue, GLfloat, alpha); \
    HookWrapper4(void, glColorMask, GLboolean, red, GLboolean, green, GLboolean, blue, GLboolean, alpha); \
    HookWrapper1(void, glCompileShader, GLuint, shader); \
    HookWrapper9(void, glCompressedTexSubImage2D, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLsizei, width, GLsizei, height, GLenum, format, GLsizei, imageSize, const void *, data); \
    HookWrapper0(GLuint, glCreateProgram); \
    HookWrapper1(GLuint, glCreateShader, GLenum, type); \
    HookWrapper2(void, glDeleteBuffers, GLsizei, n, const GLuint *, buffers); \
    HookWrapper2(void, glDeleteFramebuffers, GLsizei, n, const GLuint *, framebuffers); \
    HookWrapper1(void, glDeleteProgram, GLuint, program); \
    HookWrapper1(void, glDeleteShader, GLuint, shader); \
    HookWrapper2(void, glDeleteTextures, GLsizei, n, const GLuint *, textures); \
    HookWrapper1(void, glDepthFunc, GLenum, func); \
    HookWrapper1(void, glDepthMask, GLboolean, flag); \
    HookWrapper2(void, glDetachShader, GLuint, program, GLuint, shader); \
    HookWrapper1(void, glDisable, GLenum, cap); \
    HookWrapper1(void, glDisableVertexAttribArray, GLuint, index); \
    HookWrapper3(void, glDrawArrays, GLenum, mode, GLint, first, GLsizei, count); \
    HookWrapper1(void, glEnable, GLenum, cap); \
    HookWrapper1(void, glEnableVertexAttribArray, GLuint, index); \
    HookWrapper0(void, glFinish); \
    HookWrapper0(void, glFlush); \
    HookWrapper5(void, glFramebufferTexture2D, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level); \
    HookWrapper2(void, glGenBuffers, GLsizei, n, GLuint *, buffers); \
    HookWrapper2(void, glGenFramebuffers, GLsizei, n, GLuint *, framebuffers); \
    HookWrapper2(void, glGenTextures, GLsizei, n, GLuint *, textures); \
    HookWrapper3(void, glGetBufferParameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper0(GLenum, glGetError); \
    HookWrapper4(void, glGetFramebufferAttachmentParameteriv, GLenum, target, GLenum, attachment, GLenum, pname, GLint *, params); \
    HookWrapper2(void, glGetIntegerv, GLenum, pname, GLint *, data); \
    HookWrapper3(void, glGetProgramiv, GLuint, program, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetProgramInfoLog, GLuint, program, GLsizei, bufSize, GLsizei *, length, GLchar *, infoLog); \
    HookWrapper3(void, glGetShaderiv, GLuint, shader, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetShaderInfoLog, GLuint, shader, GLsizei, bufSize, GLsizei *, length, GLchar *, infoLog); \
    HookWrapper3(void, glGetTexParameterfv, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetTexParameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetUniformfv, GLuint, program, GLint, location, GLfloat *, params); \
    HookWrapper3(void, glGetUniformiv, GLuint, program, GLint, location, GLint *, params); \
    HookWrapper2(GLint, glGetUniformLocation, GLuint, program, const GLchar *, name); \
    HookWrapper3(void, glGetVertexAttribfv, GLuint, index, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetVertexAttribiv, GLuint, index, GLenum, pname, GLint *, params); \
    HookWrapper1(GLboolean, glIsBuffer, GLuint, buffer); \
    HookWrapper1(GLboolean, glIsEnabled, GLenum, cap); \
    HookWrapper1(GLboolean, glIsFramebuffer, GLuint, framebuffer); \
    HookWrapper1(GLboolean, glIsProgram, GLuint, program); \
    HookWrapper1(GLboolean, glIsRenderbuffer, GLuint, renderbuffer); \
    HookWrapper1(GLboolean, glIsShader, GLuint, shader); \
    HookWrapper1(GLboolean, glIsTexture, GLuint, texture); \
    HookWrapper1(void, glLinkProgram, GLuint, program); \
    HookWrapper4(void, glShaderSource, GLuint, shader, GLsizei, count, const GLchar *const*, string, const GLint *, length); \
    HookWrapper1(void, glStencilMask, GLuint, mask); \
    HookWrapper2(void, glStencilMaskSeparate, GLenum, face, GLuint, mask); \
    HookWrapper3(void, glTexParameteri, GLenum, target, GLenum, pname, GLint, param); \
    HookWrapper3(void, glTexParameteriv, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper9(void, glTexSubImage2D, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper1(void, glUseProgram, GLuint, program); \
    HookWrapper6(void, glVertexAttribPointer, GLuint, index, GLint, size, GLenum, type, GLboolean, normalized, GLsizei, stride, const void *, pointer); \
    HookWrapper4(void, glViewport, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper1(void, glReadBuffer, GLenum, src); \
    HookWrapper11(void, glTexSubImage3D, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper11(void, glCompressedTexSubImage3D, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLsizei, imageSize, const void *, data); \
    HookWrapper2(void, glGenQueries, GLsizei, n, GLuint *, ids); \
    HookWrapper2(void, glDeleteQueries, GLsizei, n, const GLuint *, ids); \
    HookWrapper1(GLboolean, glIsQuery, GLuint, id); \
    HookWrapper2(void, glBeginQuery, GLenum, target, GLuint, id); \
    HookWrapper1(void, glEndQuery, GLenum, target); \
    HookWrapper3(void, glGetQueryObjectuiv, GLuint, id, GLenum, pname, GLuint *, params); \
    HookWrapper1(GLboolean, glUnmapBuffer, GLenum, target); \
    HookWrapper10(void, glBlitFramebuffer, GLint, srcX0, GLint, srcY0, GLint, srcX1, GLint, srcY1, GLint, dstX0, GLint, dstY0, GLint, dstX1, GLint, dstY1, GLbitfield, mask, GLenum, filter); \
    HookWrapper5(void, glFramebufferTextureLayer, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level, GLint, layer); \
    HookWrapper4(void *, glMapBufferRange, GLenum, target, GLintptr, offset, GLsizeiptr, length, GLbitfield, access); \
    HookWrapper1(void, glBindVertexArray, GLuint, array); \
    HookWrapper2(void, glDeleteVertexArrays, GLsizei, n, const GLuint *, arrays); \
    HookWrapper2(void, glGenVertexArrays, GLsizei, n, GLuint *, arrays); \
    HookWrapper1(GLboolean, glIsVertexArray, GLuint, array); \
    HookWrapper3(void, glGetIntegeri_v, GLenum, target, GLuint, index, GLint *, data); \
    HookWrapper1(void, glBeginTransformFeedback, GLenum, primitiveMode); \
    HookWrapper0(void, glEndTransformFeedback); \
    HookWrapper3(void, glBindBufferBase, GLenum, target, GLuint, index, GLuint, buffer); \
    HookWrapper4(void, glTransformFeedbackVaryings, GLuint, program, GLsizei, count, const GLchar *const*, varyings, GLenum, bufferMode); \
    HookWrapper3(void, glGetUniformuiv, GLuint, program, GLint, location, GLuint *, params); \
    HookWrapper3(void, glClearBufferiv, GLenum, buffer, GLint, drawbuffer, const GLint *, value); \
    HookWrapper3(void, glClearBufferfv, GLenum, buffer, GLint, drawbuffer, const GLfloat *, value); \
    HookWrapper4(void, glClearBufferfi, GLenum, buffer, GLint, drawbuffer, GLfloat, depth, GLint, stencil); \
    HookWrapper2(const GLubyte *, glGetStringi, GLenum, name, GLuint, index); \
    HookWrapper1(GLboolean, glIsSync, GLsync, sync); \
    HookWrapper3(void, glGetInteger64i_v, GLenum, target, GLuint, index, GLint64 *, data); \
    HookWrapper2(void, glGenSamplers, GLsizei, count, GLuint *, samplers); \
    HookWrapper2(void, glDeleteSamplers, GLsizei, count, const GLuint *, samplers); \
    HookWrapper1(GLboolean, glIsSampler, GLuint, sampler); \
    HookWrapper2(void, glBindSampler, GLuint, unit, GLuint, sampler); \
    HookWrapper3(void, glSamplerParameteri, GLuint, sampler, GLenum, pname, GLint, param); \
    HookWrapper3(void, glGetSamplerParameteriv, GLuint, sampler, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetSamplerParameterfv, GLuint, sampler, GLenum, pname, GLfloat *, params); \
    HookWrapper2(void, glBindTransformFeedback, GLenum, target, GLuint, id); \
    HookWrapper2(void, glDeleteTransformFeedbacks, GLsizei, n, const GLuint *, ids); \
    HookWrapper2(void, glGenTransformFeedbacks, GLsizei, n, GLuint *, ids); \
    HookWrapper1(GLboolean, glIsTransformFeedback, GLuint, id); \
    HookWrapper3(void, glProgramParameteri, GLuint, program, GLenum, pname, GLint, value); \
    HookWrapper5(void, glTexStorage2D, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper3(GLuint, glGetProgramResourceIndex, GLuint, program, GLenum, programInterface, const GLchar *, name); \
    HookWrapper8(void, glGetProgramResourceiv, GLuint, program, GLenum, programInterface, GLuint, index, GLsizei, propCount, const GLenum *, props, GLsizei, bufSize, GLsizei *, length, GLint *, params); \
    HookWrapper3(void, glUseProgramStages, GLuint, pipeline, GLbitfield, stages, GLuint, program); \
    HookWrapper3(GLuint, glCreateShaderProgramv, GLenum, type, GLsizei, count, const GLchar *const*, strings); \
    HookWrapper1(void, glBindProgramPipeline, GLuint, pipeline); \
    HookWrapper2(void, glDeleteProgramPipelines, GLsizei, n, const GLuint *, pipelines); \
    HookWrapper2(void, glGenProgramPipelines, GLsizei, n, GLuint *, pipelines); \
    HookWrapper1(GLboolean, glIsProgramPipeline, GLuint, pipeline); \
    HookWrapper7(void, glBindImageTexture, GLuint, unit, GLuint, texture, GLint, level, GLboolean, layered, GLint, layer, GLenum, access, GLenum, format); \
    HookWrapper3(void, glGetBooleani_v, GLenum, target, GLuint, index, GLboolean *, data); \
    HookWrapper6(void, glTexStorage2DMultisample, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height, GLboolean, fixedsamplelocations); \
    HookWrapper4(void, glGetTexLevelParameteriv, GLenum, target, GLint, level, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetTexLevelParameterfv, GLenum, target, GLint, level, GLenum, pname, GLfloat *, params); \
    HookWrapper4(void, glBindVertexBuffer, GLuint, bindingindex, GLuint, buffer, GLintptr, offset, GLsizei, stride); \
    HookWrapper5(void, glVertexAttribFormat, GLuint, attribindex, GLint, size, GLenum, type, GLboolean, normalized, GLuint, relativeoffset); \
    HookWrapper4(void, glVertexAttribIFormat, GLuint, attribindex, GLint, size, GLenum, type, GLuint, relativeoffset); \
    HookWrapper8(GLuint, glGetDebugMessageLog, GLuint, count, GLsizei, bufSize, GLenum *, sources, GLenum *, types, GLuint *, ids, GLenum *, severities, GLsizei *, lengths, GLchar *, messageLog); \
    HookWrapper4(void, glObjectLabel, GLenum, identifier, GLuint, name, GLsizei, length, const GLchar *, label); \
    HookWrapper5(void, glGetObjectLabel, GLenum, identifier, GLuint, name, GLsizei, bufSize, GLsizei *, length, GLchar *, label); \
    HookWrapper2(void, glDisablei, GLenum, target, GLuint, index); \
    HookWrapper2(GLboolean, glIsEnabledi, GLenum, target, GLuint, index); \
    HookWrapper5(void, glDrawElementsBaseVertex, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLint, basevertex); \
    HookWrapper4(void, glFramebufferTexture, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level); \
    HookWrapper0(GLenum, glGetGraphicsResetStatus); \
    HookWrapper3(void, glGetTexParameterIiv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetTexParameterIuiv, GLenum, target, GLenum, pname, GLuint *, params); \
    HookWrapper7(void, glTexStorage3DMultisample, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, fixedsamplelocations); \



// gl extensions
#define DefineGLExtensionHooks() \
    HookWrapper4(void, glFramebufferTextureOES, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level); \
    HookWrapper2(void *, glMapBufferOES, GLenum, target, GLenum, access); \
    HookWrapper1(GLboolean, glUnmapBufferOES, GLenum, target); \
    HookWrapper6(void, glFramebufferTexture3DOES, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level, GLint, zoffset); \
    HookWrapper3(void, glViewportArrayvOES, GLuint, first, GLsizei, count, const GLfloat *, v); \
    HookWrapper5(void, glViewportIndexedfOES, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, w, GLfloat, h); \
    HookWrapper5(void, glDrawArraysInstancedBaseInstanceEXT, GLenum, mode, GLint, first, GLsizei, count, GLsizei, instancecount, GLuint, baseinstance); \
    HookWrapper7(void, glDrawElementsInstancedBaseVertexBaseInstanceEXT, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount, GLint, basevertex, GLuint, baseinstance); \
    HookWrapper4(void, glBufferStorageEXT, GLenum, target, GLsizeiptr, size, const void *, data, GLbitfield, flags); \
    HookWrapper6(void, glTextureStorage2DEXT, GLuint, texture, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper7(void, glTextureStorage3DEXT, GLuint, texture, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth); \
    HookWrapper2(void, glPolygonModeNV, GLenum, face, GLenum, mode); \
    HookWrapper3(void, glGetFloati_vNV, GLenum, target, GLuint, index, GLfloat *, data); \



// unsupported entry points - used for dummy functions
#define DefineUnsupportedDummies() \
    HookWrapper3(void, glbindattriblocation, GLuint, program, GLuint, index, const GLchar *, name); \
    HookWrapper2(void, glbindrenderbuffer, GLenum, target, GLuint, renderbuffer); \
    HookWrapper4(void, glblendcolor, GLfloat, red, GLfloat, green, GLfloat, blue, GLfloat, alpha); \
    HookWrapper1(void, glblendequation, GLenum, mode); \
    HookWrapper2(void, glblendequationseparate, GLenum, modeRGB, GLenum, modeAlpha); \
    HookWrapper4(void, glblendfuncseparate, GLenum, sfactorRGB, GLenum, dfactorRGB, GLenum, sfactorAlpha, GLenum, dfactorAlpha); \
    HookWrapper1(void, glcleardepthf, GLfloat, d); \
    HookWrapper1(void, glclearstencil, GLint, s); \
    HookWrapper8(void, glcompressedteximage2d, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLint, border, GLsizei, imageSize, const void *, data); \
    HookWrapper8(void, glcopyteximage2d, GLenum, target, GLint, level, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLint, border); \
    HookWrapper8(void, glcopytexsubimage2d, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper1(void, glcullface, GLenum, mode); \
    HookWrapper2(void, gldeleterenderbuffers, GLsizei, n, const GLuint *, renderbuffers); \
    HookWrapper2(void, gldepthrangef, GLfloat, n, GLfloat, f); \
    HookWrapper4(void, gldrawelements, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices); \
    HookWrapper4(void, glframebufferrenderbuffer, GLenum, target, GLenum, attachment, GLenum, renderbuffertarget, GLuint, renderbuffer); \
    HookWrapper1(void, glfrontface, GLenum, mode); \
    HookWrapper1(void, glgeneratemipmap, GLenum, target); \
    HookWrapper2(void, glgenrenderbuffers, GLsizei, n, GLuint *, renderbuffers); \
    HookWrapper7(void, glgetactiveattrib, GLuint, program, GLuint, index, GLsizei, bufSize, GLsizei *, length, GLint *, size, GLenum *, type, GLchar *, name); \
    HookWrapper7(void, glgetactiveuniform, GLuint, program, GLuint, index, GLsizei, bufSize, GLsizei *, length, GLint *, size, GLenum *, type, GLchar *, name); \
    HookWrapper4(void, glgetattachedshaders, GLuint, program, GLsizei, maxCount, GLsizei *, count, GLuint *, shaders); \
    HookWrapper2(GLint, glgetattriblocation, GLuint, program, const GLchar *, name); \
    HookWrapper2(void, glgetbooleanv, GLenum, pname, GLboolean *, data); \
    HookWrapper2(void, glgetfloatv, GLenum, pname, GLfloat *, data); \
    HookWrapper3(void, glgetrenderbufferparameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glgetshaderprecisionformat, GLenum, shadertype, GLenum, precisiontype, GLint *, range, GLint *, precision); \
    HookWrapper4(void, glgetshadersource, GLuint, shader, GLsizei, bufSize, GLsizei *, length, GLchar *, source); \
    HookWrapper1(const GLubyte *, glgetstring, GLenum, name); \
    HookWrapper3(void, glgetvertexattribpointerv, GLuint, index, GLenum, pname, void **, pointer); \
    HookWrapper2(void, glhint, GLenum, target, GLenum, mode); \
    HookWrapper1(void, gllinewidth, GLfloat, width); \
    HookWrapper2(void, glpixelstorei, GLenum, pname, GLint, param); \
    HookWrapper2(void, glpolygonoffset, GLfloat, factor, GLfloat, units); \
    HookWrapper7(void, glreadpixels, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, void *, pixels); \
    HookWrapper0(void, glreleaseshadercompiler); \
    HookWrapper4(void, glrenderbufferstorage, GLenum, target, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper2(void, glsamplecoverage, GLfloat, value, GLboolean, invert); \
    HookWrapper4(void, glscissor, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper5(void, glshaderbinary, GLsizei, count, const GLuint *, shaders, GLenum, binaryformat, const void *, binary, GLsizei, length); \
    HookWrapper3(void, glstencilfunc, GLenum, func, GLint, ref, GLuint, mask); \
    HookWrapper4(void, glstencilfuncseparate, GLenum, face, GLenum, func, GLint, ref, GLuint, mask); \
    HookWrapper3(void, glstencilop, GLenum, fail, GLenum, zfail, GLenum, zpass); \
    HookWrapper4(void, glstencilopseparate, GLenum, face, GLenum, sfail, GLenum, dpfail, GLenum, dppass); \
    HookWrapper9(void, glteximage2d, GLenum, target, GLint, level, GLint, internalformat, GLsizei, width, GLsizei, height, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper3(void, gltexparameterf, GLenum, target, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, gltexparameterfv, GLenum, target, GLenum, pname, const GLfloat *, params); \
    HookWrapper2(void, gluniform1f, GLint, location, GLfloat, v0); \
    HookWrapper3(void, gluniform1fv, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper2(void, gluniform1i, GLint, location, GLint, v0); \
    HookWrapper3(void, gluniform1iv, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper3(void, gluniform2f, GLint, location, GLfloat, v0, GLfloat, v1); \
    HookWrapper3(void, gluniform2fv, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper3(void, gluniform2i, GLint, location, GLint, v0, GLint, v1); \
    HookWrapper3(void, gluniform2iv, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, gluniform3f, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2); \
    HookWrapper3(void, gluniform3fv, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper4(void, gluniform3i, GLint, location, GLint, v0, GLint, v1, GLint, v2); \
    HookWrapper3(void, gluniform3iv, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper5(void, gluniform4f, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2, GLfloat, v3); \
    HookWrapper3(void, gluniform4fv, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper5(void, gluniform4i, GLint, location, GLint, v0, GLint, v1, GLint, v2, GLint, v3); \
    HookWrapper3(void, gluniform4iv, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, gluniformmatrix2fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix3fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix4fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper1(void, glvalidateprogram, GLuint, program); \
    HookWrapper2(void, glvertexattrib1f, GLuint, index, GLfloat, x); \
    HookWrapper2(void, glvertexattrib1fv, GLuint, index, const GLfloat *, v); \
    HookWrapper3(void, glvertexattrib2f, GLuint, index, GLfloat, x, GLfloat, y); \
    HookWrapper2(void, glvertexattrib2fv, GLuint, index, const GLfloat *, v); \
    HookWrapper4(void, glvertexattrib3f, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper2(void, glvertexattrib3fv, GLuint, index, const GLfloat *, v); \
    HookWrapper5(void, glvertexattrib4f, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookWrapper2(void, glvertexattrib4fv, GLuint, index, const GLfloat *, v); \
    HookWrapper6(void, gldrawrangeelements, GLenum, mode, GLuint, start, GLuint, end, GLsizei, count, GLenum, type, const void *, indices); \
    HookWrapper10(void, glteximage3d, GLenum, target, GLint, level, GLint, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper9(void, glcopytexsubimage3d, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper9(void, glcompressedteximage3d, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLsizei, imageSize, const void *, data); \
    HookWrapper3(void, glgetqueryiv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgetbufferpointerv, GLenum, target, GLenum, pname, void **, params); \
    HookWrapper2(void, gldrawbuffers, GLsizei, n, const GLenum *, bufs); \
    HookWrapper4(void, gluniformmatrix2x3fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix3x2fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix2x4fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix4x2fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix3x4fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix4x3fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glrenderbufferstoragemultisample, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper3(void, glflushmappedbufferrange, GLenum, target, GLintptr, offset, GLsizeiptr, length); \
    HookWrapper5(void, glbindbufferrange, GLenum, target, GLuint, index, GLuint, buffer, GLintptr, offset, GLsizeiptr, size); \
    HookWrapper7(void, glgettransformfeedbackvarying, GLuint, program, GLuint, index, GLsizei, bufSize, GLsizei *, length, GLsizei *, size, GLenum *, type, GLchar *, name); \
    HookWrapper5(void, glvertexattribipointer, GLuint, index, GLint, size, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper3(void, glgetvertexattribiiv, GLuint, index, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgetvertexattribiuiv, GLuint, index, GLenum, pname, GLuint *, params); \
    HookWrapper5(void, glvertexattribi4i, GLuint, index, GLint, x, GLint, y, GLint, z, GLint, w); \
    HookWrapper5(void, glvertexattribi4ui, GLuint, index, GLuint, x, GLuint, y, GLuint, z, GLuint, w); \
    HookWrapper2(void, glvertexattribi4iv, GLuint, index, const GLint *, v); \
    HookWrapper2(void, glvertexattribi4uiv, GLuint, index, const GLuint *, v); \
    HookWrapper2(GLint, glgetfragdatalocation, GLuint, program, const GLchar *, name); \
    HookWrapper2(void, gluniform1ui, GLint, location, GLuint, v0); \
    HookWrapper3(void, gluniform2ui, GLint, location, GLuint, v0, GLuint, v1); \
    HookWrapper4(void, gluniform3ui, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2); \
    HookWrapper5(void, gluniform4ui, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2, GLuint, v3); \
    HookWrapper3(void, gluniform1uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper3(void, gluniform2uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper3(void, gluniform3uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper3(void, gluniform4uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper3(void, glclearbufferuiv, GLenum, buffer, GLint, drawbuffer, const GLuint *, value); \
    HookWrapper5(void, glcopybuffersubdata, GLenum, readTarget, GLenum, writeTarget, GLintptr, readOffset, GLintptr, writeOffset, GLsizeiptr, size); \
    HookWrapper4(void, glgetuniformindices, GLuint, program, GLsizei, uniformCount, const GLchar *const*, uniformNames, GLuint *, uniformIndices); \
    HookWrapper5(void, glgetactiveuniformsiv, GLuint, program, GLsizei, uniformCount, const GLuint *, uniformIndices, GLenum, pname, GLint *, params); \
    HookWrapper2(GLuint, glgetuniformblockindex, GLuint, program, const GLchar *, uniformBlockName); \
    HookWrapper4(void, glgetactiveuniformblockiv, GLuint, program, GLuint, uniformBlockIndex, GLenum, pname, GLint *, params); \
    HookWrapper5(void, glgetactiveuniformblockname, GLuint, program, GLuint, uniformBlockIndex, GLsizei, bufSize, GLsizei *, length, GLchar *, uniformBlockName); \
    HookWrapper3(void, gluniformblockbinding, GLuint, program, GLuint, uniformBlockIndex, GLuint, uniformBlockBinding); \
    HookWrapper4(void, gldrawarraysinstanced, GLenum, mode, GLint, first, GLsizei, count, GLsizei, instancecount); \
    HookWrapper5(void, gldrawelementsinstanced, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount); \
    HookWrapper2(GLsync, glfencesync, GLenum, condition, GLbitfield, flags); \
    HookWrapper1(void, gldeletesync, GLsync, sync); \
    HookWrapper3(GLenum, glclientwaitsync, GLsync, sync, GLbitfield, flags, GLuint64, timeout); \
    HookWrapper3(void, glwaitsync, GLsync, sync, GLbitfield, flags, GLuint64, timeout); \
    HookWrapper2(void, glgetinteger64v, GLenum, pname, GLint64 *, data); \
    HookWrapper5(void, glgetsynciv, GLsync, sync, GLenum, pname, GLsizei, bufSize, GLsizei *, length, GLint *, values); \
    HookWrapper3(void, glgetbufferparameteri64v, GLenum, target, GLenum, pname, GLint64 *, params); \
    HookWrapper3(void, glsamplerparameteriv, GLuint, sampler, GLenum, pname, const GLint *, param); \
    HookWrapper3(void, glsamplerparameterf, GLuint, sampler, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, glsamplerparameterfv, GLuint, sampler, GLenum, pname, const GLfloat *, param); \
    HookWrapper2(void, glvertexattribdivisor, GLuint, index, GLuint, divisor); \
    HookWrapper0(void, glpausetransformfeedback); \
    HookWrapper0(void, glresumetransformfeedback); \
    HookWrapper5(void, glgetprogrambinary, GLuint, program, GLsizei, bufSize, GLsizei *, length, GLenum *, binaryFormat, void *, binary); \
    HookWrapper4(void, glprogrambinary, GLuint, program, GLenum, binaryFormat, const void *, binary, GLsizei, length); \
    HookWrapper3(void, glinvalidateframebuffer, GLenum, target, GLsizei, numAttachments, const GLenum *, attachments); \
    HookWrapper7(void, glinvalidatesubframebuffer, GLenum, target, GLsizei, numAttachments, const GLenum *, attachments, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper6(void, gltexstorage3d, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth); \
    HookWrapper5(void, glgetinternalformativ, GLenum, target, GLenum, internalformat, GLenum, pname, GLsizei, bufSize, GLint *, params); \
    HookWrapper3(void, gldispatchcompute, GLuint, num_groups_x, GLuint, num_groups_y, GLuint, num_groups_z); \
    HookWrapper1(void, gldispatchcomputeindirect, GLintptr, indirect); \
    HookWrapper2(void, gldrawarraysindirect, GLenum, mode, const void *, indirect); \
    HookWrapper3(void, gldrawelementsindirect, GLenum, mode, GLenum, type, const void *, indirect); \
    HookWrapper3(void, glframebufferparameteri, GLenum, target, GLenum, pname, GLint, param); \
    HookWrapper3(void, glgetframebufferparameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glgetprograminterfaceiv, GLuint, program, GLenum, programInterface, GLenum, pname, GLint *, params); \
    HookWrapper6(void, glgetprogramresourcename, GLuint, program, GLenum, programInterface, GLuint, index, GLsizei, bufSize, GLsizei *, length, GLchar *, name); \
    HookWrapper3(GLint, glgetprogramresourcelocation, GLuint, program, GLenum, programInterface, const GLchar *, name); \
    HookWrapper2(void, glactiveshaderprogram, GLuint, pipeline, GLuint, program); \
    HookWrapper3(void, glgetprogrampipelineiv, GLuint, pipeline, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glprogramuniform1i, GLuint, program, GLint, location, GLint, v0); \
    HookWrapper4(void, glprogramuniform2i, GLuint, program, GLint, location, GLint, v0, GLint, v1); \
    HookWrapper5(void, glprogramuniform3i, GLuint, program, GLint, location, GLint, v0, GLint, v1, GLint, v2); \
    HookWrapper6(void, glprogramuniform4i, GLuint, program, GLint, location, GLint, v0, GLint, v1, GLint, v2, GLint, v3); \
    HookWrapper3(void, glprogramuniform1ui, GLuint, program, GLint, location, GLuint, v0); \
    HookWrapper4(void, glprogramuniform2ui, GLuint, program, GLint, location, GLuint, v0, GLuint, v1); \
    HookWrapper5(void, glprogramuniform3ui, GLuint, program, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2); \
    HookWrapper6(void, glprogramuniform4ui, GLuint, program, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2, GLuint, v3); \
    HookWrapper3(void, glprogramuniform1f, GLuint, program, GLint, location, GLfloat, v0); \
    HookWrapper4(void, glprogramuniform2f, GLuint, program, GLint, location, GLfloat, v0, GLfloat, v1); \
    HookWrapper5(void, glprogramuniform3f, GLuint, program, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2); \
    HookWrapper6(void, glprogramuniform4f, GLuint, program, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2, GLfloat, v3); \
    HookWrapper4(void, glprogramuniform1iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, glprogramuniform2iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, glprogramuniform3iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, glprogramuniform4iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, glprogramuniform1uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper4(void, glprogramuniform2uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper4(void, glprogramuniform3uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper4(void, glprogramuniform4uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper4(void, glprogramuniform1fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper4(void, glprogramuniform2fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper4(void, glprogramuniform3fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper4(void, glprogramuniform4fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix2fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix3fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix4fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix2x3fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix3x2fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix2x4fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix4x2fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix3x4fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix4x3fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper1(void, glvalidateprogrampipeline, GLuint, pipeline); \
    HookWrapper4(void, glgetprogrampipelineinfolog, GLuint, pipeline, GLsizei, bufSize, GLsizei *, length, GLchar *, infoLog); \
    HookWrapper1(void, glmemorybarrier, GLbitfield, barriers); \
    HookWrapper1(void, glmemorybarrierbyregion, GLbitfield, barriers); \
    HookWrapper3(void, glgetmultisamplefv, GLenum, pname, GLuint, index, GLfloat *, val); \
    HookWrapper2(void, glsamplemaski, GLuint, maskNumber, GLbitfield, mask); \
    HookWrapper2(void, glvertexattribbinding, GLuint, attribindex, GLuint, bindingindex); \
    HookWrapper2(void, glvertexbindingdivisor, GLuint, bindingindex, GLuint, divisor); \
    HookWrapper0(void, glblendbarrier); \
    HookWrapper15(void, glcopyimagesubdata, GLuint, srcName, GLenum, srcTarget, GLint, srcLevel, GLint, srcX, GLint, srcY, GLint, srcZ, GLuint, dstName, GLenum, dstTarget, GLint, dstLevel, GLint, dstX, GLint, dstY, GLint, dstZ, GLsizei, srcWidth, GLsizei, srcHeight, GLsizei, srcDepth); \
    HookWrapper6(void, gldebugmessagecontrol, GLenum, source, GLenum, type, GLenum, severity, GLsizei, count, const GLuint *, ids, GLboolean, enabled); \
    HookWrapper6(void, gldebugmessageinsert, GLenum, source, GLenum, type, GLuint, id, GLenum, severity, GLsizei, length, const GLchar *, buf); \
    HookWrapper2(void, gldebugmessagecallback, GLDEBUGPROC, callback, const void *, userParam); \
    HookWrapper4(void, glpushdebuggroup, GLenum, source, GLuint, id, GLsizei, length, const GLchar *, message); \
    HookWrapper0(void, glpopdebuggroup); \
    HookWrapper3(void, globjectptrlabel, const void *, ptr, GLsizei, length, const GLchar *, label); \
    HookWrapper4(void, glgetobjectptrlabel, const void *, ptr, GLsizei, bufSize, GLsizei *, length, GLchar *, label); \
    HookWrapper2(void, glgetpointerv, GLenum, pname, void **, params); \
    HookWrapper2(void, glenablei, GLenum, target, GLuint, index); \
    HookWrapper2(void, glblendequationi, GLuint, buf, GLenum, mode); \
    HookWrapper3(void, glblendequationseparatei, GLuint, buf, GLenum, modeRGB, GLenum, modeAlpha); \
    HookWrapper3(void, glblendfunci, GLuint, buf, GLenum, src, GLenum, dst); \
    HookWrapper5(void, glblendfuncseparatei, GLuint, buf, GLenum, srcRGB, GLenum, dstRGB, GLenum, srcAlpha, GLenum, dstAlpha); \
    HookWrapper5(void, glcolormaski, GLuint, index, GLboolean, r, GLboolean, g, GLboolean, b, GLboolean, a); \
    HookWrapper7(void, gldrawrangeelementsbasevertex, GLenum, mode, GLuint, start, GLuint, end, GLsizei, count, GLenum, type, const void *, indices, GLint, basevertex); \
    HookWrapper6(void, gldrawelementsinstancedbasevertex, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount, GLint, basevertex); \
    HookWrapper8(void, glprimitiveboundingbox, GLfloat, minX, GLfloat, minY, GLfloat, minZ, GLfloat, minW, GLfloat, maxX, GLfloat, maxY, GLfloat, maxZ, GLfloat, maxW); \
    HookWrapper8(void, glreadnpixels, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, GLsizei, bufSize, void *, data); \
    HookWrapper4(void, glgetnuniformfv, GLuint, program, GLint, location, GLsizei, bufSize, GLfloat *, params); \
    HookWrapper4(void, glgetnuniformiv, GLuint, program, GLint, location, GLsizei, bufSize, GLint *, params); \
    HookWrapper4(void, glgetnuniformuiv, GLuint, program, GLint, location, GLsizei, bufSize, GLuint *, params); \
    HookWrapper1(void, glminsampleshading, GLfloat, value); \
    HookWrapper2(void, glpatchparameteri, GLenum, pname, GLint, value); \
    HookWrapper3(void, gltexparameteriiv, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper3(void, gltexparameteriuiv, GLenum, target, GLenum, pname, const GLuint *, params); \
    HookWrapper3(void, glsamplerparameteriiv, GLuint, sampler, GLenum, pname, const GLint *, param); \
    HookWrapper3(void, glsamplerparameteriuiv, GLuint, sampler, GLenum, pname, const GLuint *, param); \
    HookWrapper3(void, glgetsamplerparameteriiv, GLuint, sampler, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgetsamplerparameteriuiv, GLuint, sampler, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, gltexbuffer, GLenum, target, GLenum, internalformat, GLuint, buffer); \
    HookWrapper5(void, gltexbufferrange, GLenum, target, GLenum, internalformat, GLuint, buffer, GLintptr, offset, GLsizeiptr, size); \
    HookWrapper0(void, glblendbarrierkhr); \
    HookWrapper6(void, gldebugmessagecontrolkhr, GLenum, source, GLenum, type, GLenum, severity, GLsizei, count, const GLuint *, ids, GLboolean, enabled); \
    HookWrapper6(void, gldebugmessageinsertkhr, GLenum, source, GLenum, type, GLuint, id, GLenum, severity, GLsizei, length, const GLchar *, buf); \
    HookWrapper2(void, gldebugmessagecallbackkhr, GLDEBUGPROCKHR, callback, const void *, userParam); \
    HookWrapper8(GLuint, glgetdebugmessagelogkhr, GLuint, count, GLsizei, bufSize, GLenum *, sources, GLenum *, types, GLuint *, ids, GLenum *, severities, GLsizei *, lengths, GLchar *, messageLog); \
    HookWrapper4(void, glpushdebuggroupkhr, GLenum, source, GLuint, id, GLsizei, length, const GLchar *, message); \
    HookWrapper0(void, glpopdebuggroupkhr); \
    HookWrapper4(void, globjectlabelkhr, GLenum, identifier, GLuint, name, GLsizei, length, const GLchar *, label); \
    HookWrapper5(void, glgetobjectlabelkhr, GLenum, identifier, GLuint, name, GLsizei, bufSize, GLsizei *, length, GLchar *, label); \
    HookWrapper3(void, globjectptrlabelkhr, const void *, ptr, GLsizei, length, const GLchar *, label); \
    HookWrapper4(void, glgetobjectptrlabelkhr, const void *, ptr, GLsizei, bufSize, GLsizei *, length, GLchar *, label); \
    HookWrapper2(void, glgetpointervkhr, GLenum, pname, void **, params); \
    HookWrapper0(GLenum, glgetgraphicsresetstatuskhr); \
    HookWrapper8(void, glreadnpixelskhr, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, GLsizei, bufSize, void *, data); \
    HookWrapper4(void, glgetnuniformfvkhr, GLuint, program, GLint, location, GLsizei, bufSize, GLfloat *, params); \
    HookWrapper4(void, glgetnuniformivkhr, GLuint, program, GLint, location, GLsizei, bufSize, GLint *, params); \
    HookWrapper4(void, glgetnuniformuivkhr, GLuint, program, GLint, location, GLsizei, bufSize, GLuint *, params); \
    HookWrapper2(void, gleglimagetargettexture2does, GLenum, target, GLeglImageOES, image); \
    HookWrapper2(void, gleglimagetargetrenderbufferstorageoes, GLenum, target, GLeglImageOES, image); \
    HookWrapper15(void, glcopyimagesubdataoes, GLuint, srcName, GLenum, srcTarget, GLint, srcLevel, GLint, srcX, GLint, srcY, GLint, srcZ, GLuint, dstName, GLenum, dstTarget, GLint, dstLevel, GLint, dstX, GLint, dstY, GLint, dstZ, GLsizei, srcWidth, GLsizei, srcHeight, GLsizei, srcDepth); \
    HookWrapper2(void, glenableioes, GLenum, target, GLuint, index); \
    HookWrapper2(void, gldisableioes, GLenum, target, GLuint, index); \
    HookWrapper2(void, glblendequationioes, GLuint, buf, GLenum, mode); \
    HookWrapper3(void, glblendequationseparateioes, GLuint, buf, GLenum, modeRGB, GLenum, modeAlpha); \
    HookWrapper3(void, glblendfuncioes, GLuint, buf, GLenum, src, GLenum, dst); \
    HookWrapper5(void, glblendfuncseparateioes, GLuint, buf, GLenum, srcRGB, GLenum, dstRGB, GLenum, srcAlpha, GLenum, dstAlpha); \
    HookWrapper5(void, glcolormaskioes, GLuint, index, GLboolean, r, GLboolean, g, GLboolean, b, GLboolean, a); \
    HookWrapper2(GLboolean, glisenabledioes, GLenum, target, GLuint, index); \
    HookWrapper5(void, gldrawelementsbasevertexoes, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLint, basevertex); \
    HookWrapper7(void, gldrawrangeelementsbasevertexoes, GLenum, mode, GLuint, start, GLuint, end, GLsizei, count, GLenum, type, const void *, indices, GLint, basevertex); \
    HookWrapper6(void, gldrawelementsinstancedbasevertexoes, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount, GLint, basevertex); \
    HookWrapper6(void, glmultidrawelementsbasevertexoes, GLenum, mode, const GLsizei *, count, GLenum, type, const void *const*, indices, GLsizei, primcount, const GLint *, basevertex); \
    HookWrapper5(void, glgetprogrambinaryoes, GLuint, program, GLsizei, bufSize, GLsizei *, length, GLenum *, binaryFormat, void *, binary); \
    HookWrapper4(void, glprogrambinaryoes, GLuint, program, GLenum, binaryFormat, const void *, binary, GLint, length); \
    HookWrapper3(void, glgetbufferpointervoes, GLenum, target, GLenum, pname, void **, params); \
    HookWrapper8(void, glprimitiveboundingboxoes, GLfloat, minX, GLfloat, minY, GLfloat, minZ, GLfloat, minW, GLfloat, maxX, GLfloat, maxY, GLfloat, maxZ, GLfloat, maxW); \
    HookWrapper1(void, glminsampleshadingoes, GLfloat, value); \
    HookWrapper2(void, glpatchparameterioes, GLenum, pname, GLint, value); \
    HookWrapper10(void, glteximage3does, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper11(void, gltexsubimage3does, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper9(void, glcopytexsubimage3does, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper9(void, glcompressedteximage3does, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLsizei, imageSize, const void *, data); \
    HookWrapper11(void, glcompressedtexsubimage3does, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLsizei, imageSize, const void *, data); \
    HookWrapper3(void, gltexparameteriivoes, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper3(void, gltexparameteriuivoes, GLenum, target, GLenum, pname, const GLuint *, params); \
    HookWrapper3(void, glgettexparameteriivoes, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgettexparameteriuivoes, GLenum, target, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, glsamplerparameteriivoes, GLuint, sampler, GLenum, pname, const GLint *, param); \
    HookWrapper3(void, glsamplerparameteriuivoes, GLuint, sampler, GLenum, pname, const GLuint *, param); \
    HookWrapper3(void, glgetsamplerparameteriivoes, GLuint, sampler, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgetsamplerparameteriuivoes, GLuint, sampler, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, gltexbufferoes, GLenum, target, GLenum, internalformat, GLuint, buffer); \
    HookWrapper5(void, gltexbufferrangeoes, GLenum, target, GLenum, internalformat, GLuint, buffer, GLintptr, offset, GLsizeiptr, size); \
    HookWrapper7(void, gltexstorage3dmultisampleoes, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, fixedsamplelocations); \
    HookWrapper8(void, gltextureviewoes, GLuint, texture, GLenum, target, GLuint, origtexture, GLenum, internalformat, GLuint, minlevel, GLuint, numlevels, GLuint, minlayer, GLuint, numlayers); \
    HookWrapper1(void, glbindvertexarrayoes, GLuint, array); \
    HookWrapper2(void, gldeletevertexarraysoes, GLsizei, n, const GLuint *, arrays); \
    HookWrapper2(void, glgenvertexarraysoes, GLsizei, n, GLuint *, arrays); \
    HookWrapper1(GLboolean, glisvertexarrayoes, GLuint, array); \
    HookWrapper2(void, glviewportindexedfvoes, GLuint, index, const GLfloat *, v); \
    HookWrapper3(void, glscissorarrayvoes, GLuint, first, GLsizei, count, const GLint *, v); \
    HookWrapper5(void, glscissorindexedoes, GLuint, index, GLint, left, GLint, bottom, GLsizei, width, GLsizei, height); \
    HookWrapper2(void, glscissorindexedvoes, GLuint, index, const GLint *, v); \
    HookWrapper3(void, gldepthrangearrayfvoes, GLuint, first, GLsizei, count, const GLfloat *, v); \
    HookWrapper3(void, gldepthrangeindexedfoes, GLuint, index, GLfloat, n, GLfloat, f); \
    HookWrapper3(void, glgetfloati_voes, GLenum, target, GLuint, index, GLfloat *, data); \
    HookWrapper3(void, glgetperfmonitorgroupsamd, GLint *, numGroups, GLsizei, groupsSize, GLuint *, groups); \
    HookWrapper5(void, glgetperfmonitorcountersamd, GLuint, group, GLint *, numCounters, GLint *, maxActiveCounters, GLsizei, counterSize, GLuint *, counters); \
    HookWrapper4(void, glgetperfmonitorgroupstringamd, GLuint, group, GLsizei, bufSize, GLsizei *, length, GLchar *, groupString); \
    HookWrapper5(void, glgetperfmonitorcounterstringamd, GLuint, group, GLuint, counter, GLsizei, bufSize, GLsizei *, length, GLchar *, counterString); \
    HookWrapper4(void, glgetperfmonitorcounterinfoamd, GLuint, group, GLuint, counter, GLenum, pname, void *, data); \
    HookWrapper2(void, glgenperfmonitorsamd, GLsizei, n, GLuint *, monitors); \
    HookWrapper2(void, gldeleteperfmonitorsamd, GLsizei, n, GLuint *, monitors); \
    HookWrapper5(void, glselectperfmonitorcountersamd, GLuint, monitor, GLboolean, enable, GLuint, group, GLint, numCounters, GLuint *, counterList); \
    HookWrapper1(void, glbeginperfmonitoramd, GLuint, monitor); \
    HookWrapper1(void, glendperfmonitoramd, GLuint, monitor); \
    HookWrapper5(void, glgetperfmonitorcounterdataamd, GLuint, monitor, GLenum, pname, GLsizei, dataSize, GLuint *, data, GLint *, bytesWritten); \
    HookWrapper10(void, glblitframebufferangle, GLint, srcX0, GLint, srcY0, GLint, srcX1, GLint, srcY1, GLint, dstX0, GLint, dstY0, GLint, dstX1, GLint, dstY1, GLbitfield, mask, GLenum, filter); \
    HookWrapper5(void, glrenderbufferstoragemultisampleangle, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper4(void, gldrawarraysinstancedangle, GLenum, mode, GLint, first, GLsizei, count, GLsizei, primcount); \
    HookWrapper5(void, gldrawelementsinstancedangle, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, primcount); \
    HookWrapper2(void, glvertexattribdivisorangle, GLuint, index, GLuint, divisor); \
    HookWrapper4(void, glgettranslatedshadersourceangle, GLuint, shader, GLsizei, bufsize, GLsizei *, length, GLchar *, source); \
    HookWrapper4(void, glcopytexturelevelsapple, GLuint, destinationTexture, GLuint, sourceTexture, GLint, sourceBaseLevel, GLsizei, sourceLevelCount); \
    HookWrapper5(void, glrenderbufferstoragemultisampleapple, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper0(void, glresolvemultisampleframebufferapple); \
    HookWrapper2(GLsync, glfencesyncapple, GLenum, condition, GLbitfield, flags); \
    HookWrapper1(GLboolean, glissyncapple, GLsync, sync); \
    HookWrapper1(void, gldeletesyncapple, GLsync, sync); \
    HookWrapper3(GLenum, glclientwaitsyncapple, GLsync, sync, GLbitfield, flags, GLuint64, timeout); \
    HookWrapper3(void, glwaitsyncapple, GLsync, sync, GLbitfield, flags, GLuint64, timeout); \
    HookWrapper2(void, glgetinteger64vapple, GLenum, pname, GLint64 *, params); \
    HookWrapper5(void, glgetsyncivapple, GLsync, sync, GLenum, pname, GLsizei, bufSize, GLsizei *, length, GLint *, values); \
    HookWrapper6(void, gldrawelementsinstancedbaseinstanceext, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount, GLuint, baseinstance); \
    HookWrapper4(void, glbindfragdatalocationindexedext, GLuint, program, GLuint, colorNumber, GLuint, index, const GLchar *, name); \
    HookWrapper3(void, glbindfragdatalocationext, GLuint, program, GLuint, color, const GLchar *, name); \
    HookWrapper3(GLint, glgetprogramresourcelocationindexext, GLuint, program, GLenum, programInterface, const GLchar *, name); \
    HookWrapper2(GLint, glgetfragdataindexext, GLuint, program, const GLchar *, name); \
    HookWrapper15(void, glcopyimagesubdataext, GLuint, srcName, GLenum, srcTarget, GLint, srcLevel, GLint, srcX, GLint, srcY, GLint, srcZ, GLuint, dstName, GLenum, dstTarget, GLint, dstLevel, GLint, dstX, GLint, dstY, GLint, dstZ, GLsizei, srcWidth, GLsizei, srcHeight, GLsizei, srcDepth); \
    HookWrapper4(void, gllabelobjectext, GLenum, type, GLuint, object, GLsizei, length, const GLchar *, label); \
    HookWrapper5(void, glgetobjectlabelext, GLenum, type, GLuint, object, GLsizei, bufSize, GLsizei *, length, GLchar *, label); \
    HookWrapper2(void, glinserteventmarkerext, GLsizei, length, const GLchar *, marker); \
    HookWrapper2(void, glpushgroupmarkerext, GLsizei, length, const GLchar *, marker); \
    HookWrapper0(void, glpopgroupmarkerext); \
    HookWrapper3(void, gldiscardframebufferext, GLenum, target, GLsizei, numAttachments, const GLenum *, attachments); \
    HookWrapper2(void, glgenqueriesext, GLsizei, n, GLuint *, ids); \
    HookWrapper2(void, gldeletequeriesext, GLsizei, n, const GLuint *, ids); \
    HookWrapper1(GLboolean, glisqueryext, GLuint, id); \
    HookWrapper2(void, glbeginqueryext, GLenum, target, GLuint, id); \
    HookWrapper1(void, glendqueryext, GLenum, target); \
    HookWrapper2(void, glquerycounterext, GLuint, id, GLenum, target); \
    HookWrapper3(void, glgetqueryivext, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgetqueryobjectivext, GLuint, id, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgetqueryobjectuivext, GLuint, id, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, glgetqueryobjecti64vext, GLuint, id, GLenum, pname, GLint64 *, params); \
    HookWrapper3(void, glgetqueryobjectui64vext, GLuint, id, GLenum, pname, GLuint64 *, params); \
    HookWrapper2(void, gldrawbuffersext, GLsizei, n, const GLenum *, bufs); \
    HookWrapper2(void, glenableiext, GLenum, target, GLuint, index); \
    HookWrapper2(void, gldisableiext, GLenum, target, GLuint, index); \
    HookWrapper2(void, glblendequationiext, GLuint, buf, GLenum, mode); \
    HookWrapper3(void, glblendequationseparateiext, GLuint, buf, GLenum, modeRGB, GLenum, modeAlpha); \
    HookWrapper3(void, glblendfunciext, GLuint, buf, GLenum, src, GLenum, dst); \
    HookWrapper5(void, glblendfuncseparateiext, GLuint, buf, GLenum, srcRGB, GLenum, dstRGB, GLenum, srcAlpha, GLenum, dstAlpha); \
    HookWrapper5(void, glcolormaskiext, GLuint, index, GLboolean, r, GLboolean, g, GLboolean, b, GLboolean, a); \
    HookWrapper2(GLboolean, glisenablediext, GLenum, target, GLuint, index); \
    HookWrapper5(void, gldrawelementsbasevertexext, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLint, basevertex); \
    HookWrapper7(void, gldrawrangeelementsbasevertexext, GLenum, mode, GLuint, start, GLuint, end, GLsizei, count, GLenum, type, const void *, indices, GLint, basevertex); \
    HookWrapper6(void, gldrawelementsinstancedbasevertexext, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount, GLint, basevertex); \
    HookWrapper6(void, glmultidrawelementsbasevertexext, GLenum, mode, const GLsizei *, count, GLenum, type, const void *const*, indices, GLsizei, primcount, const GLint *, basevertex); \
    HookWrapper4(void, gldrawarraysinstancedext, GLenum, mode, GLint, start, GLsizei, count, GLsizei, primcount); \
    HookWrapper5(void, gldrawelementsinstancedext, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, primcount); \
    HookWrapper4(void, glframebuffertextureext, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level); \
    HookWrapper2(void, glvertexattribdivisorext, GLuint, index, GLuint, divisor); \
    HookWrapper4(void *, glmapbufferrangeext, GLenum, target, GLintptr, offset, GLsizeiptr, length, GLbitfield, access); \
    HookWrapper3(void, glflushmappedbufferrangeext, GLenum, target, GLintptr, offset, GLsizeiptr, length); \
    HookWrapper4(void, glmultidrawarraysext, GLenum, mode, const GLint *, first, const GLsizei *, count, GLsizei, primcount); \
    HookWrapper5(void, glmultidrawelementsext, GLenum, mode, const GLsizei *, count, GLenum, type, const void *const*, indices, GLsizei, primcount); \
    HookWrapper4(void, glmultidrawarraysindirectext, GLenum, mode, const void *, indirect, GLsizei, drawcount, GLsizei, stride); \
    HookWrapper5(void, glmultidrawelementsindirectext, GLenum, mode, GLenum, type, const void *, indirect, GLsizei, drawcount, GLsizei, stride); \
    HookWrapper5(void, glrenderbufferstoragemultisampleext, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper6(void, glframebuffertexture2dmultisampleext, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level, GLsizei, samples); \
    HookWrapper2(void, glreadbufferindexedext, GLenum, src, GLint, index); \
    HookWrapper3(void, gldrawbuffersindexedext, GLint, n, const GLenum *, location, const GLint *, indices); \
    HookWrapper3(void, glgetintegeri_vext, GLenum, target, GLuint, index, GLint *, data); \
    HookWrapper3(void, glpolygonoffsetclampext, GLfloat, factor, GLfloat, units, GLfloat, clamp); \
    HookWrapper8(void, glprimitiveboundingboxext, GLfloat, minX, GLfloat, minY, GLfloat, minZ, GLfloat, minW, GLfloat, maxX, GLfloat, maxY, GLfloat, maxZ, GLfloat, maxW); \
    HookWrapper2(void, glrastersamplesext, GLuint, samples, GLboolean, fixedsamplelocations); \
    HookWrapper0(GLenum, glgetgraphicsresetstatusext); \
    HookWrapper8(void, glreadnpixelsext, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, GLsizei, bufSize, void *, data); \
    HookWrapper4(void, glgetnuniformfvext, GLuint, program, GLint, location, GLsizei, bufSize, GLfloat *, params); \
    HookWrapper4(void, glgetnuniformivext, GLuint, program, GLint, location, GLsizei, bufSize, GLint *, params); \
    HookWrapper2(void, glactiveshaderprogramext, GLuint, pipeline, GLuint, program); \
    HookWrapper1(void, glbindprogrampipelineext, GLuint, pipeline); \
    HookWrapper3(GLuint, glcreateshaderprogramvext, GLenum, type, GLsizei, count, const GLchar **, strings); \
    HookWrapper2(void, gldeleteprogrampipelinesext, GLsizei, n, const GLuint *, pipelines); \
    HookWrapper2(void, glgenprogrampipelinesext, GLsizei, n, GLuint *, pipelines); \
    HookWrapper4(void, glgetprogrampipelineinfologext, GLuint, pipeline, GLsizei, bufSize, GLsizei *, length, GLchar *, infoLog); \
    HookWrapper3(void, glgetprogrampipelineivext, GLuint, pipeline, GLenum, pname, GLint *, params); \
    HookWrapper1(GLboolean, glisprogrampipelineext, GLuint, pipeline); \
    HookWrapper3(void, glprogramparameteriext, GLuint, program, GLenum, pname, GLint, value); \
    HookWrapper3(void, glprogramuniform1fext, GLuint, program, GLint, location, GLfloat, v0); \
    HookWrapper4(void, glprogramuniform1fvext, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper3(void, glprogramuniform1iext, GLuint, program, GLint, location, GLint, v0); \
    HookWrapper4(void, glprogramuniform1ivext, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, glprogramuniform2fext, GLuint, program, GLint, location, GLfloat, v0, GLfloat, v1); \
    HookWrapper4(void, glprogramuniform2fvext, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper4(void, glprogramuniform2iext, GLuint, program, GLint, location, GLint, v0, GLint, v1); \
    HookWrapper4(void, glprogramuniform2ivext, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper5(void, glprogramuniform3fext, GLuint, program, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2); \
    HookWrapper4(void, glprogramuniform3fvext, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniform3iext, GLuint, program, GLint, location, GLint, v0, GLint, v1, GLint, v2); \
    HookWrapper4(void, glprogramuniform3ivext, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper6(void, glprogramuniform4fext, GLuint, program, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2, GLfloat, v3); \
    HookWrapper4(void, glprogramuniform4fvext, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper6(void, glprogramuniform4iext, GLuint, program, GLint, location, GLint, v0, GLint, v1, GLint, v2, GLint, v3); \
    HookWrapper4(void, glprogramuniform4ivext, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper5(void, glprogramuniformmatrix2fvext, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix3fvext, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix4fvext, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper3(void, gluseprogramstagesext, GLuint, pipeline, GLbitfield, stages, GLuint, program); \
    HookWrapper1(void, glvalidateprogrampipelineext, GLuint, pipeline); \
    HookWrapper3(void, glprogramuniform1uiext, GLuint, program, GLint, location, GLuint, v0); \
    HookWrapper4(void, glprogramuniform2uiext, GLuint, program, GLint, location, GLuint, v0, GLuint, v1); \
    HookWrapper5(void, glprogramuniform3uiext, GLuint, program, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2); \
    HookWrapper6(void, glprogramuniform4uiext, GLuint, program, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2, GLuint, v3); \
    HookWrapper4(void, glprogramuniform1uivext, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper4(void, glprogramuniform2uivext, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper4(void, glprogramuniform3uivext, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper4(void, glprogramuniform4uivext, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper5(void, glprogramuniformmatrix2x3fvext, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix3x2fvext, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix2x4fvext, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix4x2fvext, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix3x4fvext, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix4x3fvext, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper2(void, glframebufferpixellocalstoragesizeext, GLuint, target, GLsizei, size); \
    HookWrapper1(GLsizei, glgetframebufferpixellocalstoragesizeext, GLuint, target); \
    HookWrapper3(void, glclearpixellocalstorageuiext, GLsizei, offset, GLsizei, n, const GLuint *, values); \
    HookWrapper9(void, gltexpagecommitmentext, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, commit); \
    HookWrapper2(void, glpatchparameteriext, GLenum, pname, GLint, value); \
    HookWrapper3(void, gltexparameteriivext, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper3(void, gltexparameteriuivext, GLenum, target, GLenum, pname, const GLuint *, params); \
    HookWrapper3(void, glgettexparameteriivext, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgettexparameteriuivext, GLenum, target, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, glsamplerparameteriivext, GLuint, sampler, GLenum, pname, const GLint *, param); \
    HookWrapper3(void, glsamplerparameteriuivext, GLuint, sampler, GLenum, pname, const GLuint *, param); \
    HookWrapper3(void, glgetsamplerparameteriivext, GLuint, sampler, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgetsamplerparameteriuivext, GLuint, sampler, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, gltexbufferext, GLenum, target, GLenum, internalformat, GLuint, buffer); \
    HookWrapper5(void, gltexbufferrangeext, GLenum, target, GLenum, internalformat, GLuint, buffer, GLintptr, offset, GLsizeiptr, size); \
    HookWrapper4(void, gltexstorage1dext, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width); \
    HookWrapper5(void, gltexstorage2dext, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper6(void, gltexstorage3dext, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth); \
    HookWrapper5(void, gltexturestorage1dext, GLuint, texture, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width); \
    HookWrapper8(void, gltextureviewext, GLuint, texture, GLenum, target, GLuint, origtexture, GLenum, internalformat, GLuint, minlevel, GLuint, numlevels, GLuint, minlayer, GLuint, numlayers); \
    HookWrapper3(void, glwindowrectanglesext, GLenum, mode, GLsizei, count, const GLint *, box); \
    HookWrapper7(void, glframebuffertexture2ddownsampleimg, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level, GLint, xscale, GLint, yscale); \
    HookWrapper7(void, glframebuffertexturelayerdownsampleimg, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level, GLint, layer, GLint, xscale, GLint, yscale); \
    HookWrapper5(void, glrenderbufferstoragemultisampleimg, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper6(void, glframebuffertexture2dmultisampleimg, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level, GLsizei, samples); \
    HookWrapper0(void, glapplyframebufferattachmentcmaaintel); \
    HookWrapper1(void, glbeginperfqueryintel, GLuint, queryHandle); \
    HookWrapper2(void, glcreateperfqueryintel, GLuint, queryId, GLuint *, queryHandle); \
    HookWrapper1(void, gldeleteperfqueryintel, GLuint, queryHandle); \
    HookWrapper1(void, glendperfqueryintel, GLuint, queryHandle); \
    HookWrapper1(void, glgetfirstperfqueryidintel, GLuint *, queryId); \
    HookWrapper2(void, glgetnextperfqueryidintel, GLuint, queryId, GLuint *, nextQueryId); \
    HookWrapper11(void, glgetperfcounterinfointel, GLuint, queryId, GLuint, counterId, GLuint, counterNameLength, GLchar *, counterName, GLuint, counterDescLength, GLchar *, counterDesc, GLuint *, counterOffset, GLuint *, counterDataSize, GLuint *, counterTypeEnum, GLuint *, counterDataTypeEnum, GLuint64 *, rawCounterMaxValue); \
    HookWrapper5(void, glgetperfquerydataintel, GLuint, queryHandle, GLuint, flags, GLsizei, dataSize, GLvoid *, data, GLuint *, bytesWritten); \
    HookWrapper2(void, glgetperfqueryidbynameintel, GLchar *, queryName, GLuint *, queryId); \
    HookWrapper7(void, glgetperfqueryinfointel, GLuint, queryId, GLuint, queryNameLength, GLchar *, queryName, GLuint *, dataSize, GLuint *, noCounters, GLuint *, noInstances, GLuint *, capsMask); \
    HookWrapper1(GLuint64, glgettexturehandlenv, GLuint, texture); \
    HookWrapper2(GLuint64, glgettexturesamplerhandlenv, GLuint, texture, GLuint, sampler); \
    HookWrapper1(void, glmaketexturehandleresidentnv, GLuint64, handle); \
    HookWrapper1(void, glmaketexturehandlenonresidentnv, GLuint64, handle); \
    HookWrapper5(GLuint64, glgetimagehandlenv, GLuint, texture, GLint, level, GLboolean, layered, GLint, layer, GLenum, format); \
    HookWrapper2(void, glmakeimagehandleresidentnv, GLuint64, handle, GLenum, access); \
    HookWrapper1(void, glmakeimagehandlenonresidentnv, GLuint64, handle); \
    HookWrapper2(void, gluniformhandleui64nv, GLint, location, GLuint64, value); \
    HookWrapper3(void, gluniformhandleui64vnv, GLint, location, GLsizei, count, const GLuint64 *, value); \
    HookWrapper3(void, glprogramuniformhandleui64nv, GLuint, program, GLint, location, GLuint64, value); \
    HookWrapper4(void, glprogramuniformhandleui64vnv, GLuint, program, GLint, location, GLsizei, count, const GLuint64 *, values); \
    HookWrapper1(GLboolean, glistexturehandleresidentnv, GLuint64, handle); \
    HookWrapper1(GLboolean, glisimagehandleresidentnv, GLuint64, handle); \
    HookWrapper2(void, glblendparameterinv, GLenum, pname, GLint, value); \
    HookWrapper0(void, glblendbarriernv); \
    HookWrapper2(void, glbeginconditionalrendernv, GLuint, id, GLenum, mode); \
    HookWrapper0(void, glendconditionalrendernv); \
    HookWrapper2(void, glsubpixelprecisionbiasnv, GLuint, xbits, GLuint, ybits); \
    HookWrapper2(void, glconservativerasterparameterinv, GLenum, pname, GLint, param); \
    HookWrapper5(void, glcopybuffersubdatanv, GLenum, readTarget, GLenum, writeTarget, GLintptr, readOffset, GLintptr, writeOffset, GLsizeiptr, size); \
    HookWrapper1(void, glcoveragemasknv, GLboolean, mask); \
    HookWrapper1(void, glcoverageoperationnv, GLenum, operation); \
    HookWrapper2(void, gldrawbuffersnv, GLsizei, n, const GLenum *, bufs); \
    HookWrapper4(void, gldrawarraysinstancednv, GLenum, mode, GLint, first, GLsizei, count, GLsizei, primcount); \
    HookWrapper5(void, gldrawelementsinstancednv, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, primcount); \
    HookWrapper2(void, gldeletefencesnv, GLsizei, n, const GLuint *, fences); \
    HookWrapper2(void, glgenfencesnv, GLsizei, n, GLuint *, fences); \
    HookWrapper1(GLboolean, glisfencenv, GLuint, fence); \
    HookWrapper1(GLboolean, gltestfencenv, GLuint, fence); \
    HookWrapper3(void, glgetfenceivnv, GLuint, fence, GLenum, pname, GLint *, params); \
    HookWrapper1(void, glfinishfencenv, GLuint, fence); \
    HookWrapper2(void, glsetfencenv, GLuint, fence, GLenum, condition); \
    HookWrapper1(void, glfragmentcoveragecolornv, GLuint, color); \
    HookWrapper10(void, glblitframebuffernv, GLint, srcX0, GLint, srcY0, GLint, srcX1, GLint, srcY1, GLint, dstX0, GLint, dstY0, GLint, dstX1, GLint, dstY1, GLbitfield, mask, GLenum, filter); \
    HookWrapper2(void, glcoveragemodulationtablenv, GLsizei, n, const GLfloat *, v); \
    HookWrapper2(void, glgetcoveragemodulationtablenv, GLsizei, bufsize, GLfloat *, v); \
    HookWrapper1(void, glcoveragemodulationnv, GLenum, components); \
    HookWrapper5(void, glrenderbufferstoragemultisamplenv, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper2(void, gluniform1i64nv, GLint, location, GLint64EXT, x); \
    HookWrapper3(void, gluniform2i64nv, GLint, location, GLint64EXT, x, GLint64EXT, y); \
    HookWrapper4(void, gluniform3i64nv, GLint, location, GLint64EXT, x, GLint64EXT, y, GLint64EXT, z); \
    HookWrapper5(void, gluniform4i64nv, GLint, location, GLint64EXT, x, GLint64EXT, y, GLint64EXT, z, GLint64EXT, w); \
    HookWrapper3(void, gluniform1i64vnv, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper3(void, gluniform2i64vnv, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper3(void, gluniform3i64vnv, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper3(void, gluniform4i64vnv, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper2(void, gluniform1ui64nv, GLint, location, GLuint64EXT, x); \
    HookWrapper3(void, gluniform2ui64nv, GLint, location, GLuint64EXT, x, GLuint64EXT, y); \
    HookWrapper4(void, gluniform3ui64nv, GLint, location, GLuint64EXT, x, GLuint64EXT, y, GLuint64EXT, z); \
    HookWrapper5(void, gluniform4ui64nv, GLint, location, GLuint64EXT, x, GLuint64EXT, y, GLuint64EXT, z, GLuint64EXT, w); \
    HookWrapper3(void, gluniform1ui64vnv, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper3(void, gluniform2ui64vnv, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper3(void, gluniform3ui64vnv, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper3(void, gluniform4ui64vnv, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper3(void, glgetuniformi64vnv, GLuint, program, GLint, location, GLint64EXT *, params); \
    HookWrapper3(void, glprogramuniform1i64nv, GLuint, program, GLint, location, GLint64EXT, x); \
    HookWrapper4(void, glprogramuniform2i64nv, GLuint, program, GLint, location, GLint64EXT, x, GLint64EXT, y); \
    HookWrapper5(void, glprogramuniform3i64nv, GLuint, program, GLint, location, GLint64EXT, x, GLint64EXT, y, GLint64EXT, z); \
    HookWrapper6(void, glprogramuniform4i64nv, GLuint, program, GLint, location, GLint64EXT, x, GLint64EXT, y, GLint64EXT, z, GLint64EXT, w); \
    HookWrapper4(void, glprogramuniform1i64vnv, GLuint, program, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper4(void, glprogramuniform2i64vnv, GLuint, program, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper4(void, glprogramuniform3i64vnv, GLuint, program, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper4(void, glprogramuniform4i64vnv, GLuint, program, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper3(void, glprogramuniform1ui64nv, GLuint, program, GLint, location, GLuint64EXT, x); \
    HookWrapper4(void, glprogramuniform2ui64nv, GLuint, program, GLint, location, GLuint64EXT, x, GLuint64EXT, y); \
    HookWrapper5(void, glprogramuniform3ui64nv, GLuint, program, GLint, location, GLuint64EXT, x, GLuint64EXT, y, GLuint64EXT, z); \
    HookWrapper6(void, glprogramuniform4ui64nv, GLuint, program, GLint, location, GLuint64EXT, x, GLuint64EXT, y, GLuint64EXT, z, GLuint64EXT, w); \
    HookWrapper4(void, glprogramuniform1ui64vnv, GLuint, program, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper4(void, glprogramuniform2ui64vnv, GLuint, program, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper4(void, glprogramuniform3ui64vnv, GLuint, program, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper4(void, glprogramuniform4ui64vnv, GLuint, program, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper2(void, glvertexattribdivisornv, GLuint, index, GLuint, divisor); \
    HookWrapper6(void, glgetinternalformatsampleivnv, GLenum, target, GLenum, internalformat, GLsizei, samples, GLenum, pname, GLsizei, bufSize, GLint *, params); \
    HookWrapper4(void, gluniformmatrix2x3fvnv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix3x2fvnv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix2x4fvnv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix4x2fvnv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix3x4fvnv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix4x3fvnv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper1(GLuint, glgenpathsnv, GLsizei, range); \
    HookWrapper2(void, gldeletepathsnv, GLuint, path, GLsizei, range); \
    HookWrapper1(GLboolean, glispathnv, GLuint, path); \
    HookWrapper6(void, glpathcommandsnv, GLuint, path, GLsizei, numCommands, const GLubyte *, commands, GLsizei, numCoords, GLenum, coordType, const void *, coords); \
    HookWrapper4(void, glpathcoordsnv, GLuint, path, GLsizei, numCoords, GLenum, coordType, const void *, coords); \
    HookWrapper8(void, glpathsubcommandsnv, GLuint, path, GLsizei, commandStart, GLsizei, commandsToDelete, GLsizei, numCommands, const GLubyte *, commands, GLsizei, numCoords, GLenum, coordType, const void *, coords); \
    HookWrapper5(void, glpathsubcoordsnv, GLuint, path, GLsizei, coordStart, GLsizei, numCoords, GLenum, coordType, const void *, coords); \
    HookWrapper4(void, glpathstringnv, GLuint, path, GLenum, format, GLsizei, length, const void *, pathString); \
    HookWrapper10(void, glpathglyphsnv, GLuint, firstPathName, GLenum, fontTarget, const void *, fontName, GLbitfield, fontStyle, GLsizei, numGlyphs, GLenum, type, const void *, charcodes, GLenum, handleMissingGlyphs, GLuint, pathParameterTemplate, GLfloat, emScale); \
    HookWrapper9(void, glpathglyphrangenv, GLuint, firstPathName, GLenum, fontTarget, const void *, fontName, GLbitfield, fontStyle, GLuint, firstGlyph, GLsizei, numGlyphs, GLenum, handleMissingGlyphs, GLuint, pathParameterTemplate, GLfloat, emScale); \
    HookWrapper4(void, glweightpathsnv, GLuint, resultPath, GLsizei, numPaths, const GLuint *, paths, const GLfloat *, weights); \
    HookWrapper2(void, glcopypathnv, GLuint, resultPath, GLuint, srcPath); \
    HookWrapper4(void, glinterpolatepathsnv, GLuint, resultPath, GLuint, pathA, GLuint, pathB, GLfloat, weight); \
    HookWrapper4(void, gltransformpathnv, GLuint, resultPath, GLuint, srcPath, GLenum, transformType, const GLfloat *, transformValues); \
    HookWrapper3(void, glpathparameterivnv, GLuint, path, GLenum, pname, const GLint *, value); \
    HookWrapper3(void, glpathparameterinv, GLuint, path, GLenum, pname, GLint, value); \
    HookWrapper3(void, glpathparameterfvnv, GLuint, path, GLenum, pname, const GLfloat *, value); \
    HookWrapper3(void, glpathparameterfnv, GLuint, path, GLenum, pname, GLfloat, value); \
    HookWrapper3(void, glpathdasharraynv, GLuint, path, GLsizei, dashCount, const GLfloat *, dashArray); \
    HookWrapper3(void, glpathstencilfuncnv, GLenum, func, GLint, ref, GLuint, mask); \
    HookWrapper2(void, glpathstencildepthoffsetnv, GLfloat, factor, GLfloat, units); \
    HookWrapper3(void, glstencilfillpathnv, GLuint, path, GLenum, fillMode, GLuint, mask); \
    HookWrapper3(void, glstencilstrokepathnv, GLuint, path, GLint, reference, GLuint, mask); \
    HookWrapper8(void, glstencilfillpathinstancednv, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLenum, fillMode, GLuint, mask, GLenum, transformType, const GLfloat *, transformValues); \
    HookWrapper8(void, glstencilstrokepathinstancednv, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLint, reference, GLuint, mask, GLenum, transformType, const GLfloat *, transformValues); \
    HookWrapper1(void, glpathcoverdepthfuncnv, GLenum, func); \
    HookWrapper2(void, glcoverfillpathnv, GLuint, path, GLenum, coverMode); \
    HookWrapper2(void, glcoverstrokepathnv, GLuint, path, GLenum, coverMode); \
    HookWrapper7(void, glcoverfillpathinstancednv, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLenum, coverMode, GLenum, transformType, const GLfloat *, transformValues); \
    HookWrapper7(void, glcoverstrokepathinstancednv, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLenum, coverMode, GLenum, transformType, const GLfloat *, transformValues); \
    HookWrapper3(void, glgetpathparameterivnv, GLuint, path, GLenum, pname, GLint *, value); \
    HookWrapper3(void, glgetpathparameterfvnv, GLuint, path, GLenum, pname, GLfloat *, value); \
    HookWrapper2(void, glgetpathcommandsnv, GLuint, path, GLubyte *, commands); \
    HookWrapper2(void, glgetpathcoordsnv, GLuint, path, GLfloat *, coords); \
    HookWrapper2(void, glgetpathdasharraynv, GLuint, path, GLfloat *, dashArray); \
    HookWrapper7(void, glgetpathmetricsnv, GLbitfield, metricQueryMask, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLsizei, stride, GLfloat *, metrics); \
    HookWrapper5(void, glgetpathmetricrangenv, GLbitfield, metricQueryMask, GLuint, firstPathName, GLsizei, numPaths, GLsizei, stride, GLfloat *, metrics); \
    HookWrapper9(void, glgetpathspacingnv, GLenum, pathListMode, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLfloat, advanceScale, GLfloat, kerningScale, GLenum, transformType, GLfloat *, returnedSpacing); \
    HookWrapper4(GLboolean, glispointinfillpathnv, GLuint, path, GLuint, mask, GLfloat, x, GLfloat, y); \
    HookWrapper3(GLboolean, glispointinstrokepathnv, GLuint, path, GLfloat, x, GLfloat, y); \
    HookWrapper3(GLfloat, glgetpathlengthnv, GLuint, path, GLsizei, startSegment, GLsizei, numSegments); \
    HookWrapper8(GLboolean, glpointalongpathnv, GLuint, path, GLsizei, startSegment, GLsizei, numSegments, GLfloat, distance, GLfloat *, x, GLfloat *, y, GLfloat *, tangentX, GLfloat *, tangentY); \
    HookWrapper2(void, glmatrixload3x2fnv, GLenum, matrixMode, const GLfloat *, m); \
    HookWrapper2(void, glmatrixload3x3fnv, GLenum, matrixMode, const GLfloat *, m); \
    HookWrapper2(void, glmatrixloadtranspose3x3fnv, GLenum, matrixMode, const GLfloat *, m); \
    HookWrapper2(void, glmatrixmult3x2fnv, GLenum, matrixMode, const GLfloat *, m); \
    HookWrapper2(void, glmatrixmult3x3fnv, GLenum, matrixMode, const GLfloat *, m); \
    HookWrapper2(void, glmatrixmulttranspose3x3fnv, GLenum, matrixMode, const GLfloat *, m); \
    HookWrapper4(void, glstencilthencoverfillpathnv, GLuint, path, GLenum, fillMode, GLuint, mask, GLenum, coverMode); \
    HookWrapper4(void, glstencilthencoverstrokepathnv, GLuint, path, GLint, reference, GLuint, mask, GLenum, coverMode); \
    HookWrapper9(void, glstencilthencoverfillpathinstancednv, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLenum, fillMode, GLuint, mask, GLenum, coverMode, GLenum, transformType, const GLfloat *, transformValues); \
    HookWrapper9(void, glstencilthencoverstrokepathinstancednv, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLint, reference, GLuint, mask, GLenum, coverMode, GLenum, transformType, const GLfloat *, transformValues); \
    HookWrapper6(GLenum, glpathglyphindexrangenv, GLenum, fontTarget, const void *, fontName, GLbitfield, fontStyle, GLuint, pathParameterTemplate, GLfloat, emScale, GLuint *, baseAndCount); \
    HookWrapper8(GLenum, glpathglyphindexarraynv, GLuint, firstPathName, GLenum, fontTarget, const void *, fontName, GLbitfield, fontStyle, GLuint, firstGlyphIndex, GLsizei, numGlyphs, GLuint, pathParameterTemplate, GLfloat, emScale); \
    HookWrapper9(GLenum, glpathmemoryglyphindexarraynv, GLuint, firstPathName, GLenum, fontTarget, GLsizeiptr, fontSize, const void *, fontData, GLsizei, faceIndex, GLuint, firstGlyphIndex, GLsizei, numGlyphs, GLuint, pathParameterTemplate, GLfloat, emScale); \
    HookWrapper5(void, glprogrampathfragmentinputgennv, GLuint, program, GLint, location, GLenum, genMode, GLint, components, const GLfloat *, coeffs); \
    HookWrapper8(void, glgetprogramresourcefvnv, GLuint, program, GLenum, programInterface, GLuint, index, GLsizei, propCount, const GLenum *, props, GLsizei, bufSize, GLsizei *, length, GLfloat *, params); \
    HookWrapper1(void, glreadbuffernv, GLenum, mode); \
    HookWrapper4(void, glframebuffersamplelocationsfvnv, GLenum, target, GLuint, start, GLsizei, count, const GLfloat *, v); \
    HookWrapper4(void, glnamedframebuffersamplelocationsfvnv, GLuint, framebuffer, GLuint, start, GLsizei, count, const GLfloat *, v); \
    HookWrapper0(void, glresolvedepthvaluesnv); \
    HookWrapper3(void, glviewportarrayvnv, GLuint, first, GLsizei, count, const GLfloat *, v); \
    HookWrapper5(void, glviewportindexedfnv, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, w, GLfloat, h); \
    HookWrapper2(void, glviewportindexedfvnv, GLuint, index, const GLfloat *, v); \
    HookWrapper3(void, glscissorarrayvnv, GLuint, first, GLsizei, count, const GLint *, v); \
    HookWrapper5(void, glscissorindexednv, GLuint, index, GLint, left, GLint, bottom, GLsizei, width, GLsizei, height); \
    HookWrapper2(void, glscissorindexedvnv, GLuint, index, const GLint *, v); \
    HookWrapper3(void, gldepthrangearrayfvnv, GLuint, first, GLsizei, count, const GLfloat *, v); \
    HookWrapper3(void, gldepthrangeindexedfnv, GLuint, index, GLfloat, n, GLfloat, f); \
    HookWrapper2(void, glenableinv, GLenum, target, GLuint, index); \
    HookWrapper2(void, gldisableinv, GLenum, target, GLuint, index); \
    HookWrapper2(GLboolean, glisenabledinv, GLenum, target, GLuint, index); \
    HookWrapper5(void, glviewportswizzlenv, GLuint, index, GLenum, swizzlex, GLenum, swizzley, GLenum, swizzlez, GLenum, swizzlew); \
    HookWrapper6(void, glframebuffertexturemultiviewovr, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level, GLint, baseViewIndex, GLsizei, numViews); \
    HookWrapper7(void, glframebuffertexturemultisamplemultiviewovr, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level, GLsizei, samples, GLint, baseViewIndex, GLsizei, numViews); \
    HookWrapper2(void, glalphafuncqcom, GLenum, func, GLclampf, ref); \
    HookWrapper3(void, glgetdrivercontrolsqcom, GLint *, num, GLsizei, size, GLuint *, driverControls); \
    HookWrapper4(void, glgetdrivercontrolstringqcom, GLuint, driverControl, GLsizei, bufSize, GLsizei *, length, GLchar *, driverControlString); \
    HookWrapper1(void, glenabledrivercontrolqcom, GLuint, driverControl); \
    HookWrapper1(void, gldisabledrivercontrolqcom, GLuint, driverControl); \
    HookWrapper3(void, glextgettexturesqcom, GLuint *, textures, GLint, maxTextures, GLint *, numTextures); \
    HookWrapper3(void, glextgetbuffersqcom, GLuint *, buffers, GLint, maxBuffers, GLint *, numBuffers); \
    HookWrapper3(void, glextgetrenderbuffersqcom, GLuint *, renderbuffers, GLint, maxRenderbuffers, GLint *, numRenderbuffers); \
    HookWrapper3(void, glextgetframebuffersqcom, GLuint *, framebuffers, GLint, maxFramebuffers, GLint *, numFramebuffers); \
    HookWrapper5(void, glextgettexlevelparameterivqcom, GLuint, texture, GLenum, face, GLint, level, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glexttexobjectstateoverrideiqcom, GLenum, target, GLenum, pname, GLint, param); \
    HookWrapper11(void, glextgettexsubimageqcom, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLenum, type, void *, texels); \
    HookWrapper2(void, glextgetbufferpointervqcom, GLenum, target, void **, params); \
    HookWrapper3(void, glextgetshadersqcom, GLuint *, shaders, GLint, maxShaders, GLint *, numShaders); \
    HookWrapper3(void, glextgetprogramsqcom, GLuint *, programs, GLint, maxPrograms, GLint *, numPrograms); \
    HookWrapper1(GLboolean, glextisprogrambinaryqcom, GLuint, program); \
    HookWrapper4(void, glextgetprogrambinarysourceqcom, GLuint, program, GLenum, shadertype, GLchar *, source, GLint *, length); \
    HookWrapper5(void, glstarttilingqcom, GLuint, x, GLuint, y, GLuint, width, GLuint, height, GLbitfield, preserveMask); \
    HookWrapper1(void, glendtilingqcom, GLbitfield, preserveMask); \



#define CheckUnsupported() \
    HandleUnsupported(PFNGLBINDATTRIBLOCATIONPROC, glbindattriblocation); \
    HandleUnsupported(PFNGLBINDRENDERBUFFERPROC, glbindrenderbuffer); \
    HandleUnsupported(PFNGLBLENDCOLORPROC, glblendcolor); \
    HandleUnsupported(PFNGLBLENDEQUATIONPROC, glblendequation); \
    HandleUnsupported(PFNGLBLENDEQUATIONSEPARATEPROC, glblendequationseparate); \
    HandleUnsupported(PFNGLBLENDFUNCSEPARATEPROC, glblendfuncseparate); \
    HandleUnsupported(PFNGLCLEARDEPTHFPROC, glcleardepthf); \
    HandleUnsupported(PFNGLCLEARSTENCILPROC, glclearstencil); \
    HandleUnsupported(PFNGLCOMPRESSEDTEXIMAGE2DPROC, glcompressedteximage2d); \
    HandleUnsupported(PFNGLCOPYTEXIMAGE2DPROC, glcopyteximage2d); \
    HandleUnsupported(PFNGLCOPYTEXSUBIMAGE2DPROC, glcopytexsubimage2d); \
    HandleUnsupported(PFNGLCULLFACEPROC, glcullface); \
    HandleUnsupported(PFNGLDELETERENDERBUFFERSPROC, gldeleterenderbuffers); \
    HandleUnsupported(PFNGLDEPTHRANGEFPROC, gldepthrangef); \
    HandleUnsupported(PFNGLDRAWELEMENTSPROC, gldrawelements); \
    HandleUnsupported(PFNGLFRAMEBUFFERRENDERBUFFERPROC, glframebufferrenderbuffer); \
    HandleUnsupported(PFNGLFRONTFACEPROC, glfrontface); \
    HandleUnsupported(PFNGLGENERATEMIPMAPPROC, glgeneratemipmap); \
    HandleUnsupported(PFNGLGENRENDERBUFFERSPROC, glgenrenderbuffers); \
    HandleUnsupported(PFNGLGETACTIVEATTRIBPROC, glgetactiveattrib); \
    HandleUnsupported(PFNGLGETACTIVEUNIFORMPROC, glgetactiveuniform); \
    HandleUnsupported(PFNGLGETATTACHEDSHADERSPROC, glgetattachedshaders); \
    HandleUnsupported(PFNGLGETATTRIBLOCATIONPROC, glgetattriblocation); \
    HandleUnsupported(PFNGLGETBOOLEANVPROC, glgetbooleanv); \
    HandleUnsupported(PFNGLGETFLOATVPROC, glgetfloatv); \
    HandleUnsupported(PFNGLGETRENDERBUFFERPARAMETERIVPROC, glgetrenderbufferparameteriv); \
    HandleUnsupported(PFNGLGETSHADERPRECISIONFORMATPROC, glgetshaderprecisionformat); \
    HandleUnsupported(PFNGLGETSHADERSOURCEPROC, glgetshadersource); \
    HandleUnsupported(PFNGLGETSTRINGPROC, glgetstring); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBPOINTERVPROC, glgetvertexattribpointerv); \
    HandleUnsupported(PFNGLHINTPROC, glhint); \
    HandleUnsupported(PFNGLLINEWIDTHPROC, gllinewidth); \
    HandleUnsupported(PFNGLPIXELSTOREIPROC, glpixelstorei); \
    HandleUnsupported(PFNGLPOLYGONOFFSETPROC, glpolygonoffset); \
    HandleUnsupported(PFNGLREADPIXELSPROC, glreadpixels); \
    HandleUnsupported(PFNGLRELEASESHADERCOMPILERPROC, glreleaseshadercompiler); \
    HandleUnsupported(PFNGLRENDERBUFFERSTORAGEPROC, glrenderbufferstorage); \
    HandleUnsupported(PFNGLSAMPLECOVERAGEPROC, glsamplecoverage); \
    HandleUnsupported(PFNGLSCISSORPROC, glscissor); \
    HandleUnsupported(PFNGLSHADERBINARYPROC, glshaderbinary); \
    HandleUnsupported(PFNGLSTENCILFUNCPROC, glstencilfunc); \
    HandleUnsupported(PFNGLSTENCILFUNCSEPARATEPROC, glstencilfuncseparate); \
    HandleUnsupported(PFNGLSTENCILOPPROC, glstencilop); \
    HandleUnsupported(PFNGLSTENCILOPSEPARATEPROC, glstencilopseparate); \
    HandleUnsupported(PFNGLTEXIMAGE2DPROC, glteximage2d); \
    HandleUnsupported(PFNGLTEXPARAMETERFPROC, gltexparameterf); \
    HandleUnsupported(PFNGLTEXPARAMETERFVPROC, gltexparameterfv); \
    HandleUnsupported(PFNGLUNIFORM1FPROC, gluniform1f); \
    HandleUnsupported(PFNGLUNIFORM1FVPROC, gluniform1fv); \
    HandleUnsupported(PFNGLUNIFORM1IPROC, gluniform1i); \
    HandleUnsupported(PFNGLUNIFORM1IVPROC, gluniform1iv); \
    HandleUnsupported(PFNGLUNIFORM2FPROC, gluniform2f); \
    HandleUnsupported(PFNGLUNIFORM2FVPROC, gluniform2fv); \
    HandleUnsupported(PFNGLUNIFORM2IPROC, gluniform2i); \
    HandleUnsupported(PFNGLUNIFORM2IVPROC, gluniform2iv); \
    HandleUnsupported(PFNGLUNIFORM3FPROC, gluniform3f); \
    HandleUnsupported(PFNGLUNIFORM3FVPROC, gluniform3fv); \
    HandleUnsupported(PFNGLUNIFORM3IPROC, gluniform3i); \
    HandleUnsupported(PFNGLUNIFORM3IVPROC, gluniform3iv); \
    HandleUnsupported(PFNGLUNIFORM4FPROC, gluniform4f); \
    HandleUnsupported(PFNGLUNIFORM4FVPROC, gluniform4fv); \
    HandleUnsupported(PFNGLUNIFORM4IPROC, gluniform4i); \
    HandleUnsupported(PFNGLUNIFORM4IVPROC, gluniform4iv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX2FVPROC, gluniformmatrix2fv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX3FVPROC, gluniformmatrix3fv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX4FVPROC, gluniformmatrix4fv); \
    HandleUnsupported(PFNGLVALIDATEPROGRAMPROC, glvalidateprogram); \
    HandleUnsupported(PFNGLVERTEXATTRIB1FPROC, glvertexattrib1f); \
    HandleUnsupported(PFNGLVERTEXATTRIB1FVPROC, glvertexattrib1fv); \
    HandleUnsupported(PFNGLVERTEXATTRIB2FPROC, glvertexattrib2f); \
    HandleUnsupported(PFNGLVERTEXATTRIB2FVPROC, glvertexattrib2fv); \
    HandleUnsupported(PFNGLVERTEXATTRIB3FPROC, glvertexattrib3f); \
    HandleUnsupported(PFNGLVERTEXATTRIB3FVPROC, glvertexattrib3fv); \
    HandleUnsupported(PFNGLVERTEXATTRIB4FPROC, glvertexattrib4f); \
    HandleUnsupported(PFNGLVERTEXATTRIB4FVPROC, glvertexattrib4fv); \
    HandleUnsupported(PFNGLDRAWRANGEELEMENTSPROC, gldrawrangeelements); \
    HandleUnsupported(PFNGLTEXIMAGE3DPROC, glteximage3d); \
    HandleUnsupported(PFNGLCOPYTEXSUBIMAGE3DPROC, glcopytexsubimage3d); \
    HandleUnsupported(PFNGLCOMPRESSEDTEXIMAGE3DPROC, glcompressedteximage3d); \
    HandleUnsupported(PFNGLGETQUERYIVPROC, glgetqueryiv); \
    HandleUnsupported(PFNGLGETBUFFERPOINTERVPROC, glgetbufferpointerv); \
    HandleUnsupported(PFNGLDRAWBUFFERSPROC, gldrawbuffers); \
    HandleUnsupported(PFNGLUNIFORMMATRIX2X3FVPROC, gluniformmatrix2x3fv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX3X2FVPROC, gluniformmatrix3x2fv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX2X4FVPROC, gluniformmatrix2x4fv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX4X2FVPROC, gluniformmatrix4x2fv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX3X4FVPROC, gluniformmatrix3x4fv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX4X3FVPROC, gluniformmatrix4x3fv); \
    HandleUnsupported(PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC, glrenderbufferstoragemultisample); \
    HandleUnsupported(PFNGLFLUSHMAPPEDBUFFERRANGEPROC, glflushmappedbufferrange); \
    HandleUnsupported(PFNGLBINDBUFFERRANGEPROC, glbindbufferrange); \
    HandleUnsupported(PFNGLGETTRANSFORMFEEDBACKVARYINGPROC, glgettransformfeedbackvarying); \
    HandleUnsupported(PFNGLVERTEXATTRIBIPOINTERPROC, glvertexattribipointer); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBIIVPROC, glgetvertexattribiiv); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBIUIVPROC, glgetvertexattribiuiv); \
    HandleUnsupported(PFNGLVERTEXATTRIBI4IPROC, glvertexattribi4i); \
    HandleUnsupported(PFNGLVERTEXATTRIBI4UIPROC, glvertexattribi4ui); \
    HandleUnsupported(PFNGLVERTEXATTRIBI4IVPROC, glvertexattribi4iv); \
    HandleUnsupported(PFNGLVERTEXATTRIBI4UIVPROC, glvertexattribi4uiv); \
    HandleUnsupported(PFNGLGETFRAGDATALOCATIONPROC, glgetfragdatalocation); \
    HandleUnsupported(PFNGLUNIFORM1UIPROC, gluniform1ui); \
    HandleUnsupported(PFNGLUNIFORM2UIPROC, gluniform2ui); \
    HandleUnsupported(PFNGLUNIFORM3UIPROC, gluniform3ui); \
    HandleUnsupported(PFNGLUNIFORM4UIPROC, gluniform4ui); \
    HandleUnsupported(PFNGLUNIFORM1UIVPROC, gluniform1uiv); \
    HandleUnsupported(PFNGLUNIFORM2UIVPROC, gluniform2uiv); \
    HandleUnsupported(PFNGLUNIFORM3UIVPROC, gluniform3uiv); \
    HandleUnsupported(PFNGLUNIFORM4UIVPROC, gluniform4uiv); \
    HandleUnsupported(PFNGLCLEARBUFFERUIVPROC, glclearbufferuiv); \
    HandleUnsupported(PFNGLCOPYBUFFERSUBDATAPROC, glcopybuffersubdata); \
    HandleUnsupported(PFNGLGETUNIFORMINDICESPROC, glgetuniformindices); \
    HandleUnsupported(PFNGLGETACTIVEUNIFORMSIVPROC, glgetactiveuniformsiv); \
    HandleUnsupported(PFNGLGETUNIFORMBLOCKINDEXPROC, glgetuniformblockindex); \
    HandleUnsupported(PFNGLGETACTIVEUNIFORMBLOCKIVPROC, glgetactiveuniformblockiv); \
    HandleUnsupported(PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC, glgetactiveuniformblockname); \
    HandleUnsupported(PFNGLUNIFORMBLOCKBINDINGPROC, gluniformblockbinding); \
    HandleUnsupported(PFNGLDRAWARRAYSINSTANCEDPROC, gldrawarraysinstanced); \
    HandleUnsupported(PFNGLDRAWELEMENTSINSTANCEDPROC, gldrawelementsinstanced); \
    HandleUnsupported(PFNGLFENCESYNCPROC, glfencesync); \
    HandleUnsupported(PFNGLDELETESYNCPROC, gldeletesync); \
    HandleUnsupported(PFNGLCLIENTWAITSYNCPROC, glclientwaitsync); \
    HandleUnsupported(PFNGLWAITSYNCPROC, glwaitsync); \
    HandleUnsupported(PFNGLGETINTEGER64VPROC, glgetinteger64v); \
    HandleUnsupported(PFNGLGETSYNCIVPROC, glgetsynciv); \
    HandleUnsupported(PFNGLGETBUFFERPARAMETERI64VPROC, glgetbufferparameteri64v); \
    HandleUnsupported(PFNGLSAMPLERPARAMETERIVPROC, glsamplerparameteriv); \
    HandleUnsupported(PFNGLSAMPLERPARAMETERFPROC, glsamplerparameterf); \
    HandleUnsupported(PFNGLSAMPLERPARAMETERFVPROC, glsamplerparameterfv); \
    HandleUnsupported(PFNGLVERTEXATTRIBDIVISORPROC, glvertexattribdivisor); \
    HandleUnsupported(PFNGLPAUSETRANSFORMFEEDBACKPROC, glpausetransformfeedback); \
    HandleUnsupported(PFNGLRESUMETRANSFORMFEEDBACKPROC, glresumetransformfeedback); \
    HandleUnsupported(PFNGLGETPROGRAMBINARYPROC, glgetprogrambinary); \
    HandleUnsupported(PFNGLPROGRAMBINARYPROC, glprogrambinary); \
    HandleUnsupported(PFNGLINVALIDATEFRAMEBUFFERPROC, glinvalidateframebuffer); \
    HandleUnsupported(PFNGLINVALIDATESUBFRAMEBUFFERPROC, glinvalidatesubframebuffer); \
    HandleUnsupported(PFNGLTEXSTORAGE3DPROC, gltexstorage3d); \
    HandleUnsupported(PFNGLGETINTERNALFORMATIVPROC, glgetinternalformativ); \
    HandleUnsupported(PFNGLDISPATCHCOMPUTEPROC, gldispatchcompute); \
    HandleUnsupported(PFNGLDISPATCHCOMPUTEINDIRECTPROC, gldispatchcomputeindirect); \
    HandleUnsupported(PFNGLDRAWARRAYSINDIRECTPROC, gldrawarraysindirect); \
    HandleUnsupported(PFNGLDRAWELEMENTSINDIRECTPROC, gldrawelementsindirect); \
    HandleUnsupported(PFNGLFRAMEBUFFERPARAMETERIPROC, glframebufferparameteri); \
    HandleUnsupported(PFNGLGETFRAMEBUFFERPARAMETERIVPROC, glgetframebufferparameteriv); \
    HandleUnsupported(PFNGLGETPROGRAMINTERFACEIVPROC, glgetprograminterfaceiv); \
    HandleUnsupported(PFNGLGETPROGRAMRESOURCENAMEPROC, glgetprogramresourcename); \
    HandleUnsupported(PFNGLGETPROGRAMRESOURCELOCATIONPROC, glgetprogramresourcelocation); \
    HandleUnsupported(PFNGLACTIVESHADERPROGRAMPROC, glactiveshaderprogram); \
    HandleUnsupported(PFNGLGETPROGRAMPIPELINEIVPROC, glgetprogrampipelineiv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1IPROC, glprogramuniform1i); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2IPROC, glprogramuniform2i); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3IPROC, glprogramuniform3i); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4IPROC, glprogramuniform4i); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1UIPROC, glprogramuniform1ui); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2UIPROC, glprogramuniform2ui); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3UIPROC, glprogramuniform3ui); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4UIPROC, glprogramuniform4ui); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1FPROC, glprogramuniform1f); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2FPROC, glprogramuniform2f); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3FPROC, glprogramuniform3f); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4FPROC, glprogramuniform4f); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1IVPROC, glprogramuniform1iv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2IVPROC, glprogramuniform2iv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3IVPROC, glprogramuniform3iv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4IVPROC, glprogramuniform4iv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1UIVPROC, glprogramuniform1uiv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2UIVPROC, glprogramuniform2uiv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3UIVPROC, glprogramuniform3uiv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4UIVPROC, glprogramuniform4uiv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1FVPROC, glprogramuniform1fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2FVPROC, glprogramuniform2fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3FVPROC, glprogramuniform3fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4FVPROC, glprogramuniform4fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX2FVPROC, glprogramuniformmatrix2fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX3FVPROC, glprogramuniformmatrix3fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX4FVPROC, glprogramuniformmatrix4fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC, glprogramuniformmatrix2x3fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC, glprogramuniformmatrix3x2fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC, glprogramuniformmatrix2x4fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC, glprogramuniformmatrix4x2fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC, glprogramuniformmatrix3x4fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC, glprogramuniformmatrix4x3fv); \
    HandleUnsupported(PFNGLVALIDATEPROGRAMPIPELINEPROC, glvalidateprogrampipeline); \
    HandleUnsupported(PFNGLGETPROGRAMPIPELINEINFOLOGPROC, glgetprogrampipelineinfolog); \
    HandleUnsupported(PFNGLMEMORYBARRIERPROC, glmemorybarrier); \
    HandleUnsupported(PFNGLMEMORYBARRIERBYREGIONPROC, glmemorybarrierbyregion); \
    HandleUnsupported(PFNGLGETMULTISAMPLEFVPROC, glgetmultisamplefv); \
    HandleUnsupported(PFNGLSAMPLEMASKIPROC, glsamplemaski); \
    HandleUnsupported(PFNGLVERTEXATTRIBBINDINGPROC, glvertexattribbinding); \
    HandleUnsupported(PFNGLVERTEXBINDINGDIVISORPROC, glvertexbindingdivisor); \
    HandleUnsupported(PFNGLBLENDBARRIERPROC, glblendbarrier); \
    HandleUnsupported(PFNGLCOPYIMAGESUBDATAPROC, glcopyimagesubdata); \
    HandleUnsupported(PFNGLDEBUGMESSAGECONTROLPROC, gldebugmessagecontrol); \
    HandleUnsupported(PFNGLDEBUGMESSAGEINSERTPROC, gldebugmessageinsert); \
    HandleUnsupported(PFNGLDEBUGMESSAGECALLBACKPROC, gldebugmessagecallback); \
    HandleUnsupported(PFNGLPUSHDEBUGGROUPPROC, glpushdebuggroup); \
    HandleUnsupported(PFNGLPOPDEBUGGROUPPROC, glpopdebuggroup); \
    HandleUnsupported(PFNGLOBJECTPTRLABELPROC, globjectptrlabel); \
    HandleUnsupported(PFNGLGETOBJECTPTRLABELPROC, glgetobjectptrlabel); \
    HandleUnsupported(PFNGLGETPOINTERVPROC, glgetpointerv); \
    HandleUnsupported(PFNGLENABLEIPROC, glenablei); \
    HandleUnsupported(PFNGLBLENDEQUATIONIPROC, glblendequationi); \
    HandleUnsupported(PFNGLBLENDEQUATIONSEPARATEIPROC, glblendequationseparatei); \
    HandleUnsupported(PFNGLBLENDFUNCIPROC, glblendfunci); \
    HandleUnsupported(PFNGLBLENDFUNCSEPARATEIPROC, glblendfuncseparatei); \
    HandleUnsupported(PFNGLCOLORMASKIPROC, glcolormaski); \
    HandleUnsupported(PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC, gldrawrangeelementsbasevertex); \
    HandleUnsupported(PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC, gldrawelementsinstancedbasevertex); \
    HandleUnsupported(PFNGLPRIMITIVEBOUNDINGBOXPROC, glprimitiveboundingbox); \
    HandleUnsupported(PFNGLREADNPIXELSPROC, glreadnpixels); \
    HandleUnsupported(PFNGLGETNUNIFORMFVPROC, glgetnuniformfv); \
    HandleUnsupported(PFNGLGETNUNIFORMIVPROC, glgetnuniformiv); \
    HandleUnsupported(PFNGLGETNUNIFORMUIVPROC, glgetnuniformuiv); \
    HandleUnsupported(PFNGLMINSAMPLESHADINGPROC, glminsampleshading); \
    HandleUnsupported(PFNGLPATCHPARAMETERIPROC, glpatchparameteri); \
    HandleUnsupported(PFNGLTEXPARAMETERIIVPROC, gltexparameteriiv); \
    HandleUnsupported(PFNGLTEXPARAMETERIUIVPROC, gltexparameteriuiv); \
    HandleUnsupported(PFNGLSAMPLERPARAMETERIIVPROC, glsamplerparameteriiv); \
    HandleUnsupported(PFNGLSAMPLERPARAMETERIUIVPROC, glsamplerparameteriuiv); \
    HandleUnsupported(PFNGLGETSAMPLERPARAMETERIIVPROC, glgetsamplerparameteriiv); \
    HandleUnsupported(PFNGLGETSAMPLERPARAMETERIUIVPROC, glgetsamplerparameteriuiv); \
    HandleUnsupported(PFNGLTEXBUFFERPROC, gltexbuffer); \
    HandleUnsupported(PFNGLTEXBUFFERRANGEPROC, gltexbufferrange); \
    HandleUnsupported(PFNGLBLENDBARRIERKHRPROC, glblendbarrierkhr); \
    HandleUnsupported(PFNGLDEBUGMESSAGECONTROLKHRPROC, gldebugmessagecontrolkhr); \
    HandleUnsupported(PFNGLDEBUGMESSAGEINSERTKHRPROC, gldebugmessageinsertkhr); \
    HandleUnsupported(PFNGLDEBUGMESSAGECALLBACKKHRPROC, gldebugmessagecallbackkhr); \
    HandleUnsupported(PFNGLGETDEBUGMESSAGELOGKHRPROC, glgetdebugmessagelogkhr); \
    HandleUnsupported(PFNGLPUSHDEBUGGROUPKHRPROC, glpushdebuggroupkhr); \
    HandleUnsupported(PFNGLPOPDEBUGGROUPKHRPROC, glpopdebuggroupkhr); \
    HandleUnsupported(PFNGLOBJECTLABELKHRPROC, globjectlabelkhr); \
    HandleUnsupported(PFNGLGETOBJECTLABELKHRPROC, glgetobjectlabelkhr); \
    HandleUnsupported(PFNGLOBJECTPTRLABELKHRPROC, globjectptrlabelkhr); \
    HandleUnsupported(PFNGLGETOBJECTPTRLABELKHRPROC, glgetobjectptrlabelkhr); \
    HandleUnsupported(PFNGLGETPOINTERVKHRPROC, glgetpointervkhr); \
    HandleUnsupported(PFNGLGETGRAPHICSRESETSTATUSKHRPROC, glgetgraphicsresetstatuskhr); \
    HandleUnsupported(PFNGLREADNPIXELSKHRPROC, glreadnpixelskhr); \
    HandleUnsupported(PFNGLGETNUNIFORMFVKHRPROC, glgetnuniformfvkhr); \
    HandleUnsupported(PFNGLGETNUNIFORMIVKHRPROC, glgetnuniformivkhr); \
    HandleUnsupported(PFNGLGETNUNIFORMUIVKHRPROC, glgetnuniformuivkhr); \
    HandleUnsupported(PFNGLEGLIMAGETARGETTEXTURE2DOESPROC, gleglimagetargettexture2does); \
    HandleUnsupported(PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC, gleglimagetargetrenderbufferstorageoes); \
    HandleUnsupported(PFNGLCOPYIMAGESUBDATAOESPROC, glcopyimagesubdataoes); \
    HandleUnsupported(PFNGLENABLEIOESPROC, glenableioes); \
    HandleUnsupported(PFNGLDISABLEIOESPROC, gldisableioes); \
    HandleUnsupported(PFNGLBLENDEQUATIONIOESPROC, glblendequationioes); \
    HandleUnsupported(PFNGLBLENDEQUATIONSEPARATEIOESPROC, glblendequationseparateioes); \
    HandleUnsupported(PFNGLBLENDFUNCIOESPROC, glblendfuncioes); \
    HandleUnsupported(PFNGLBLENDFUNCSEPARATEIOESPROC, glblendfuncseparateioes); \
    HandleUnsupported(PFNGLCOLORMASKIOESPROC, glcolormaskioes); \
    HandleUnsupported(PFNGLISENABLEDIOESPROC, glisenabledioes); \
    HandleUnsupported(PFNGLDRAWELEMENTSBASEVERTEXOESPROC, gldrawelementsbasevertexoes); \
    HandleUnsupported(PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC, gldrawrangeelementsbasevertexoes); \
    HandleUnsupported(PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC, gldrawelementsinstancedbasevertexoes); \
    HandleUnsupported(PFNGLMULTIDRAWELEMENTSBASEVERTEXOESPROC, glmultidrawelementsbasevertexoes); \
    HandleUnsupported(PFNGLGETPROGRAMBINARYOESPROC, glgetprogrambinaryoes); \
    HandleUnsupported(PFNGLPROGRAMBINARYOESPROC, glprogrambinaryoes); \
    HandleUnsupported(PFNGLGETBUFFERPOINTERVOESPROC, glgetbufferpointervoes); \
    HandleUnsupported(PFNGLPRIMITIVEBOUNDINGBOXOESPROC, glprimitiveboundingboxoes); \
    HandleUnsupported(PFNGLMINSAMPLESHADINGOESPROC, glminsampleshadingoes); \
    HandleUnsupported(PFNGLPATCHPARAMETERIOESPROC, glpatchparameterioes); \
    HandleUnsupported(PFNGLTEXIMAGE3DOESPROC, glteximage3does); \
    HandleUnsupported(PFNGLTEXSUBIMAGE3DOESPROC, gltexsubimage3does); \
    HandleUnsupported(PFNGLCOPYTEXSUBIMAGE3DOESPROC, glcopytexsubimage3does); \
    HandleUnsupported(PFNGLCOMPRESSEDTEXIMAGE3DOESPROC, glcompressedteximage3does); \
    HandleUnsupported(PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC, glcompressedtexsubimage3does); \
    HandleUnsupported(PFNGLTEXPARAMETERIIVOESPROC, gltexparameteriivoes); \
    HandleUnsupported(PFNGLTEXPARAMETERIUIVOESPROC, gltexparameteriuivoes); \
    HandleUnsupported(PFNGLGETTEXPARAMETERIIVOESPROC, glgettexparameteriivoes); \
    HandleUnsupported(PFNGLGETTEXPARAMETERIUIVOESPROC, glgettexparameteriuivoes); \
    HandleUnsupported(PFNGLSAMPLERPARAMETERIIVOESPROC, glsamplerparameteriivoes); \
    HandleUnsupported(PFNGLSAMPLERPARAMETERIUIVOESPROC, glsamplerparameteriuivoes); \
    HandleUnsupported(PFNGLGETSAMPLERPARAMETERIIVOESPROC, glgetsamplerparameteriivoes); \
    HandleUnsupported(PFNGLGETSAMPLERPARAMETERIUIVOESPROC, glgetsamplerparameteriuivoes); \
    HandleUnsupported(PFNGLTEXBUFFEROESPROC, gltexbufferoes); \
    HandleUnsupported(PFNGLTEXBUFFERRANGEOESPROC, gltexbufferrangeoes); \
    HandleUnsupported(PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC, gltexstorage3dmultisampleoes); \
    HandleUnsupported(PFNGLTEXTUREVIEWOESPROC, gltextureviewoes); \
    HandleUnsupported(PFNGLBINDVERTEXARRAYOESPROC, glbindvertexarrayoes); \
    HandleUnsupported(PFNGLDELETEVERTEXARRAYSOESPROC, gldeletevertexarraysoes); \
    HandleUnsupported(PFNGLGENVERTEXARRAYSOESPROC, glgenvertexarraysoes); \
    HandleUnsupported(PFNGLISVERTEXARRAYOESPROC, glisvertexarrayoes); \
    HandleUnsupported(PFNGLVIEWPORTINDEXEDFVOESPROC, glviewportindexedfvoes); \
    HandleUnsupported(PFNGLSCISSORARRAYVOESPROC, glscissorarrayvoes); \
    HandleUnsupported(PFNGLSCISSORINDEXEDOESPROC, glscissorindexedoes); \
    HandleUnsupported(PFNGLSCISSORINDEXEDVOESPROC, glscissorindexedvoes); \
    HandleUnsupported(PFNGLDEPTHRANGEARRAYFVOESPROC, gldepthrangearrayfvoes); \
    HandleUnsupported(PFNGLDEPTHRANGEINDEXEDFOESPROC, gldepthrangeindexedfoes); \
    HandleUnsupported(PFNGLGETFLOATI_VOESPROC, glgetfloati_voes); \
    HandleUnsupported(PFNGLGETPERFMONITORGROUPSAMDPROC, glgetperfmonitorgroupsamd); \
    HandleUnsupported(PFNGLGETPERFMONITORCOUNTERSAMDPROC, glgetperfmonitorcountersamd); \
    HandleUnsupported(PFNGLGETPERFMONITORGROUPSTRINGAMDPROC, glgetperfmonitorgroupstringamd); \
    HandleUnsupported(PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC, glgetperfmonitorcounterstringamd); \
    HandleUnsupported(PFNGLGETPERFMONITORCOUNTERINFOAMDPROC, glgetperfmonitorcounterinfoamd); \
    HandleUnsupported(PFNGLGENPERFMONITORSAMDPROC, glgenperfmonitorsamd); \
    HandleUnsupported(PFNGLDELETEPERFMONITORSAMDPROC, gldeleteperfmonitorsamd); \
    HandleUnsupported(PFNGLSELECTPERFMONITORCOUNTERSAMDPROC, glselectperfmonitorcountersamd); \
    HandleUnsupported(PFNGLBEGINPERFMONITORAMDPROC, glbeginperfmonitoramd); \
    HandleUnsupported(PFNGLENDPERFMONITORAMDPROC, glendperfmonitoramd); \
    HandleUnsupported(PFNGLGETPERFMONITORCOUNTERDATAAMDPROC, glgetperfmonitorcounterdataamd); \
    HandleUnsupported(PFNGLBLITFRAMEBUFFERANGLEPROC, glblitframebufferangle); \
    HandleUnsupported(PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC, glrenderbufferstoragemultisampleangle); \
    HandleUnsupported(PFNGLDRAWARRAYSINSTANCEDANGLEPROC, gldrawarraysinstancedangle); \
    HandleUnsupported(PFNGLDRAWELEMENTSINSTANCEDANGLEPROC, gldrawelementsinstancedangle); \
    HandleUnsupported(PFNGLVERTEXATTRIBDIVISORANGLEPROC, glvertexattribdivisorangle); \
    HandleUnsupported(PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC, glgettranslatedshadersourceangle); \
    HandleUnsupported(PFNGLCOPYTEXTURELEVELSAPPLEPROC, glcopytexturelevelsapple); \
    HandleUnsupported(PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC, glrenderbufferstoragemultisampleapple); \
    HandleUnsupported(PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC, glresolvemultisampleframebufferapple); \
    HandleUnsupported(PFNGLFENCESYNCAPPLEPROC, glfencesyncapple); \
    HandleUnsupported(PFNGLISSYNCAPPLEPROC, glissyncapple); \
    HandleUnsupported(PFNGLDELETESYNCAPPLEPROC, gldeletesyncapple); \
    HandleUnsupported(PFNGLCLIENTWAITSYNCAPPLEPROC, glclientwaitsyncapple); \
    HandleUnsupported(PFNGLWAITSYNCAPPLEPROC, glwaitsyncapple); \
    HandleUnsupported(PFNGLGETINTEGER64VAPPLEPROC, glgetinteger64vapple); \
    HandleUnsupported(PFNGLGETSYNCIVAPPLEPROC, glgetsyncivapple); \
    HandleUnsupported(PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC, gldrawelementsinstancedbaseinstanceext); \
    HandleUnsupported(PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC, glbindfragdatalocationindexedext); \
    HandleUnsupported(PFNGLBINDFRAGDATALOCATIONEXTPROC, glbindfragdatalocationext); \
    HandleUnsupported(PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC, glgetprogramresourcelocationindexext); \
    HandleUnsupported(PFNGLGETFRAGDATAINDEXEXTPROC, glgetfragdataindexext); \
    HandleUnsupported(PFNGLCOPYIMAGESUBDATAEXTPROC, glcopyimagesubdataext); \
    HandleUnsupported(PFNGLLABELOBJECTEXTPROC, gllabelobjectext); \
    HandleUnsupported(PFNGLGETOBJECTLABELEXTPROC, glgetobjectlabelext); \
    HandleUnsupported(PFNGLINSERTEVENTMARKEREXTPROC, glinserteventmarkerext); \
    HandleUnsupported(PFNGLPUSHGROUPMARKEREXTPROC, glpushgroupmarkerext); \
    HandleUnsupported(PFNGLPOPGROUPMARKEREXTPROC, glpopgroupmarkerext); \
    HandleUnsupported(PFNGLDISCARDFRAMEBUFFEREXTPROC, gldiscardframebufferext); \
    HandleUnsupported(PFNGLGENQUERIESEXTPROC, glgenqueriesext); \
    HandleUnsupported(PFNGLDELETEQUERIESEXTPROC, gldeletequeriesext); \
    HandleUnsupported(PFNGLISQUERYEXTPROC, glisqueryext); \
    HandleUnsupported(PFNGLBEGINQUERYEXTPROC, glbeginqueryext); \
    HandleUnsupported(PFNGLENDQUERYEXTPROC, glendqueryext); \
    HandleUnsupported(PFNGLQUERYCOUNTEREXTPROC, glquerycounterext); \
    HandleUnsupported(PFNGLGETQUERYIVEXTPROC, glgetqueryivext); \
    HandleUnsupported(PFNGLGETQUERYOBJECTIVEXTPROC, glgetqueryobjectivext); \
    HandleUnsupported(PFNGLGETQUERYOBJECTUIVEXTPROC, glgetqueryobjectuivext); \
    HandleUnsupported(PFNGLGETQUERYOBJECTI64VEXTPROC, glgetqueryobjecti64vext); \
    HandleUnsupported(PFNGLGETQUERYOBJECTUI64VEXTPROC, glgetqueryobjectui64vext); \
    HandleUnsupported(PFNGLDRAWBUFFERSEXTPROC, gldrawbuffersext); \
    HandleUnsupported(PFNGLENABLEIEXTPROC, glenableiext); \
    HandleUnsupported(PFNGLDISABLEIEXTPROC, gldisableiext); \
    HandleUnsupported(PFNGLBLENDEQUATIONIEXTPROC, glblendequationiext); \
    HandleUnsupported(PFNGLBLENDEQUATIONSEPARATEIEXTPROC, glblendequationseparateiext); \
    HandleUnsupported(PFNGLBLENDFUNCIEXTPROC, glblendfunciext); \
    HandleUnsupported(PFNGLBLENDFUNCSEPARATEIEXTPROC, glblendfuncseparateiext); \
    HandleUnsupported(PFNGLCOLORMASKIEXTPROC, glcolormaskiext); \
    HandleUnsupported(PFNGLISENABLEDIEXTPROC, glisenablediext); \
    HandleUnsupported(PFNGLDRAWELEMENTSBASEVERTEXEXTPROC, gldrawelementsbasevertexext); \
    HandleUnsupported(PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC, gldrawrangeelementsbasevertexext); \
    HandleUnsupported(PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC, gldrawelementsinstancedbasevertexext); \
    HandleUnsupported(PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC, glmultidrawelementsbasevertexext); \
    HandleUnsupported(PFNGLDRAWARRAYSINSTANCEDEXTPROC, gldrawarraysinstancedext); \
    HandleUnsupported(PFNGLDRAWELEMENTSINSTANCEDEXTPROC, gldrawelementsinstancedext); \
    HandleUnsupported(PFNGLFRAMEBUFFERTEXTUREEXTPROC, glframebuffertextureext); \
    HandleUnsupported(PFNGLVERTEXATTRIBDIVISOREXTPROC, glvertexattribdivisorext); \
    HandleUnsupported(PFNGLMAPBUFFERRANGEEXTPROC, glmapbufferrangeext); \
    HandleUnsupported(PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC, glflushmappedbufferrangeext); \
    HandleUnsupported(PFNGLMULTIDRAWARRAYSEXTPROC, glmultidrawarraysext); \
    HandleUnsupported(PFNGLMULTIDRAWELEMENTSEXTPROC, glmultidrawelementsext); \
    HandleUnsupported(PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC, glmultidrawarraysindirectext); \
    HandleUnsupported(PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC, glmultidrawelementsindirectext); \
    HandleUnsupported(PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC, glrenderbufferstoragemultisampleext); \
    HandleUnsupported(PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC, glframebuffertexture2dmultisampleext); \
    HandleUnsupported(PFNGLREADBUFFERINDEXEDEXTPROC, glreadbufferindexedext); \
    HandleUnsupported(PFNGLDRAWBUFFERSINDEXEDEXTPROC, gldrawbuffersindexedext); \
    HandleUnsupported(PFNGLGETINTEGERI_VEXTPROC, glgetintegeri_vext); \
    HandleUnsupported(PFNGLPOLYGONOFFSETCLAMPEXTPROC, glpolygonoffsetclampext); \
    HandleUnsupported(PFNGLPRIMITIVEBOUNDINGBOXEXTPROC, glprimitiveboundingboxext); \
    HandleUnsupported(PFNGLRASTERSAMPLESEXTPROC, glrastersamplesext); \
    HandleUnsupported(PFNGLGETGRAPHICSRESETSTATUSEXTPROC, glgetgraphicsresetstatusext); \
    HandleUnsupported(PFNGLREADNPIXELSEXTPROC, glreadnpixelsext); \
    HandleUnsupported(PFNGLGETNUNIFORMFVEXTPROC, glgetnuniformfvext); \
    HandleUnsupported(PFNGLGETNUNIFORMIVEXTPROC, glgetnuniformivext); \
    HandleUnsupported(PFNGLACTIVESHADERPROGRAMEXTPROC, glactiveshaderprogramext); \
    HandleUnsupported(PFNGLBINDPROGRAMPIPELINEEXTPROC, glbindprogrampipelineext); \
    HandleUnsupported(PFNGLCREATESHADERPROGRAMVEXTPROC, glcreateshaderprogramvext); \
    HandleUnsupported(PFNGLDELETEPROGRAMPIPELINESEXTPROC, gldeleteprogrampipelinesext); \
    HandleUnsupported(PFNGLGENPROGRAMPIPELINESEXTPROC, glgenprogrampipelinesext); \
    HandleUnsupported(PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC, glgetprogrampipelineinfologext); \
    HandleUnsupported(PFNGLGETPROGRAMPIPELINEIVEXTPROC, glgetprogrampipelineivext); \
    HandleUnsupported(PFNGLISPROGRAMPIPELINEEXTPROC, glisprogrampipelineext); \
    HandleUnsupported(PFNGLPROGRAMPARAMETERIEXTPROC, glprogramparameteriext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1FEXTPROC, glprogramuniform1fext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1FVEXTPROC, glprogramuniform1fvext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1IEXTPROC, glprogramuniform1iext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1IVEXTPROC, glprogramuniform1ivext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2FEXTPROC, glprogramuniform2fext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2FVEXTPROC, glprogramuniform2fvext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2IEXTPROC, glprogramuniform2iext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2IVEXTPROC, glprogramuniform2ivext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3FEXTPROC, glprogramuniform3fext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3FVEXTPROC, glprogramuniform3fvext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3IEXTPROC, glprogramuniform3iext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3IVEXTPROC, glprogramuniform3ivext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4FEXTPROC, glprogramuniform4fext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4FVEXTPROC, glprogramuniform4fvext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4IEXTPROC, glprogramuniform4iext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4IVEXTPROC, glprogramuniform4ivext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC, glprogramuniformmatrix2fvext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC, glprogramuniformmatrix3fvext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC, glprogramuniformmatrix4fvext); \
    HandleUnsupported(PFNGLUSEPROGRAMSTAGESEXTPROC, gluseprogramstagesext); \
    HandleUnsupported(PFNGLVALIDATEPROGRAMPIPELINEEXTPROC, glvalidateprogrampipelineext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1UIEXTPROC, glprogramuniform1uiext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2UIEXTPROC, glprogramuniform2uiext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3UIEXTPROC, glprogramuniform3uiext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4UIEXTPROC, glprogramuniform4uiext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1UIVEXTPROC, glprogramuniform1uivext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2UIVEXTPROC, glprogramuniform2uivext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3UIVEXTPROC, glprogramuniform3uivext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4UIVEXTPROC, glprogramuniform4uivext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC, glprogramuniformmatrix2x3fvext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC, glprogramuniformmatrix3x2fvext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC, glprogramuniformmatrix2x4fvext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC, glprogramuniformmatrix4x2fvext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC, glprogramuniformmatrix3x4fvext); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC, glprogramuniformmatrix4x3fvext); \
    HandleUnsupported(PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC, glframebufferpixellocalstoragesizeext); \
    HandleUnsupported(PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC, glgetframebufferpixellocalstoragesizeext); \
    HandleUnsupported(PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC, glclearpixellocalstorageuiext); \
    HandleUnsupported(PFNGLTEXPAGECOMMITMENTEXTPROC, gltexpagecommitmentext); \
    HandleUnsupported(PFNGLPATCHPARAMETERIEXTPROC, glpatchparameteriext); \
    HandleUnsupported(PFNGLTEXPARAMETERIIVEXTPROC, gltexparameteriivext); \
    HandleUnsupported(PFNGLTEXPARAMETERIUIVEXTPROC, gltexparameteriuivext); \
    HandleUnsupported(PFNGLGETTEXPARAMETERIIVEXTPROC, glgettexparameteriivext); \
    HandleUnsupported(PFNGLGETTEXPARAMETERIUIVEXTPROC, glgettexparameteriuivext); \
    HandleUnsupported(PFNGLSAMPLERPARAMETERIIVEXTPROC, glsamplerparameteriivext); \
    HandleUnsupported(PFNGLSAMPLERPARAMETERIUIVEXTPROC, glsamplerparameteriuivext); \
    HandleUnsupported(PFNGLGETSAMPLERPARAMETERIIVEXTPROC, glgetsamplerparameteriivext); \
    HandleUnsupported(PFNGLGETSAMPLERPARAMETERIUIVEXTPROC, glgetsamplerparameteriuivext); \
    HandleUnsupported(PFNGLTEXBUFFEREXTPROC, gltexbufferext); \
    HandleUnsupported(PFNGLTEXBUFFERRANGEEXTPROC, gltexbufferrangeext); \
    HandleUnsupported(PFNGLTEXSTORAGE1DEXTPROC, gltexstorage1dext); \
    HandleUnsupported(PFNGLTEXSTORAGE2DEXTPROC, gltexstorage2dext); \
    HandleUnsupported(PFNGLTEXSTORAGE3DEXTPROC, gltexstorage3dext); \
    HandleUnsupported(PFNGLTEXTURESTORAGE1DEXTPROC, gltexturestorage1dext); \
    HandleUnsupported(PFNGLTEXTUREVIEWEXTPROC, gltextureviewext); \
    HandleUnsupported(PFNGLWINDOWRECTANGLESEXTPROC, glwindowrectanglesext); \
    HandleUnsupported(PFNGLFRAMEBUFFERTEXTURE2DDOWNSAMPLEIMGPROC, glframebuffertexture2ddownsampleimg); \
    HandleUnsupported(PFNGLFRAMEBUFFERTEXTURELAYERDOWNSAMPLEIMGPROC, glframebuffertexturelayerdownsampleimg); \
    HandleUnsupported(PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC, glrenderbufferstoragemultisampleimg); \
    HandleUnsupported(PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC, glframebuffertexture2dmultisampleimg); \
    HandleUnsupported(PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC, glapplyframebufferattachmentcmaaintel); \
    HandleUnsupported(PFNGLBEGINPERFQUERYINTELPROC, glbeginperfqueryintel); \
    HandleUnsupported(PFNGLCREATEPERFQUERYINTELPROC, glcreateperfqueryintel); \
    HandleUnsupported(PFNGLDELETEPERFQUERYINTELPROC, gldeleteperfqueryintel); \
    HandleUnsupported(PFNGLENDPERFQUERYINTELPROC, glendperfqueryintel); \
    HandleUnsupported(PFNGLGETFIRSTPERFQUERYIDINTELPROC, glgetfirstperfqueryidintel); \
    HandleUnsupported(PFNGLGETNEXTPERFQUERYIDINTELPROC, glgetnextperfqueryidintel); \
    HandleUnsupported(PFNGLGETPERFCOUNTERINFOINTELPROC, glgetperfcounterinfointel); \
    HandleUnsupported(PFNGLGETPERFQUERYDATAINTELPROC, glgetperfquerydataintel); \
    HandleUnsupported(PFNGLGETPERFQUERYIDBYNAMEINTELPROC, glgetperfqueryidbynameintel); \
    HandleUnsupported(PFNGLGETPERFQUERYINFOINTELPROC, glgetperfqueryinfointel); \
    HandleUnsupported(PFNGLGETTEXTUREHANDLENVPROC, glgettexturehandlenv); \
    HandleUnsupported(PFNGLGETTEXTURESAMPLERHANDLENVPROC, glgettexturesamplerhandlenv); \
    HandleUnsupported(PFNGLMAKETEXTUREHANDLERESIDENTNVPROC, glmaketexturehandleresidentnv); \
    HandleUnsupported(PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC, glmaketexturehandlenonresidentnv); \
    HandleUnsupported(PFNGLGETIMAGEHANDLENVPROC, glgetimagehandlenv); \
    HandleUnsupported(PFNGLMAKEIMAGEHANDLERESIDENTNVPROC, glmakeimagehandleresidentnv); \
    HandleUnsupported(PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC, glmakeimagehandlenonresidentnv); \
    HandleUnsupported(PFNGLUNIFORMHANDLEUI64NVPROC, gluniformhandleui64nv); \
    HandleUnsupported(PFNGLUNIFORMHANDLEUI64VNVPROC, gluniformhandleui64vnv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC, glprogramuniformhandleui64nv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC, glprogramuniformhandleui64vnv); \
    HandleUnsupported(PFNGLISTEXTUREHANDLERESIDENTNVPROC, glistexturehandleresidentnv); \
    HandleUnsupported(PFNGLISIMAGEHANDLERESIDENTNVPROC, glisimagehandleresidentnv); \
    HandleUnsupported(PFNGLBLENDPARAMETERINVPROC, glblendparameterinv); \
    HandleUnsupported(PFNGLBLENDBARRIERNVPROC, glblendbarriernv); \
    HandleUnsupported(PFNGLBEGINCONDITIONALRENDERNVPROC, glbeginconditionalrendernv); \
    HandleUnsupported(PFNGLENDCONDITIONALRENDERNVPROC, glendconditionalrendernv); \
    HandleUnsupported(PFNGLSUBPIXELPRECISIONBIASNVPROC, glsubpixelprecisionbiasnv); \
    HandleUnsupported(PFNGLCONSERVATIVERASTERPARAMETERINVPROC, glconservativerasterparameterinv); \
    HandleUnsupported(PFNGLCOPYBUFFERSUBDATANVPROC, glcopybuffersubdatanv); \
    HandleUnsupported(PFNGLCOVERAGEMASKNVPROC, glcoveragemasknv); \
    HandleUnsupported(PFNGLCOVERAGEOPERATIONNVPROC, glcoverageoperationnv); \
    HandleUnsupported(PFNGLDRAWBUFFERSNVPROC, gldrawbuffersnv); \
    HandleUnsupported(PFNGLDRAWARRAYSINSTANCEDNVPROC, gldrawarraysinstancednv); \
    HandleUnsupported(PFNGLDRAWELEMENTSINSTANCEDNVPROC, gldrawelementsinstancednv); \
    HandleUnsupported(PFNGLDELETEFENCESNVPROC, gldeletefencesnv); \
    HandleUnsupported(PFNGLGENFENCESNVPROC, glgenfencesnv); \
    HandleUnsupported(PFNGLISFENCENVPROC, glisfencenv); \
    HandleUnsupported(PFNGLTESTFENCENVPROC, gltestfencenv); \
    HandleUnsupported(PFNGLGETFENCEIVNVPROC, glgetfenceivnv); \
    HandleUnsupported(PFNGLFINISHFENCENVPROC, glfinishfencenv); \
    HandleUnsupported(PFNGLSETFENCENVPROC, glsetfencenv); \
    HandleUnsupported(PFNGLFRAGMENTCOVERAGECOLORNVPROC, glfragmentcoveragecolornv); \
    HandleUnsupported(PFNGLBLITFRAMEBUFFERNVPROC, glblitframebuffernv); \
    HandleUnsupported(PFNGLCOVERAGEMODULATIONTABLENVPROC, glcoveragemodulationtablenv); \
    HandleUnsupported(PFNGLGETCOVERAGEMODULATIONTABLENVPROC, glgetcoveragemodulationtablenv); \
    HandleUnsupported(PFNGLCOVERAGEMODULATIONNVPROC, glcoveragemodulationnv); \
    HandleUnsupported(PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC, glrenderbufferstoragemultisamplenv); \
    HandleUnsupported(PFNGLUNIFORM1I64NVPROC, gluniform1i64nv); \
    HandleUnsupported(PFNGLUNIFORM2I64NVPROC, gluniform2i64nv); \
    HandleUnsupported(PFNGLUNIFORM3I64NVPROC, gluniform3i64nv); \
    HandleUnsupported(PFNGLUNIFORM4I64NVPROC, gluniform4i64nv); \
    HandleUnsupported(PFNGLUNIFORM1I64VNVPROC, gluniform1i64vnv); \
    HandleUnsupported(PFNGLUNIFORM2I64VNVPROC, gluniform2i64vnv); \
    HandleUnsupported(PFNGLUNIFORM3I64VNVPROC, gluniform3i64vnv); \
    HandleUnsupported(PFNGLUNIFORM4I64VNVPROC, gluniform4i64vnv); \
    HandleUnsupported(PFNGLUNIFORM1UI64NVPROC, gluniform1ui64nv); \
    HandleUnsupported(PFNGLUNIFORM2UI64NVPROC, gluniform2ui64nv); \
    HandleUnsupported(PFNGLUNIFORM3UI64NVPROC, gluniform3ui64nv); \
    HandleUnsupported(PFNGLUNIFORM4UI64NVPROC, gluniform4ui64nv); \
    HandleUnsupported(PFNGLUNIFORM1UI64VNVPROC, gluniform1ui64vnv); \
    HandleUnsupported(PFNGLUNIFORM2UI64VNVPROC, gluniform2ui64vnv); \
    HandleUnsupported(PFNGLUNIFORM3UI64VNVPROC, gluniform3ui64vnv); \
    HandleUnsupported(PFNGLUNIFORM4UI64VNVPROC, gluniform4ui64vnv); \
    HandleUnsupported(PFNGLGETUNIFORMI64VNVPROC, glgetuniformi64vnv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1I64NVPROC, glprogramuniform1i64nv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2I64NVPROC, glprogramuniform2i64nv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3I64NVPROC, glprogramuniform3i64nv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4I64NVPROC, glprogramuniform4i64nv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1I64VNVPROC, glprogramuniform1i64vnv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2I64VNVPROC, glprogramuniform2i64vnv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3I64VNVPROC, glprogramuniform3i64vnv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4I64VNVPROC, glprogramuniform4i64vnv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1UI64NVPROC, glprogramuniform1ui64nv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2UI64NVPROC, glprogramuniform2ui64nv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3UI64NVPROC, glprogramuniform3ui64nv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4UI64NVPROC, glprogramuniform4ui64nv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1UI64VNVPROC, glprogramuniform1ui64vnv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2UI64VNVPROC, glprogramuniform2ui64vnv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3UI64VNVPROC, glprogramuniform3ui64vnv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4UI64VNVPROC, glprogramuniform4ui64vnv); \
    HandleUnsupported(PFNGLVERTEXATTRIBDIVISORNVPROC, glvertexattribdivisornv); \
    HandleUnsupported(PFNGLGETINTERNALFORMATSAMPLEIVNVPROC, glgetinternalformatsampleivnv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX2X3FVNVPROC, gluniformmatrix2x3fvnv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX3X2FVNVPROC, gluniformmatrix3x2fvnv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX2X4FVNVPROC, gluniformmatrix2x4fvnv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX4X2FVNVPROC, gluniformmatrix4x2fvnv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX3X4FVNVPROC, gluniformmatrix3x4fvnv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX4X3FVNVPROC, gluniformmatrix4x3fvnv); \
    HandleUnsupported(PFNGLGENPATHSNVPROC, glgenpathsnv); \
    HandleUnsupported(PFNGLDELETEPATHSNVPROC, gldeletepathsnv); \
    HandleUnsupported(PFNGLISPATHNVPROC, glispathnv); \
    HandleUnsupported(PFNGLPATHCOMMANDSNVPROC, glpathcommandsnv); \
    HandleUnsupported(PFNGLPATHCOORDSNVPROC, glpathcoordsnv); \
    HandleUnsupported(PFNGLPATHSUBCOMMANDSNVPROC, glpathsubcommandsnv); \
    HandleUnsupported(PFNGLPATHSUBCOORDSNVPROC, glpathsubcoordsnv); \
    HandleUnsupported(PFNGLPATHSTRINGNVPROC, glpathstringnv); \
    HandleUnsupported(PFNGLPATHGLYPHSNVPROC, glpathglyphsnv); \
    HandleUnsupported(PFNGLPATHGLYPHRANGENVPROC, glpathglyphrangenv); \
    HandleUnsupported(PFNGLWEIGHTPATHSNVPROC, glweightpathsnv); \
    HandleUnsupported(PFNGLCOPYPATHNVPROC, glcopypathnv); \
    HandleUnsupported(PFNGLINTERPOLATEPATHSNVPROC, glinterpolatepathsnv); \
    HandleUnsupported(PFNGLTRANSFORMPATHNVPROC, gltransformpathnv); \
    HandleUnsupported(PFNGLPATHPARAMETERIVNVPROC, glpathparameterivnv); \
    HandleUnsupported(PFNGLPATHPARAMETERINVPROC, glpathparameterinv); \
    HandleUnsupported(PFNGLPATHPARAMETERFVNVPROC, glpathparameterfvnv); \
    HandleUnsupported(PFNGLPATHPARAMETERFNVPROC, glpathparameterfnv); \
    HandleUnsupported(PFNGLPATHDASHARRAYNVPROC, glpathdasharraynv); \
    HandleUnsupported(PFNGLPATHSTENCILFUNCNVPROC, glpathstencilfuncnv); \
    HandleUnsupported(PFNGLPATHSTENCILDEPTHOFFSETNVPROC, glpathstencildepthoffsetnv); \
    HandleUnsupported(PFNGLSTENCILFILLPATHNVPROC, glstencilfillpathnv); \
    HandleUnsupported(PFNGLSTENCILSTROKEPATHNVPROC, glstencilstrokepathnv); \
    HandleUnsupported(PFNGLSTENCILFILLPATHINSTANCEDNVPROC, glstencilfillpathinstancednv); \
    HandleUnsupported(PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC, glstencilstrokepathinstancednv); \
    HandleUnsupported(PFNGLPATHCOVERDEPTHFUNCNVPROC, glpathcoverdepthfuncnv); \
    HandleUnsupported(PFNGLCOVERFILLPATHNVPROC, glcoverfillpathnv); \
    HandleUnsupported(PFNGLCOVERSTROKEPATHNVPROC, glcoverstrokepathnv); \
    HandleUnsupported(PFNGLCOVERFILLPATHINSTANCEDNVPROC, glcoverfillpathinstancednv); \
    HandleUnsupported(PFNGLCOVERSTROKEPATHINSTANCEDNVPROC, glcoverstrokepathinstancednv); \
    HandleUnsupported(PFNGLGETPATHPARAMETERIVNVPROC, glgetpathparameterivnv); \
    HandleUnsupported(PFNGLGETPATHPARAMETERFVNVPROC, glgetpathparameterfvnv); \
    HandleUnsupported(PFNGLGETPATHCOMMANDSNVPROC, glgetpathcommandsnv); \
    HandleUnsupported(PFNGLGETPATHCOORDSNVPROC, glgetpathcoordsnv); \
    HandleUnsupported(PFNGLGETPATHDASHARRAYNVPROC, glgetpathdasharraynv); \
    HandleUnsupported(PFNGLGETPATHMETRICSNVPROC, glgetpathmetricsnv); \
    HandleUnsupported(PFNGLGETPATHMETRICRANGENVPROC, glgetpathmetricrangenv); \
    HandleUnsupported(PFNGLGETPATHSPACINGNVPROC, glgetpathspacingnv); \
    HandleUnsupported(PFNGLISPOINTINFILLPATHNVPROC, glispointinfillpathnv); \
    HandleUnsupported(PFNGLISPOINTINSTROKEPATHNVPROC, glispointinstrokepathnv); \
    HandleUnsupported(PFNGLGETPATHLENGTHNVPROC, glgetpathlengthnv); \
    HandleUnsupported(PFNGLPOINTALONGPATHNVPROC, glpointalongpathnv); \
    HandleUnsupported(PFNGLMATRIXLOAD3X2FNVPROC, glmatrixload3x2fnv); \
    HandleUnsupported(PFNGLMATRIXLOAD3X3FNVPROC, glmatrixload3x3fnv); \
    HandleUnsupported(PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC, glmatrixloadtranspose3x3fnv); \
    HandleUnsupported(PFNGLMATRIXMULT3X2FNVPROC, glmatrixmult3x2fnv); \
    HandleUnsupported(PFNGLMATRIXMULT3X3FNVPROC, glmatrixmult3x3fnv); \
    HandleUnsupported(PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC, glmatrixmulttranspose3x3fnv); \
    HandleUnsupported(PFNGLSTENCILTHENCOVERFILLPATHNVPROC, glstencilthencoverfillpathnv); \
    HandleUnsupported(PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC, glstencilthencoverstrokepathnv); \
    HandleUnsupported(PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC, glstencilthencoverfillpathinstancednv); \
    HandleUnsupported(PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC, glstencilthencoverstrokepathinstancednv); \
    HandleUnsupported(PFNGLPATHGLYPHINDEXRANGENVPROC, glpathglyphindexrangenv); \
    HandleUnsupported(PFNGLPATHGLYPHINDEXARRAYNVPROC, glpathglyphindexarraynv); \
    HandleUnsupported(PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC, glpathmemoryglyphindexarraynv); \
    HandleUnsupported(PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC, glprogrampathfragmentinputgennv); \
    HandleUnsupported(PFNGLGETPROGRAMRESOURCEFVNVPROC, glgetprogramresourcefvnv); \
    HandleUnsupported(PFNGLREADBUFFERNVPROC, glreadbuffernv); \
    HandleUnsupported(PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC, glframebuffersamplelocationsfvnv); \
    HandleUnsupported(PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC, glnamedframebuffersamplelocationsfvnv); \
    HandleUnsupported(PFNGLRESOLVEDEPTHVALUESNVPROC, glresolvedepthvaluesnv); \
    HandleUnsupported(PFNGLVIEWPORTARRAYVNVPROC, glviewportarrayvnv); \
    HandleUnsupported(PFNGLVIEWPORTINDEXEDFNVPROC, glviewportindexedfnv); \
    HandleUnsupported(PFNGLVIEWPORTINDEXEDFVNVPROC, glviewportindexedfvnv); \
    HandleUnsupported(PFNGLSCISSORARRAYVNVPROC, glscissorarrayvnv); \
    HandleUnsupported(PFNGLSCISSORINDEXEDNVPROC, glscissorindexednv); \
    HandleUnsupported(PFNGLSCISSORINDEXEDVNVPROC, glscissorindexedvnv); \
    HandleUnsupported(PFNGLDEPTHRANGEARRAYFVNVPROC, gldepthrangearrayfvnv); \
    HandleUnsupported(PFNGLDEPTHRANGEINDEXEDFNVPROC, gldepthrangeindexedfnv); \
    HandleUnsupported(PFNGLENABLEINVPROC, glenableinv); \
    HandleUnsupported(PFNGLDISABLEINVPROC, gldisableinv); \
    HandleUnsupported(PFNGLISENABLEDINVPROC, glisenabledinv); \
    HandleUnsupported(PFNGLVIEWPORTSWIZZLENVPROC, glviewportswizzlenv); \
    HandleUnsupported(PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC, glframebuffertexturemultiviewovr); \
    HandleUnsupported(PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC, glframebuffertexturemultisamplemultiviewovr); \
    HandleUnsupported(PFNGLALPHAFUNCQCOMPROC, glalphafuncqcom); \
    HandleUnsupported(PFNGLGETDRIVERCONTROLSQCOMPROC, glgetdrivercontrolsqcom); \
    HandleUnsupported(PFNGLGETDRIVERCONTROLSTRINGQCOMPROC, glgetdrivercontrolstringqcom); \
    HandleUnsupported(PFNGLENABLEDRIVERCONTROLQCOMPROC, glenabledrivercontrolqcom); \
    HandleUnsupported(PFNGLDISABLEDRIVERCONTROLQCOMPROC, gldisabledrivercontrolqcom); \
    HandleUnsupported(PFNGLEXTGETTEXTURESQCOMPROC, glextgettexturesqcom); \
    HandleUnsupported(PFNGLEXTGETBUFFERSQCOMPROC, glextgetbuffersqcom); \
    HandleUnsupported(PFNGLEXTGETRENDERBUFFERSQCOMPROC, glextgetrenderbuffersqcom); \
    HandleUnsupported(PFNGLEXTGETFRAMEBUFFERSQCOMPROC, glextgetframebuffersqcom); \
    HandleUnsupported(PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC, glextgettexlevelparameterivqcom); \
    HandleUnsupported(PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC, glexttexobjectstateoverrideiqcom); \
    HandleUnsupported(PFNGLEXTGETTEXSUBIMAGEQCOMPROC, glextgettexsubimageqcom); \
    HandleUnsupported(PFNGLEXTGETBUFFERPOINTERVQCOMPROC, glextgetbufferpointervqcom); \
    HandleUnsupported(PFNGLEXTGETSHADERSQCOMPROC, glextgetshadersqcom); \
    HandleUnsupported(PFNGLEXTGETPROGRAMSQCOMPROC, glextgetprogramsqcom); \
    HandleUnsupported(PFNGLEXTISPROGRAMBINARYQCOMPROC, glextisprogrambinaryqcom); \
    HandleUnsupported(PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC, glextgetprogrambinarysourceqcom); \
    HandleUnsupported(PFNGLSTARTTILINGQCOMPROC, glstarttilingqcom); \
    HandleUnsupported(PFNGLENDTILINGQCOMPROC, glendtilingqcom); \




