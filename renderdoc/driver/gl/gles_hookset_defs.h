/******************************************************************************
 * The MIT License (MIT)
 * 
 * Copyright (c) 2015-2016 Baldur Karlsson
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 ******************************************************************************/


#pragma once

// This file is autogenerated with hookset.pl - any changes will be overwritten
// next time that script is run.
// $ pwd
// .../renderdoc/driver/gl
// $ ./egl_hookset.pl > egl_hookset_defs.h
////////////////////////////////////////////////////

// dllexport functions
#define DLLExportHooks() \
    HookInit(glClear); \
    HookInit(glClearColor); \
    HookInit(glClearStencil); \



// gl extensions
#define HookCheckGLExtensions() \
    HookExtension(PFNGLCLEARPROC, glClear); \
    HookExtension(PFNGLCLEARCOLORPROC, glClearColor); \
    HookExtension(PFNGLCLEARSTENCILPROC, glClearStencil); \



// dllexport functions
#define DefineDLLExportHooks() \
    HookWrapper1(void, glClear, GLbitfield, mask); \
    HookWrapper4(void, glClearColor, GLfloat, red, GLfloat, green, GLfloat, blue, GLfloat, alpha); \
    HookWrapper1(void, glClearStencil, GLint, s); \



// gl extensions
#define DefineGLExtensionHooks() \



// unsupported entry points - used for dummy functions
#define DefineUnsupportedDummies() \
    HookWrapper1(void, glactivetexture, GLenum, texture); \
    HookWrapper2(void, glattachshader, GLuint, program, GLuint, shader); \
    HookWrapper3(void, glbindattriblocation, GLuint, program, GLuint, index, const GLchar *, name); \
    HookWrapper2(void, glbindbuffer, GLenum, target, GLuint, buffer); \
    HookWrapper2(void, glbindframebuffer, GLenum, target, GLuint, framebuffer); \
    HookWrapper2(void, glbindrenderbuffer, GLenum, target, GLuint, renderbuffer); \
    HookWrapper2(void, glbindtexture, GLenum, target, GLuint, texture); \
    HookWrapper4(void, glblendcolor, GLfloat, red, GLfloat, green, GLfloat, blue, GLfloat, alpha); \
    HookWrapper1(void, glblendequation, GLenum, mode); \
    HookWrapper2(void, glblendequationseparate, GLenum, modeRGB, GLenum, modeAlpha); \
    HookWrapper2(void, glblendfunc, GLenum, sfactor, GLenum, dfactor); \
    HookWrapper4(void, glblendfuncseparate, GLenum, sfactorRGB, GLenum, dfactorRGB, GLenum, sfactorAlpha, GLenum, dfactorAlpha); \
    HookWrapper4(void, glbufferdata, GLenum, target, GLsizeiptr, size, const void *, data, GLenum, usage); \
    HookWrapper4(void, glbuffersubdata, GLenum, target, GLintptr, offset, GLsizeiptr, size, const void *, data); \
    HookWrapper1(GLenum, glcheckframebufferstatus, GLenum, target); \
    HookWrapper1(void, glcleardepthf, GLfloat, d); \
    HookWrapper4(void, glcolormask, GLboolean, red, GLboolean, green, GLboolean, blue, GLboolean, alpha); \
    HookWrapper1(void, glcompileshader, GLuint, shader); \
    HookWrapper8(void, glcompressedteximage2d, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLint, border, GLsizei, imageSize, const void *, data); \
    HookWrapper9(void, glcompressedtexsubimage2d, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLsizei, width, GLsizei, height, GLenum, format, GLsizei, imageSize, const void *, data); \
    HookWrapper8(void, glcopyteximage2d, GLenum, target, GLint, level, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLint, border); \
    HookWrapper8(void, glcopytexsubimage2d, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper0(GLuint, glcreateprogram); \
    HookWrapper1(GLuint, glcreateshader, GLenum, type); \
    HookWrapper1(void, glcullface, GLenum, mode); \
    HookWrapper2(void, gldeletebuffers, GLsizei, n, const GLuint *, buffers); \
    HookWrapper2(void, gldeleteframebuffers, GLsizei, n, const GLuint *, framebuffers); \
    HookWrapper1(void, gldeleteprogram, GLuint, program); \
    HookWrapper2(void, gldeleterenderbuffers, GLsizei, n, const GLuint *, renderbuffers); \
    HookWrapper1(void, gldeleteshader, GLuint, shader); \
    HookWrapper2(void, gldeletetextures, GLsizei, n, const GLuint *, textures); \
    HookWrapper1(void, gldepthfunc, GLenum, func); \
    HookWrapper1(void, gldepthmask, GLboolean, flag); \
    HookWrapper2(void, gldepthrangef, GLfloat, n, GLfloat, f); \
    HookWrapper2(void, gldetachshader, GLuint, program, GLuint, shader); \
    HookWrapper1(void, gldisable, GLenum, cap); \
    HookWrapper1(void, gldisablevertexattribarray, GLuint, index); \
    HookWrapper3(void, gldrawarrays, GLenum, mode, GLint, first, GLsizei, count); \
    HookWrapper4(void, gldrawelements, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices); \
    HookWrapper1(void, glenable, GLenum, cap); \
    HookWrapper1(void, glenablevertexattribarray, GLuint, index); \
    HookWrapper0(void, glfinish); \
    HookWrapper0(void, glflush); \
    HookWrapper4(void, glframebufferrenderbuffer, GLenum, target, GLenum, attachment, GLenum, renderbuffertarget, GLuint, renderbuffer); \
    HookWrapper5(void, glframebuffertexture2d, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level); \
    HookWrapper1(void, glfrontface, GLenum, mode); \
    HookWrapper2(void, glgenbuffers, GLsizei, n, GLuint *, buffers); \
    HookWrapper1(void, glgeneratemipmap, GLenum, target); \
    HookWrapper2(void, glgenframebuffers, GLsizei, n, GLuint *, framebuffers); \
    HookWrapper2(void, glgenrenderbuffers, GLsizei, n, GLuint *, renderbuffers); \
    HookWrapper2(void, glgentextures, GLsizei, n, GLuint *, textures); \
    HookWrapper7(void, glgetactiveattrib, GLuint, program, GLuint, index, GLsizei, bufSize, GLsizei *, length, GLint *, size, GLenum *, type, GLchar *, name); \
    HookWrapper7(void, glgetactiveuniform, GLuint, program, GLuint, index, GLsizei, bufSize, GLsizei *, length, GLint *, size, GLenum *, type, GLchar *, name); \
    HookWrapper4(void, glgetattachedshaders, GLuint, program, GLsizei, maxCount, GLsizei *, count, GLuint *, shaders); \
    HookWrapper2(GLint, glgetattriblocation, GLuint, program, const GLchar *, name); \
    HookWrapper2(void, glgetbooleanv, GLenum, pname, GLboolean *, data); \
    HookWrapper3(void, glgetbufferparameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper0(GLenum, glgeterror); \
    HookWrapper2(void, glgetfloatv, GLenum, pname, GLfloat *, data); \
    HookWrapper4(void, glgetframebufferattachmentparameteriv, GLenum, target, GLenum, attachment, GLenum, pname, GLint *, params); \
    HookWrapper2(void, glgetintegerv, GLenum, pname, GLint *, data); \
    HookWrapper3(void, glgetprogramiv, GLuint, program, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glgetprograminfolog, GLuint, program, GLsizei, bufSize, GLsizei *, length, GLchar *, infoLog); \
    HookWrapper3(void, glgetrenderbufferparameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgetshaderiv, GLuint, shader, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glgetshaderinfolog, GLuint, shader, GLsizei, bufSize, GLsizei *, length, GLchar *, infoLog); \
    HookWrapper4(void, glgetshaderprecisionformat, GLenum, shadertype, GLenum, precisiontype, GLint *, range, GLint *, precision); \
    HookWrapper4(void, glgetshadersource, GLuint, shader, GLsizei, bufSize, GLsizei *, length, GLchar *, source); \
    HookWrapper1(const GLubyte *, glgetstring, GLenum, name); \
    HookWrapper3(void, glgettexparameterfv, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glgettexparameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgetuniformfv, GLuint, program, GLint, location, GLfloat *, params); \
    HookWrapper3(void, glgetuniformiv, GLuint, program, GLint, location, GLint *, params); \
    HookWrapper2(GLint, glgetuniformlocation, GLuint, program, const GLchar *, name); \
    HookWrapper3(void, glgetvertexattribfv, GLuint, index, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glgetvertexattribiv, GLuint, index, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgetvertexattribpointerv, GLuint, index, GLenum, pname, void **, pointer); \
    HookWrapper2(void, glhint, GLenum, target, GLenum, mode); \
    HookWrapper1(GLboolean, glisbuffer, GLuint, buffer); \
    HookWrapper1(GLboolean, glisenabled, GLenum, cap); \
    HookWrapper1(GLboolean, glisframebuffer, GLuint, framebuffer); \
    HookWrapper1(GLboolean, glisprogram, GLuint, program); \
    HookWrapper1(GLboolean, glisrenderbuffer, GLuint, renderbuffer); \
    HookWrapper1(GLboolean, glisshader, GLuint, shader); \
    HookWrapper1(GLboolean, glistexture, GLuint, texture); \
    HookWrapper1(void, gllinewidth, GLfloat, width); \
    HookWrapper1(void, gllinkprogram, GLuint, program); \
    HookWrapper2(void, glpixelstorei, GLenum, pname, GLint, param); \
    HookWrapper2(void, glpolygonoffset, GLfloat, factor, GLfloat, units); \
    HookWrapper7(void, glreadpixels, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, void *, pixels); \
    HookWrapper0(void, glreleaseshadercompiler); \
    HookWrapper4(void, glrenderbufferstorage, GLenum, target, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper2(void, glsamplecoverage, GLfloat, value, GLboolean, invert); \
    HookWrapper4(void, glscissor, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper5(void, glshaderbinary, GLsizei, count, const GLuint *, shaders, GLenum, binaryformat, const void *, binary, GLsizei, length); \
    HookWrapper4(void, glshadersource, GLuint, shader, GLsizei, count, const GLchar *const*, string, const GLint *, length); \
    HookWrapper3(void, glstencilfunc, GLenum, func, GLint, ref, GLuint, mask); \
    HookWrapper4(void, glstencilfuncseparate, GLenum, face, GLenum, func, GLint, ref, GLuint, mask); \
    HookWrapper1(void, glstencilmask, GLuint, mask); \
    HookWrapper2(void, glstencilmaskseparate, GLenum, face, GLuint, mask); \
    HookWrapper3(void, glstencilop, GLenum, fail, GLenum, zfail, GLenum, zpass); \
    HookWrapper4(void, glstencilopseparate, GLenum, face, GLenum, sfail, GLenum, dpfail, GLenum, dppass); \
    HookWrapper9(void, glteximage2d, GLenum, target, GLint, level, GLint, internalformat, GLsizei, width, GLsizei, height, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper3(void, gltexparameterf, GLenum, target, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, gltexparameterfv, GLenum, target, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, gltexparameteri, GLenum, target, GLenum, pname, GLint, param); \
    HookWrapper3(void, gltexparameteriv, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper9(void, gltexsubimage2d, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper2(void, gluniform1f, GLint, location, GLfloat, v0); \
    HookWrapper3(void, gluniform1fv, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper2(void, gluniform1i, GLint, location, GLint, v0); \
    HookWrapper3(void, gluniform1iv, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper3(void, gluniform2f, GLint, location, GLfloat, v0, GLfloat, v1); \
    HookWrapper3(void, gluniform2fv, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper3(void, gluniform2i, GLint, location, GLint, v0, GLint, v1); \
    HookWrapper3(void, gluniform2iv, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, gluniform3f, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2); \
    HookWrapper3(void, gluniform3fv, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper4(void, gluniform3i, GLint, location, GLint, v0, GLint, v1, GLint, v2); \
    HookWrapper3(void, gluniform3iv, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper5(void, gluniform4f, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2, GLfloat, v3); \
    HookWrapper3(void, gluniform4fv, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper5(void, gluniform4i, GLint, location, GLint, v0, GLint, v1, GLint, v2, GLint, v3); \
    HookWrapper3(void, gluniform4iv, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, gluniformmatrix2fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix3fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix4fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper1(void, gluseprogram, GLuint, program); \
    HookWrapper1(void, glvalidateprogram, GLuint, program); \
    HookWrapper2(void, glvertexattrib1f, GLuint, index, GLfloat, x); \
    HookWrapper2(void, glvertexattrib1fv, GLuint, index, const GLfloat *, v); \
    HookWrapper3(void, glvertexattrib2f, GLuint, index, GLfloat, x, GLfloat, y); \
    HookWrapper2(void, glvertexattrib2fv, GLuint, index, const GLfloat *, v); \
    HookWrapper4(void, glvertexattrib3f, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper2(void, glvertexattrib3fv, GLuint, index, const GLfloat *, v); \
    HookWrapper5(void, glvertexattrib4f, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookWrapper2(void, glvertexattrib4fv, GLuint, index, const GLfloat *, v); \
    HookWrapper6(void, glvertexattribpointer, GLuint, index, GLint, size, GLenum, type, GLboolean, normalized, GLsizei, stride, const void *, pointer); \
    HookWrapper4(void, glviewport, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper1(void, glreadbuffer, GLenum, src); \
    HookWrapper6(void, gldrawrangeelements, GLenum, mode, GLuint, start, GLuint, end, GLsizei, count, GLenum, type, const void *, indices); \
    HookWrapper10(void, glteximage3d, GLenum, target, GLint, level, GLint, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper11(void, gltexsubimage3d, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper9(void, glcopytexsubimage3d, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper9(void, glcompressedteximage3d, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLsizei, imageSize, const void *, data); \
    HookWrapper11(void, glcompressedtexsubimage3d, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLsizei, imageSize, const void *, data); \
    HookWrapper2(void, glgenqueries, GLsizei, n, GLuint *, ids); \
    HookWrapper2(void, gldeletequeries, GLsizei, n, const GLuint *, ids); \
    HookWrapper1(GLboolean, glisquery, GLuint, id); \
    HookWrapper2(void, glbeginquery, GLenum, target, GLuint, id); \
    HookWrapper1(void, glendquery, GLenum, target); \
    HookWrapper3(void, glgetqueryiv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgetqueryobjectuiv, GLuint, id, GLenum, pname, GLuint *, params); \
    HookWrapper1(GLboolean, glunmapbuffer, GLenum, target); \
    HookWrapper3(void, glgetbufferpointerv, GLenum, target, GLenum, pname, void **, params); \
    HookWrapper2(void, gldrawbuffers, GLsizei, n, const GLenum *, bufs); \
    HookWrapper4(void, gluniformmatrix2x3fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix3x2fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix2x4fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix4x2fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix3x4fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, gluniformmatrix4x3fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper10(void, glblitframebuffer, GLint, srcX0, GLint, srcY0, GLint, srcX1, GLint, srcY1, GLint, dstX0, GLint, dstY0, GLint, dstX1, GLint, dstY1, GLbitfield, mask, GLenum, filter); \
    HookWrapper5(void, glrenderbufferstoragemultisample, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper5(void, glframebuffertexturelayer, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level, GLint, layer); \
    HookWrapper4(void *, glmapbufferrange, GLenum, target, GLintptr, offset, GLsizeiptr, length, GLbitfield, access); \
    HookWrapper3(void, glflushmappedbufferrange, GLenum, target, GLintptr, offset, GLsizeiptr, length); \
    HookWrapper1(void, glbindvertexarray, GLuint, array); \
    HookWrapper2(void, gldeletevertexarrays, GLsizei, n, const GLuint *, arrays); \
    HookWrapper2(void, glgenvertexarrays, GLsizei, n, GLuint *, arrays); \
    HookWrapper1(GLboolean, glisvertexarray, GLuint, array); \
    HookWrapper3(void, glgetintegeri_v, GLenum, target, GLuint, index, GLint *, data); \
    HookWrapper1(void, glbegintransformfeedback, GLenum, primitiveMode); \
    HookWrapper0(void, glendtransformfeedback); \
    HookWrapper5(void, glbindbufferrange, GLenum, target, GLuint, index, GLuint, buffer, GLintptr, offset, GLsizeiptr, size); \
    HookWrapper3(void, glbindbufferbase, GLenum, target, GLuint, index, GLuint, buffer); \
    HookWrapper4(void, gltransformfeedbackvaryings, GLuint, program, GLsizei, count, const GLchar *const*, varyings, GLenum, bufferMode); \
    HookWrapper7(void, glgettransformfeedbackvarying, GLuint, program, GLuint, index, GLsizei, bufSize, GLsizei *, length, GLsizei *, size, GLenum *, type, GLchar *, name); \
    HookWrapper5(void, glvertexattribipointer, GLuint, index, GLint, size, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper3(void, glgetvertexattribiiv, GLuint, index, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgetvertexattribiuiv, GLuint, index, GLenum, pname, GLuint *, params); \
    HookWrapper5(void, glvertexattribi4i, GLuint, index, GLint, x, GLint, y, GLint, z, GLint, w); \
    HookWrapper5(void, glvertexattribi4ui, GLuint, index, GLuint, x, GLuint, y, GLuint, z, GLuint, w); \
    HookWrapper2(void, glvertexattribi4iv, GLuint, index, const GLint *, v); \
    HookWrapper2(void, glvertexattribi4uiv, GLuint, index, const GLuint *, v); \
    HookWrapper3(void, glgetuniformuiv, GLuint, program, GLint, location, GLuint *, params); \
    HookWrapper2(GLint, glgetfragdatalocation, GLuint, program, const GLchar *, name); \
    HookWrapper2(void, gluniform1ui, GLint, location, GLuint, v0); \
    HookWrapper3(void, gluniform2ui, GLint, location, GLuint, v0, GLuint, v1); \
    HookWrapper4(void, gluniform3ui, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2); \
    HookWrapper5(void, gluniform4ui, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2, GLuint, v3); \
    HookWrapper3(void, gluniform1uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper3(void, gluniform2uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper3(void, gluniform3uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper3(void, gluniform4uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper3(void, glclearbufferiv, GLenum, buffer, GLint, drawbuffer, const GLint *, value); \
    HookWrapper3(void, glclearbufferuiv, GLenum, buffer, GLint, drawbuffer, const GLuint *, value); \
    HookWrapper3(void, glclearbufferfv, GLenum, buffer, GLint, drawbuffer, const GLfloat *, value); \
    HookWrapper4(void, glclearbufferfi, GLenum, buffer, GLint, drawbuffer, GLfloat, depth, GLint, stencil); \
    HookWrapper2(const GLubyte *, glgetstringi, GLenum, name, GLuint, index); \
    HookWrapper5(void, glcopybuffersubdata, GLenum, readTarget, GLenum, writeTarget, GLintptr, readOffset, GLintptr, writeOffset, GLsizeiptr, size); \
    HookWrapper4(void, glgetuniformindices, GLuint, program, GLsizei, uniformCount, const GLchar *const*, uniformNames, GLuint *, uniformIndices); \
    HookWrapper5(void, glgetactiveuniformsiv, GLuint, program, GLsizei, uniformCount, const GLuint *, uniformIndices, GLenum, pname, GLint *, params); \
    HookWrapper2(GLuint, glgetuniformblockindex, GLuint, program, const GLchar *, uniformBlockName); \
    HookWrapper4(void, glgetactiveuniformblockiv, GLuint, program, GLuint, uniformBlockIndex, GLenum, pname, GLint *, params); \
    HookWrapper5(void, glgetactiveuniformblockname, GLuint, program, GLuint, uniformBlockIndex, GLsizei, bufSize, GLsizei *, length, GLchar *, uniformBlockName); \
    HookWrapper3(void, gluniformblockbinding, GLuint, program, GLuint, uniformBlockIndex, GLuint, uniformBlockBinding); \
    HookWrapper4(void, gldrawarraysinstanced, GLenum, mode, GLint, first, GLsizei, count, GLsizei, instancecount); \
    HookWrapper5(void, gldrawelementsinstanced, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount); \
    HookWrapper2(GLsync, glfencesync, GLenum, condition, GLbitfield, flags); \
    HookWrapper1(GLboolean, glissync, GLsync, sync); \
    HookWrapper1(void, gldeletesync, GLsync, sync); \
    HookWrapper3(GLenum, glclientwaitsync, GLsync, sync, GLbitfield, flags, GLuint64, timeout); \
    HookWrapper3(void, glwaitsync, GLsync, sync, GLbitfield, flags, GLuint64, timeout); \
    HookWrapper2(void, glgetinteger64v, GLenum, pname, GLint64 *, data); \
    HookWrapper5(void, glgetsynciv, GLsync, sync, GLenum, pname, GLsizei, bufSize, GLsizei *, length, GLint *, values); \
    HookWrapper3(void, glgetinteger64i_v, GLenum, target, GLuint, index, GLint64 *, data); \
    HookWrapper3(void, glgetbufferparameteri64v, GLenum, target, GLenum, pname, GLint64 *, params); \
    HookWrapper2(void, glgensamplers, GLsizei, count, GLuint *, samplers); \
    HookWrapper2(void, gldeletesamplers, GLsizei, count, const GLuint *, samplers); \
    HookWrapper1(GLboolean, glissampler, GLuint, sampler); \
    HookWrapper2(void, glbindsampler, GLuint, unit, GLuint, sampler); \
    HookWrapper3(void, glsamplerparameteri, GLuint, sampler, GLenum, pname, GLint, param); \
    HookWrapper3(void, glsamplerparameteriv, GLuint, sampler, GLenum, pname, const GLint *, param); \
    HookWrapper3(void, glsamplerparameterf, GLuint, sampler, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, glsamplerparameterfv, GLuint, sampler, GLenum, pname, const GLfloat *, param); \
    HookWrapper3(void, glgetsamplerparameteriv, GLuint, sampler, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgetsamplerparameterfv, GLuint, sampler, GLenum, pname, GLfloat *, params); \
    HookWrapper2(void, glvertexattribdivisor, GLuint, index, GLuint, divisor); \
    HookWrapper2(void, glbindtransformfeedback, GLenum, target, GLuint, id); \
    HookWrapper2(void, gldeletetransformfeedbacks, GLsizei, n, const GLuint *, ids); \
    HookWrapper2(void, glgentransformfeedbacks, GLsizei, n, GLuint *, ids); \
    HookWrapper1(GLboolean, glistransformfeedback, GLuint, id); \
    HookWrapper0(void, glpausetransformfeedback); \
    HookWrapper0(void, glresumetransformfeedback); \
    HookWrapper5(void, glgetprogrambinary, GLuint, program, GLsizei, bufSize, GLsizei *, length, GLenum *, binaryFormat, void *, binary); \
    HookWrapper4(void, glprogrambinary, GLuint, program, GLenum, binaryFormat, const void *, binary, GLsizei, length); \
    HookWrapper3(void, glprogramparameteri, GLuint, program, GLenum, pname, GLint, value); \
    HookWrapper3(void, glinvalidateframebuffer, GLenum, target, GLsizei, numAttachments, const GLenum *, attachments); \
    HookWrapper7(void, glinvalidatesubframebuffer, GLenum, target, GLsizei, numAttachments, const GLenum *, attachments, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper5(void, gltexstorage2d, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper6(void, gltexstorage3d, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth); \
    HookWrapper5(void, glgetinternalformativ, GLenum, target, GLenum, internalformat, GLenum, pname, GLsizei, bufSize, GLint *, params); \
    HookWrapper3(void, gldispatchcompute, GLuint, num_groups_x, GLuint, num_groups_y, GLuint, num_groups_z); \
    HookWrapper1(void, gldispatchcomputeindirect, GLintptr, indirect); \
    HookWrapper2(void, gldrawarraysindirect, GLenum, mode, const void *, indirect); \
    HookWrapper3(void, gldrawelementsindirect, GLenum, mode, GLenum, type, const void *, indirect); \
    HookWrapper3(void, glframebufferparameteri, GLenum, target, GLenum, pname, GLint, param); \
    HookWrapper3(void, glgetframebufferparameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glgetprograminterfaceiv, GLuint, program, GLenum, programInterface, GLenum, pname, GLint *, params); \
    HookWrapper3(GLuint, glgetprogramresourceindex, GLuint, program, GLenum, programInterface, const GLchar *, name); \
    HookWrapper6(void, glgetprogramresourcename, GLuint, program, GLenum, programInterface, GLuint, index, GLsizei, bufSize, GLsizei *, length, GLchar *, name); \
    HookWrapper8(void, glgetprogramresourceiv, GLuint, program, GLenum, programInterface, GLuint, index, GLsizei, propCount, const GLenum *, props, GLsizei, bufSize, GLsizei *, length, GLint *, params); \
    HookWrapper3(GLint, glgetprogramresourcelocation, GLuint, program, GLenum, programInterface, const GLchar *, name); \
    HookWrapper3(void, gluseprogramstages, GLuint, pipeline, GLbitfield, stages, GLuint, program); \
    HookWrapper2(void, glactiveshaderprogram, GLuint, pipeline, GLuint, program); \
    HookWrapper3(GLuint, glcreateshaderprogramv, GLenum, type, GLsizei, count, const GLchar *const*, strings); \
    HookWrapper1(void, glbindprogrampipeline, GLuint, pipeline); \
    HookWrapper2(void, gldeleteprogrampipelines, GLsizei, n, const GLuint *, pipelines); \
    HookWrapper2(void, glgenprogrampipelines, GLsizei, n, GLuint *, pipelines); \
    HookWrapper1(GLboolean, glisprogrampipeline, GLuint, pipeline); \
    HookWrapper3(void, glgetprogrampipelineiv, GLuint, pipeline, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glprogramuniform1i, GLuint, program, GLint, location, GLint, v0); \
    HookWrapper4(void, glprogramuniform2i, GLuint, program, GLint, location, GLint, v0, GLint, v1); \
    HookWrapper5(void, glprogramuniform3i, GLuint, program, GLint, location, GLint, v0, GLint, v1, GLint, v2); \
    HookWrapper6(void, glprogramuniform4i, GLuint, program, GLint, location, GLint, v0, GLint, v1, GLint, v2, GLint, v3); \
    HookWrapper3(void, glprogramuniform1ui, GLuint, program, GLint, location, GLuint, v0); \
    HookWrapper4(void, glprogramuniform2ui, GLuint, program, GLint, location, GLuint, v0, GLuint, v1); \
    HookWrapper5(void, glprogramuniform3ui, GLuint, program, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2); \
    HookWrapper6(void, glprogramuniform4ui, GLuint, program, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2, GLuint, v3); \
    HookWrapper3(void, glprogramuniform1f, GLuint, program, GLint, location, GLfloat, v0); \
    HookWrapper4(void, glprogramuniform2f, GLuint, program, GLint, location, GLfloat, v0, GLfloat, v1); \
    HookWrapper5(void, glprogramuniform3f, GLuint, program, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2); \
    HookWrapper6(void, glprogramuniform4f, GLuint, program, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2, GLfloat, v3); \
    HookWrapper4(void, glprogramuniform1iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, glprogramuniform2iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, glprogramuniform3iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, glprogramuniform4iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, glprogramuniform1uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper4(void, glprogramuniform2uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper4(void, glprogramuniform3uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper4(void, glprogramuniform4uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper4(void, glprogramuniform1fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper4(void, glprogramuniform2fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper4(void, glprogramuniform3fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper4(void, glprogramuniform4fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix2fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix3fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix4fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix2x3fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix3x2fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix2x4fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix4x2fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix3x4fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glprogramuniformmatrix4x3fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper1(void, glvalidateprogrampipeline, GLuint, pipeline); \
    HookWrapper4(void, glgetprogrampipelineinfolog, GLuint, pipeline, GLsizei, bufSize, GLsizei *, length, GLchar *, infoLog); \
    HookWrapper7(void, glbindimagetexture, GLuint, unit, GLuint, texture, GLint, level, GLboolean, layered, GLint, layer, GLenum, access, GLenum, format); \
    HookWrapper3(void, glgetbooleani_v, GLenum, target, GLuint, index, GLboolean *, data); \
    HookWrapper1(void, glmemorybarrier, GLbitfield, barriers); \
    HookWrapper1(void, glmemorybarrierbyregion, GLbitfield, barriers); \
    HookWrapper6(void, gltexstorage2dmultisample, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height, GLboolean, fixedsamplelocations); \
    HookWrapper3(void, glgetmultisamplefv, GLenum, pname, GLuint, index, GLfloat *, val); \
    HookWrapper2(void, glsamplemaski, GLuint, maskNumber, GLbitfield, mask); \
    HookWrapper4(void, glgettexlevelparameteriv, GLenum, target, GLint, level, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glgettexlevelparameterfv, GLenum, target, GLint, level, GLenum, pname, GLfloat *, params); \
    HookWrapper4(void, glbindvertexbuffer, GLuint, bindingindex, GLuint, buffer, GLintptr, offset, GLsizei, stride); \
    HookWrapper5(void, glvertexattribformat, GLuint, attribindex, GLint, size, GLenum, type, GLboolean, normalized, GLuint, relativeoffset); \
    HookWrapper4(void, glvertexattribiformat, GLuint, attribindex, GLint, size, GLenum, type, GLuint, relativeoffset); \
    HookWrapper2(void, glvertexattribbinding, GLuint, attribindex, GLuint, bindingindex); \
    HookWrapper2(void, glvertexbindingdivisor, GLuint, bindingindex, GLuint, divisor); \
    HookWrapper0(void, glblendbarrier); \
    HookWrapper15(void, glcopyimagesubdata, GLuint, srcName, GLenum, srcTarget, GLint, srcLevel, GLint, srcX, GLint, srcY, GLint, srcZ, GLuint, dstName, GLenum, dstTarget, GLint, dstLevel, GLint, dstX, GLint, dstY, GLint, dstZ, GLsizei, srcWidth, GLsizei, srcHeight, GLsizei, srcDepth); \
    HookWrapper6(void, gldebugmessagecontrol, GLenum, source, GLenum, type, GLenum, severity, GLsizei, count, const GLuint *, ids, GLboolean, enabled); \
    HookWrapper6(void, gldebugmessageinsert, GLenum, source, GLenum, type, GLuint, id, GLenum, severity, GLsizei, length, const GLchar *, buf); \
    HookWrapper2(void, gldebugmessagecallback, GLDEBUGPROC, callback, const void *, userParam); \
    HookWrapper8(GLuint, glgetdebugmessagelog, GLuint, count, GLsizei, bufSize, GLenum *, sources, GLenum *, types, GLuint *, ids, GLenum *, severities, GLsizei *, lengths, GLchar *, messageLog); \
    HookWrapper4(void, glpushdebuggroup, GLenum, source, GLuint, id, GLsizei, length, const GLchar *, message); \
    HookWrapper0(void, glpopdebuggroup); \
    HookWrapper4(void, globjectlabel, GLenum, identifier, GLuint, name, GLsizei, length, const GLchar *, label); \
    HookWrapper5(void, glgetobjectlabel, GLenum, identifier, GLuint, name, GLsizei, bufSize, GLsizei *, length, GLchar *, label); \
    HookWrapper3(void, globjectptrlabel, const void *, ptr, GLsizei, length, const GLchar *, label); \
    HookWrapper4(void, glgetobjectptrlabel, const void *, ptr, GLsizei, bufSize, GLsizei *, length, GLchar *, label); \
    HookWrapper2(void, glgetpointerv, GLenum, pname, void **, params); \
    HookWrapper2(void, glenablei, GLenum, target, GLuint, index); \
    HookWrapper2(void, gldisablei, GLenum, target, GLuint, index); \
    HookWrapper2(void, glblendequationi, GLuint, buf, GLenum, mode); \
    HookWrapper3(void, glblendequationseparatei, GLuint, buf, GLenum, modeRGB, GLenum, modeAlpha); \
    HookWrapper3(void, glblendfunci, GLuint, buf, GLenum, src, GLenum, dst); \
    HookWrapper5(void, glblendfuncseparatei, GLuint, buf, GLenum, srcRGB, GLenum, dstRGB, GLenum, srcAlpha, GLenum, dstAlpha); \
    HookWrapper5(void, glcolormaski, GLuint, index, GLboolean, r, GLboolean, g, GLboolean, b, GLboolean, a); \
    HookWrapper2(GLboolean, glisenabledi, GLenum, target, GLuint, index); \
    HookWrapper5(void, gldrawelementsbasevertex, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLint, basevertex); \
    HookWrapper7(void, gldrawrangeelementsbasevertex, GLenum, mode, GLuint, start, GLuint, end, GLsizei, count, GLenum, type, const void *, indices, GLint, basevertex); \
    HookWrapper6(void, gldrawelementsinstancedbasevertex, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount, GLint, basevertex); \
    HookWrapper4(void, glframebuffertexture, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level); \
    HookWrapper8(void, glprimitiveboundingbox, GLfloat, minX, GLfloat, minY, GLfloat, minZ, GLfloat, minW, GLfloat, maxX, GLfloat, maxY, GLfloat, maxZ, GLfloat, maxW); \
    HookWrapper0(GLenum, glgetgraphicsresetstatus); \
    HookWrapper8(void, glreadnpixels, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, GLsizei, bufSize, void *, data); \
    HookWrapper4(void, glgetnuniformfv, GLuint, program, GLint, location, GLsizei, bufSize, GLfloat *, params); \
    HookWrapper4(void, glgetnuniformiv, GLuint, program, GLint, location, GLsizei, bufSize, GLint *, params); \
    HookWrapper4(void, glgetnuniformuiv, GLuint, program, GLint, location, GLsizei, bufSize, GLuint *, params); \
    HookWrapper1(void, glminsampleshading, GLfloat, value); \
    HookWrapper2(void, glpatchparameteri, GLenum, pname, GLint, value); \
    HookWrapper3(void, gltexparameteriiv, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper3(void, gltexparameteriuiv, GLenum, target, GLenum, pname, const GLuint *, params); \
    HookWrapper3(void, glgettexparameteriiv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgettexparameteriuiv, GLenum, target, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, glsamplerparameteriiv, GLuint, sampler, GLenum, pname, const GLint *, param); \
    HookWrapper3(void, glsamplerparameteriuiv, GLuint, sampler, GLenum, pname, const GLuint *, param); \
    HookWrapper3(void, glgetsamplerparameteriiv, GLuint, sampler, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glgetsamplerparameteriuiv, GLuint, sampler, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, gltexbuffer, GLenum, target, GLenum, internalformat, GLuint, buffer); \
    HookWrapper5(void, gltexbufferrange, GLenum, target, GLenum, internalformat, GLuint, buffer, GLintptr, offset, GLsizeiptr, size); \
    HookWrapper7(void, gltexstorage3dmultisample, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, fixedsamplelocations); \



#define CheckUnsupported() \
    HandleUnsupported(PFNGLACTIVETEXTUREPROC, glactivetexture); \
    HandleUnsupported(PFNGLATTACHSHADERPROC, glattachshader); \
    HandleUnsupported(PFNGLBINDATTRIBLOCATIONPROC, glbindattriblocation); \
    HandleUnsupported(PFNGLBINDBUFFERPROC, glbindbuffer); \
    HandleUnsupported(PFNGLBINDFRAMEBUFFERPROC, glbindframebuffer); \
    HandleUnsupported(PFNGLBINDRENDERBUFFERPROC, glbindrenderbuffer); \
    HandleUnsupported(PFNGLBINDTEXTUREPROC, glbindtexture); \
    HandleUnsupported(PFNGLBLENDCOLORPROC, glblendcolor); \
    HandleUnsupported(PFNGLBLENDEQUATIONPROC, glblendequation); \
    HandleUnsupported(PFNGLBLENDEQUATIONSEPARATEPROC, glblendequationseparate); \
    HandleUnsupported(PFNGLBLENDFUNCPROC, glblendfunc); \
    HandleUnsupported(PFNGLBLENDFUNCSEPARATEPROC, glblendfuncseparate); \
    HandleUnsupported(PFNGLBUFFERDATAPROC, glbufferdata); \
    HandleUnsupported(PFNGLBUFFERSUBDATAPROC, glbuffersubdata); \
    HandleUnsupported(PFNGLCHECKFRAMEBUFFERSTATUSPROC, glcheckframebufferstatus); \
    HandleUnsupported(PFNGLCLEARDEPTHFPROC, glcleardepthf); \
    HandleUnsupported(PFNGLCOLORMASKPROC, glcolormask); \
    HandleUnsupported(PFNGLCOMPILESHADERPROC, glcompileshader); \
    HandleUnsupported(PFNGLCOMPRESSEDTEXIMAGE2DPROC, glcompressedteximage2d); \
    HandleUnsupported(PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC, glcompressedtexsubimage2d); \
    HandleUnsupported(PFNGLCOPYTEXIMAGE2DPROC, glcopyteximage2d); \
    HandleUnsupported(PFNGLCOPYTEXSUBIMAGE2DPROC, glcopytexsubimage2d); \
    HandleUnsupported(PFNGLCREATEPROGRAMPROC, glcreateprogram); \
    HandleUnsupported(PFNGLCREATESHADERPROC, glcreateshader); \
    HandleUnsupported(PFNGLCULLFACEPROC, glcullface); \
    HandleUnsupported(PFNGLDELETEBUFFERSPROC, gldeletebuffers); \
    HandleUnsupported(PFNGLDELETEFRAMEBUFFERSPROC, gldeleteframebuffers); \
    HandleUnsupported(PFNGLDELETEPROGRAMPROC, gldeleteprogram); \
    HandleUnsupported(PFNGLDELETERENDERBUFFERSPROC, gldeleterenderbuffers); \
    HandleUnsupported(PFNGLDELETESHADERPROC, gldeleteshader); \
    HandleUnsupported(PFNGLDELETETEXTURESPROC, gldeletetextures); \
    HandleUnsupported(PFNGLDEPTHFUNCPROC, gldepthfunc); \
    HandleUnsupported(PFNGLDEPTHMASKPROC, gldepthmask); \
    HandleUnsupported(PFNGLDEPTHRANGEFPROC, gldepthrangef); \
    HandleUnsupported(PFNGLDETACHSHADERPROC, gldetachshader); \
    HandleUnsupported(PFNGLDISABLEPROC, gldisable); \
    HandleUnsupported(PFNGLDISABLEVERTEXATTRIBARRAYPROC, gldisablevertexattribarray); \
    HandleUnsupported(PFNGLDRAWARRAYSPROC, gldrawarrays); \
    HandleUnsupported(PFNGLDRAWELEMENTSPROC, gldrawelements); \
    HandleUnsupported(PFNGLENABLEPROC, glenable); \
    HandleUnsupported(PFNGLENABLEVERTEXATTRIBARRAYPROC, glenablevertexattribarray); \
    HandleUnsupported(PFNGLFINISHPROC, glfinish); \
    HandleUnsupported(PFNGLFLUSHPROC, glflush); \
    HandleUnsupported(PFNGLFRAMEBUFFERRENDERBUFFERPROC, glframebufferrenderbuffer); \
    HandleUnsupported(PFNGLFRAMEBUFFERTEXTURE2DPROC, glframebuffertexture2d); \
    HandleUnsupported(PFNGLFRONTFACEPROC, glfrontface); \
    HandleUnsupported(PFNGLGENBUFFERSPROC, glgenbuffers); \
    HandleUnsupported(PFNGLGENERATEMIPMAPPROC, glgeneratemipmap); \
    HandleUnsupported(PFNGLGENFRAMEBUFFERSPROC, glgenframebuffers); \
    HandleUnsupported(PFNGLGENRENDERBUFFERSPROC, glgenrenderbuffers); \
    HandleUnsupported(PFNGLGENTEXTURESPROC, glgentextures); \
    HandleUnsupported(PFNGLGETACTIVEATTRIBPROC, glgetactiveattrib); \
    HandleUnsupported(PFNGLGETACTIVEUNIFORMPROC, glgetactiveuniform); \
    HandleUnsupported(PFNGLGETATTACHEDSHADERSPROC, glgetattachedshaders); \
    HandleUnsupported(PFNGLGETATTRIBLOCATIONPROC, glgetattriblocation); \
    HandleUnsupported(PFNGLGETBOOLEANVPROC, glgetbooleanv); \
    HandleUnsupported(PFNGLGETBUFFERPARAMETERIVPROC, glgetbufferparameteriv); \
    HandleUnsupported(PFNGLGETERRORPROC, glgeterror); \
    HandleUnsupported(PFNGLGETFLOATVPROC, glgetfloatv); \
    HandleUnsupported(PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC, glgetframebufferattachmentparameteriv); \
    HandleUnsupported(PFNGLGETINTEGERVPROC, glgetintegerv); \
    HandleUnsupported(PFNGLGETPROGRAMIVPROC, glgetprogramiv); \
    HandleUnsupported(PFNGLGETPROGRAMINFOLOGPROC, glgetprograminfolog); \
    HandleUnsupported(PFNGLGETRENDERBUFFERPARAMETERIVPROC, glgetrenderbufferparameteriv); \
    HandleUnsupported(PFNGLGETSHADERIVPROC, glgetshaderiv); \
    HandleUnsupported(PFNGLGETSHADERINFOLOGPROC, glgetshaderinfolog); \
    HandleUnsupported(PFNGLGETSHADERPRECISIONFORMATPROC, glgetshaderprecisionformat); \
    HandleUnsupported(PFNGLGETSHADERSOURCEPROC, glgetshadersource); \
    HandleUnsupported(PFNGLGETSTRINGPROC, glgetstring); \
    HandleUnsupported(PFNGLGETTEXPARAMETERFVPROC, glgettexparameterfv); \
    HandleUnsupported(PFNGLGETTEXPARAMETERIVPROC, glgettexparameteriv); \
    HandleUnsupported(PFNGLGETUNIFORMFVPROC, glgetuniformfv); \
    HandleUnsupported(PFNGLGETUNIFORMIVPROC, glgetuniformiv); \
    HandleUnsupported(PFNGLGETUNIFORMLOCATIONPROC, glgetuniformlocation); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBFVPROC, glgetvertexattribfv); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBIVPROC, glgetvertexattribiv); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBPOINTERVPROC, glgetvertexattribpointerv); \
    HandleUnsupported(PFNGLHINTPROC, glhint); \
    HandleUnsupported(PFNGLISBUFFERPROC, glisbuffer); \
    HandleUnsupported(PFNGLISENABLEDPROC, glisenabled); \
    HandleUnsupported(PFNGLISFRAMEBUFFERPROC, glisframebuffer); \
    HandleUnsupported(PFNGLISPROGRAMPROC, glisprogram); \
    HandleUnsupported(PFNGLISRENDERBUFFERPROC, glisrenderbuffer); \
    HandleUnsupported(PFNGLISSHADERPROC, glisshader); \
    HandleUnsupported(PFNGLISTEXTUREPROC, glistexture); \
    HandleUnsupported(PFNGLLINEWIDTHPROC, gllinewidth); \
    HandleUnsupported(PFNGLLINKPROGRAMPROC, gllinkprogram); \
    HandleUnsupported(PFNGLPIXELSTOREIPROC, glpixelstorei); \
    HandleUnsupported(PFNGLPOLYGONOFFSETPROC, glpolygonoffset); \
    HandleUnsupported(PFNGLREADPIXELSPROC, glreadpixels); \
    HandleUnsupported(PFNGLRELEASESHADERCOMPILERPROC, glreleaseshadercompiler); \
    HandleUnsupported(PFNGLRENDERBUFFERSTORAGEPROC, glrenderbufferstorage); \
    HandleUnsupported(PFNGLSAMPLECOVERAGEPROC, glsamplecoverage); \
    HandleUnsupported(PFNGLSCISSORPROC, glscissor); \
    HandleUnsupported(PFNGLSHADERBINARYPROC, glshaderbinary); \
    HandleUnsupported(PFNGLSHADERSOURCEPROC, glshadersource); \
    HandleUnsupported(PFNGLSTENCILFUNCPROC, glstencilfunc); \
    HandleUnsupported(PFNGLSTENCILFUNCSEPARATEPROC, glstencilfuncseparate); \
    HandleUnsupported(PFNGLSTENCILMASKPROC, glstencilmask); \
    HandleUnsupported(PFNGLSTENCILMASKSEPARATEPROC, glstencilmaskseparate); \
    HandleUnsupported(PFNGLSTENCILOPPROC, glstencilop); \
    HandleUnsupported(PFNGLSTENCILOPSEPARATEPROC, glstencilopseparate); \
    HandleUnsupported(PFNGLTEXIMAGE2DPROC, glteximage2d); \
    HandleUnsupported(PFNGLTEXPARAMETERFPROC, gltexparameterf); \
    HandleUnsupported(PFNGLTEXPARAMETERFVPROC, gltexparameterfv); \
    HandleUnsupported(PFNGLTEXPARAMETERIPROC, gltexparameteri); \
    HandleUnsupported(PFNGLTEXPARAMETERIVPROC, gltexparameteriv); \
    HandleUnsupported(PFNGLTEXSUBIMAGE2DPROC, gltexsubimage2d); \
    HandleUnsupported(PFNGLUNIFORM1FPROC, gluniform1f); \
    HandleUnsupported(PFNGLUNIFORM1FVPROC, gluniform1fv); \
    HandleUnsupported(PFNGLUNIFORM1IPROC, gluniform1i); \
    HandleUnsupported(PFNGLUNIFORM1IVPROC, gluniform1iv); \
    HandleUnsupported(PFNGLUNIFORM2FPROC, gluniform2f); \
    HandleUnsupported(PFNGLUNIFORM2FVPROC, gluniform2fv); \
    HandleUnsupported(PFNGLUNIFORM2IPROC, gluniform2i); \
    HandleUnsupported(PFNGLUNIFORM2IVPROC, gluniform2iv); \
    HandleUnsupported(PFNGLUNIFORM3FPROC, gluniform3f); \
    HandleUnsupported(PFNGLUNIFORM3FVPROC, gluniform3fv); \
    HandleUnsupported(PFNGLUNIFORM3IPROC, gluniform3i); \
    HandleUnsupported(PFNGLUNIFORM3IVPROC, gluniform3iv); \
    HandleUnsupported(PFNGLUNIFORM4FPROC, gluniform4f); \
    HandleUnsupported(PFNGLUNIFORM4FVPROC, gluniform4fv); \
    HandleUnsupported(PFNGLUNIFORM4IPROC, gluniform4i); \
    HandleUnsupported(PFNGLUNIFORM4IVPROC, gluniform4iv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX2FVPROC, gluniformmatrix2fv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX3FVPROC, gluniformmatrix3fv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX4FVPROC, gluniformmatrix4fv); \
    HandleUnsupported(PFNGLUSEPROGRAMPROC, gluseprogram); \
    HandleUnsupported(PFNGLVALIDATEPROGRAMPROC, glvalidateprogram); \
    HandleUnsupported(PFNGLVERTEXATTRIB1FPROC, glvertexattrib1f); \
    HandleUnsupported(PFNGLVERTEXATTRIB1FVPROC, glvertexattrib1fv); \
    HandleUnsupported(PFNGLVERTEXATTRIB2FPROC, glvertexattrib2f); \
    HandleUnsupported(PFNGLVERTEXATTRIB2FVPROC, glvertexattrib2fv); \
    HandleUnsupported(PFNGLVERTEXATTRIB3FPROC, glvertexattrib3f); \
    HandleUnsupported(PFNGLVERTEXATTRIB3FVPROC, glvertexattrib3fv); \
    HandleUnsupported(PFNGLVERTEXATTRIB4FPROC, glvertexattrib4f); \
    HandleUnsupported(PFNGLVERTEXATTRIB4FVPROC, glvertexattrib4fv); \
    HandleUnsupported(PFNGLVERTEXATTRIBPOINTERPROC, glvertexattribpointer); \
    HandleUnsupported(PFNGLVIEWPORTPROC, glviewport); \
    HandleUnsupported(PFNGLREADBUFFERPROC, glreadbuffer); \
    HandleUnsupported(PFNGLDRAWRANGEELEMENTSPROC, gldrawrangeelements); \
    HandleUnsupported(PFNGLTEXIMAGE3DPROC, glteximage3d); \
    HandleUnsupported(PFNGLTEXSUBIMAGE3DPROC, gltexsubimage3d); \
    HandleUnsupported(PFNGLCOPYTEXSUBIMAGE3DPROC, glcopytexsubimage3d); \
    HandleUnsupported(PFNGLCOMPRESSEDTEXIMAGE3DPROC, glcompressedteximage3d); \
    HandleUnsupported(PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC, glcompressedtexsubimage3d); \
    HandleUnsupported(PFNGLGENQUERIESPROC, glgenqueries); \
    HandleUnsupported(PFNGLDELETEQUERIESPROC, gldeletequeries); \
    HandleUnsupported(PFNGLISQUERYPROC, glisquery); \
    HandleUnsupported(PFNGLBEGINQUERYPROC, glbeginquery); \
    HandleUnsupported(PFNGLENDQUERYPROC, glendquery); \
    HandleUnsupported(PFNGLGETQUERYIVPROC, glgetqueryiv); \
    HandleUnsupported(PFNGLGETQUERYOBJECTUIVPROC, glgetqueryobjectuiv); \
    HandleUnsupported(PFNGLUNMAPBUFFERPROC, glunmapbuffer); \
    HandleUnsupported(PFNGLGETBUFFERPOINTERVPROC, glgetbufferpointerv); \
    HandleUnsupported(PFNGLDRAWBUFFERSPROC, gldrawbuffers); \
    HandleUnsupported(PFNGLUNIFORMMATRIX2X3FVPROC, gluniformmatrix2x3fv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX3X2FVPROC, gluniformmatrix3x2fv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX2X4FVPROC, gluniformmatrix2x4fv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX4X2FVPROC, gluniformmatrix4x2fv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX3X4FVPROC, gluniformmatrix3x4fv); \
    HandleUnsupported(PFNGLUNIFORMMATRIX4X3FVPROC, gluniformmatrix4x3fv); \
    HandleUnsupported(PFNGLBLITFRAMEBUFFERPROC, glblitframebuffer); \
    HandleUnsupported(PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC, glrenderbufferstoragemultisample); \
    HandleUnsupported(PFNGLFRAMEBUFFERTEXTURELAYERPROC, glframebuffertexturelayer); \
    HandleUnsupported(PFNGLMAPBUFFERRANGEPROC, glmapbufferrange); \
    HandleUnsupported(PFNGLFLUSHMAPPEDBUFFERRANGEPROC, glflushmappedbufferrange); \
    HandleUnsupported(PFNGLBINDVERTEXARRAYPROC, glbindvertexarray); \
    HandleUnsupported(PFNGLDELETEVERTEXARRAYSPROC, gldeletevertexarrays); \
    HandleUnsupported(PFNGLGENVERTEXARRAYSPROC, glgenvertexarrays); \
    HandleUnsupported(PFNGLISVERTEXARRAYPROC, glisvertexarray); \
    HandleUnsupported(PFNGLGETINTEGERI_VPROC, glgetintegeri_v); \
    HandleUnsupported(PFNGLBEGINTRANSFORMFEEDBACKPROC, glbegintransformfeedback); \
    HandleUnsupported(PFNGLENDTRANSFORMFEEDBACKPROC, glendtransformfeedback); \
    HandleUnsupported(PFNGLBINDBUFFERRANGEPROC, glbindbufferrange); \
    HandleUnsupported(PFNGLBINDBUFFERBASEPROC, glbindbufferbase); \
    HandleUnsupported(PFNGLTRANSFORMFEEDBACKVARYINGSPROC, gltransformfeedbackvaryings); \
    HandleUnsupported(PFNGLGETTRANSFORMFEEDBACKVARYINGPROC, glgettransformfeedbackvarying); \
    HandleUnsupported(PFNGLVERTEXATTRIBIPOINTERPROC, glvertexattribipointer); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBIIVPROC, glgetvertexattribiiv); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBIUIVPROC, glgetvertexattribiuiv); \
    HandleUnsupported(PFNGLVERTEXATTRIBI4IPROC, glvertexattribi4i); \
    HandleUnsupported(PFNGLVERTEXATTRIBI4UIPROC, glvertexattribi4ui); \
    HandleUnsupported(PFNGLVERTEXATTRIBI4IVPROC, glvertexattribi4iv); \
    HandleUnsupported(PFNGLVERTEXATTRIBI4UIVPROC, glvertexattribi4uiv); \
    HandleUnsupported(PFNGLGETUNIFORMUIVPROC, glgetuniformuiv); \
    HandleUnsupported(PFNGLGETFRAGDATALOCATIONPROC, glgetfragdatalocation); \
    HandleUnsupported(PFNGLUNIFORM1UIPROC, gluniform1ui); \
    HandleUnsupported(PFNGLUNIFORM2UIPROC, gluniform2ui); \
    HandleUnsupported(PFNGLUNIFORM3UIPROC, gluniform3ui); \
    HandleUnsupported(PFNGLUNIFORM4UIPROC, gluniform4ui); \
    HandleUnsupported(PFNGLUNIFORM1UIVPROC, gluniform1uiv); \
    HandleUnsupported(PFNGLUNIFORM2UIVPROC, gluniform2uiv); \
    HandleUnsupported(PFNGLUNIFORM3UIVPROC, gluniform3uiv); \
    HandleUnsupported(PFNGLUNIFORM4UIVPROC, gluniform4uiv); \
    HandleUnsupported(PFNGLCLEARBUFFERIVPROC, glclearbufferiv); \
    HandleUnsupported(PFNGLCLEARBUFFERUIVPROC, glclearbufferuiv); \
    HandleUnsupported(PFNGLCLEARBUFFERFVPROC, glclearbufferfv); \
    HandleUnsupported(PFNGLCLEARBUFFERFIPROC, glclearbufferfi); \
    HandleUnsupported(PFNGLGETSTRINGIPROC, glgetstringi); \
    HandleUnsupported(PFNGLCOPYBUFFERSUBDATAPROC, glcopybuffersubdata); \
    HandleUnsupported(PFNGLGETUNIFORMINDICESPROC, glgetuniformindices); \
    HandleUnsupported(PFNGLGETACTIVEUNIFORMSIVPROC, glgetactiveuniformsiv); \
    HandleUnsupported(PFNGLGETUNIFORMBLOCKINDEXPROC, glgetuniformblockindex); \
    HandleUnsupported(PFNGLGETACTIVEUNIFORMBLOCKIVPROC, glgetactiveuniformblockiv); \
    HandleUnsupported(PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC, glgetactiveuniformblockname); \
    HandleUnsupported(PFNGLUNIFORMBLOCKBINDINGPROC, gluniformblockbinding); \
    HandleUnsupported(PFNGLDRAWARRAYSINSTANCEDPROC, gldrawarraysinstanced); \
    HandleUnsupported(PFNGLDRAWELEMENTSINSTANCEDPROC, gldrawelementsinstanced); \
    HandleUnsupported(PFNGLFENCESYNCPROC, glfencesync); \
    HandleUnsupported(PFNGLISSYNCPROC, glissync); \
    HandleUnsupported(PFNGLDELETESYNCPROC, gldeletesync); \
    HandleUnsupported(PFNGLCLIENTWAITSYNCPROC, glclientwaitsync); \
    HandleUnsupported(PFNGLWAITSYNCPROC, glwaitsync); \
    HandleUnsupported(PFNGLGETINTEGER64VPROC, glgetinteger64v); \
    HandleUnsupported(PFNGLGETSYNCIVPROC, glgetsynciv); \
    HandleUnsupported(PFNGLGETINTEGER64I_VPROC, glgetinteger64i_v); \
    HandleUnsupported(PFNGLGETBUFFERPARAMETERI64VPROC, glgetbufferparameteri64v); \
    HandleUnsupported(PFNGLGENSAMPLERSPROC, glgensamplers); \
    HandleUnsupported(PFNGLDELETESAMPLERSPROC, gldeletesamplers); \
    HandleUnsupported(PFNGLISSAMPLERPROC, glissampler); \
    HandleUnsupported(PFNGLBINDSAMPLERPROC, glbindsampler); \
    HandleUnsupported(PFNGLSAMPLERPARAMETERIPROC, glsamplerparameteri); \
    HandleUnsupported(PFNGLSAMPLERPARAMETERIVPROC, glsamplerparameteriv); \
    HandleUnsupported(PFNGLSAMPLERPARAMETERFPROC, glsamplerparameterf); \
    HandleUnsupported(PFNGLSAMPLERPARAMETERFVPROC, glsamplerparameterfv); \
    HandleUnsupported(PFNGLGETSAMPLERPARAMETERIVPROC, glgetsamplerparameteriv); \
    HandleUnsupported(PFNGLGETSAMPLERPARAMETERFVPROC, glgetsamplerparameterfv); \
    HandleUnsupported(PFNGLVERTEXATTRIBDIVISORPROC, glvertexattribdivisor); \
    HandleUnsupported(PFNGLBINDTRANSFORMFEEDBACKPROC, glbindtransformfeedback); \
    HandleUnsupported(PFNGLDELETETRANSFORMFEEDBACKSPROC, gldeletetransformfeedbacks); \
    HandleUnsupported(PFNGLGENTRANSFORMFEEDBACKSPROC, glgentransformfeedbacks); \
    HandleUnsupported(PFNGLISTRANSFORMFEEDBACKPROC, glistransformfeedback); \
    HandleUnsupported(PFNGLPAUSETRANSFORMFEEDBACKPROC, glpausetransformfeedback); \
    HandleUnsupported(PFNGLRESUMETRANSFORMFEEDBACKPROC, glresumetransformfeedback); \
    HandleUnsupported(PFNGLGETPROGRAMBINARYPROC, glgetprogrambinary); \
    HandleUnsupported(PFNGLPROGRAMBINARYPROC, glprogrambinary); \
    HandleUnsupported(PFNGLPROGRAMPARAMETERIPROC, glprogramparameteri); \
    HandleUnsupported(PFNGLINVALIDATEFRAMEBUFFERPROC, glinvalidateframebuffer); \
    HandleUnsupported(PFNGLINVALIDATESUBFRAMEBUFFERPROC, glinvalidatesubframebuffer); \
    HandleUnsupported(PFNGLTEXSTORAGE2DPROC, gltexstorage2d); \
    HandleUnsupported(PFNGLTEXSTORAGE3DPROC, gltexstorage3d); \
    HandleUnsupported(PFNGLGETINTERNALFORMATIVPROC, glgetinternalformativ); \
    HandleUnsupported(PFNGLDISPATCHCOMPUTEPROC, gldispatchcompute); \
    HandleUnsupported(PFNGLDISPATCHCOMPUTEINDIRECTPROC, gldispatchcomputeindirect); \
    HandleUnsupported(PFNGLDRAWARRAYSINDIRECTPROC, gldrawarraysindirect); \
    HandleUnsupported(PFNGLDRAWELEMENTSINDIRECTPROC, gldrawelementsindirect); \
    HandleUnsupported(PFNGLFRAMEBUFFERPARAMETERIPROC, glframebufferparameteri); \
    HandleUnsupported(PFNGLGETFRAMEBUFFERPARAMETERIVPROC, glgetframebufferparameteriv); \
    HandleUnsupported(PFNGLGETPROGRAMINTERFACEIVPROC, glgetprograminterfaceiv); \
    HandleUnsupported(PFNGLGETPROGRAMRESOURCEINDEXPROC, glgetprogramresourceindex); \
    HandleUnsupported(PFNGLGETPROGRAMRESOURCENAMEPROC, glgetprogramresourcename); \
    HandleUnsupported(PFNGLGETPROGRAMRESOURCEIVPROC, glgetprogramresourceiv); \
    HandleUnsupported(PFNGLGETPROGRAMRESOURCELOCATIONPROC, glgetprogramresourcelocation); \
    HandleUnsupported(PFNGLUSEPROGRAMSTAGESPROC, gluseprogramstages); \
    HandleUnsupported(PFNGLACTIVESHADERPROGRAMPROC, glactiveshaderprogram); \
    HandleUnsupported(PFNGLCREATESHADERPROGRAMVPROC, glcreateshaderprogramv); \
    HandleUnsupported(PFNGLBINDPROGRAMPIPELINEPROC, glbindprogrampipeline); \
    HandleUnsupported(PFNGLDELETEPROGRAMPIPELINESPROC, gldeleteprogrampipelines); \
    HandleUnsupported(PFNGLGENPROGRAMPIPELINESPROC, glgenprogrampipelines); \
    HandleUnsupported(PFNGLISPROGRAMPIPELINEPROC, glisprogrampipeline); \
    HandleUnsupported(PFNGLGETPROGRAMPIPELINEIVPROC, glgetprogrampipelineiv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1IPROC, glprogramuniform1i); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2IPROC, glprogramuniform2i); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3IPROC, glprogramuniform3i); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4IPROC, glprogramuniform4i); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1UIPROC, glprogramuniform1ui); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2UIPROC, glprogramuniform2ui); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3UIPROC, glprogramuniform3ui); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4UIPROC, glprogramuniform4ui); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1FPROC, glprogramuniform1f); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2FPROC, glprogramuniform2f); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3FPROC, glprogramuniform3f); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4FPROC, glprogramuniform4f); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1IVPROC, glprogramuniform1iv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2IVPROC, glprogramuniform2iv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3IVPROC, glprogramuniform3iv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4IVPROC, glprogramuniform4iv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1UIVPROC, glprogramuniform1uiv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2UIVPROC, glprogramuniform2uiv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3UIVPROC, glprogramuniform3uiv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4UIVPROC, glprogramuniform4uiv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1FVPROC, glprogramuniform1fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2FVPROC, glprogramuniform2fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3FVPROC, glprogramuniform3fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4FVPROC, glprogramuniform4fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX2FVPROC, glprogramuniformmatrix2fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX3FVPROC, glprogramuniformmatrix3fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX4FVPROC, glprogramuniformmatrix4fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC, glprogramuniformmatrix2x3fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC, glprogramuniformmatrix3x2fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC, glprogramuniformmatrix2x4fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC, glprogramuniformmatrix4x2fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC, glprogramuniformmatrix3x4fv); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC, glprogramuniformmatrix4x3fv); \
    HandleUnsupported(PFNGLVALIDATEPROGRAMPIPELINEPROC, glvalidateprogrampipeline); \
    HandleUnsupported(PFNGLGETPROGRAMPIPELINEINFOLOGPROC, glgetprogrampipelineinfolog); \
    HandleUnsupported(PFNGLBINDIMAGETEXTUREPROC, glbindimagetexture); \
    HandleUnsupported(PFNGLGETBOOLEANI_VPROC, glgetbooleani_v); \
    HandleUnsupported(PFNGLMEMORYBARRIERPROC, glmemorybarrier); \
    HandleUnsupported(PFNGLMEMORYBARRIERBYREGIONPROC, glmemorybarrierbyregion); \
    HandleUnsupported(PFNGLTEXSTORAGE2DMULTISAMPLEPROC, gltexstorage2dmultisample); \
    HandleUnsupported(PFNGLGETMULTISAMPLEFVPROC, glgetmultisamplefv); \
    HandleUnsupported(PFNGLSAMPLEMASKIPROC, glsamplemaski); \
    HandleUnsupported(PFNGLGETTEXLEVELPARAMETERIVPROC, glgettexlevelparameteriv); \
    HandleUnsupported(PFNGLGETTEXLEVELPARAMETERFVPROC, glgettexlevelparameterfv); \
    HandleUnsupported(PFNGLBINDVERTEXBUFFERPROC, glbindvertexbuffer); \
    HandleUnsupported(PFNGLVERTEXATTRIBFORMATPROC, glvertexattribformat); \
    HandleUnsupported(PFNGLVERTEXATTRIBIFORMATPROC, glvertexattribiformat); \
    HandleUnsupported(PFNGLVERTEXATTRIBBINDINGPROC, glvertexattribbinding); \
    HandleUnsupported(PFNGLVERTEXBINDINGDIVISORPROC, glvertexbindingdivisor); \
    HandleUnsupported(PFNGLBLENDBARRIERPROC, glblendbarrier); \
    HandleUnsupported(PFNGLCOPYIMAGESUBDATAPROC, glcopyimagesubdata); \
    HandleUnsupported(PFNGLDEBUGMESSAGECONTROLPROC, gldebugmessagecontrol); \
    HandleUnsupported(PFNGLDEBUGMESSAGEINSERTPROC, gldebugmessageinsert); \
    HandleUnsupported(PFNGLDEBUGMESSAGECALLBACKPROC, gldebugmessagecallback); \
    HandleUnsupported(PFNGLGETDEBUGMESSAGELOGPROC, glgetdebugmessagelog); \
    HandleUnsupported(PFNGLPUSHDEBUGGROUPPROC, glpushdebuggroup); \
    HandleUnsupported(PFNGLPOPDEBUGGROUPPROC, glpopdebuggroup); \
    HandleUnsupported(PFNGLOBJECTLABELPROC, globjectlabel); \
    HandleUnsupported(PFNGLGETOBJECTLABELPROC, glgetobjectlabel); \
    HandleUnsupported(PFNGLOBJECTPTRLABELPROC, globjectptrlabel); \
    HandleUnsupported(PFNGLGETOBJECTPTRLABELPROC, glgetobjectptrlabel); \
    HandleUnsupported(PFNGLGETPOINTERVPROC, glgetpointerv); \
    HandleUnsupported(PFNGLENABLEIPROC, glenablei); \
    HandleUnsupported(PFNGLDISABLEIPROC, gldisablei); \
    HandleUnsupported(PFNGLBLENDEQUATIONIPROC, glblendequationi); \
    HandleUnsupported(PFNGLBLENDEQUATIONSEPARATEIPROC, glblendequationseparatei); \
    HandleUnsupported(PFNGLBLENDFUNCIPROC, glblendfunci); \
    HandleUnsupported(PFNGLBLENDFUNCSEPARATEIPROC, glblendfuncseparatei); \
    HandleUnsupported(PFNGLCOLORMASKIPROC, glcolormaski); \
    HandleUnsupported(PFNGLISENABLEDIPROC, glisenabledi); \
    HandleUnsupported(PFNGLDRAWELEMENTSBASEVERTEXPROC, gldrawelementsbasevertex); \
    HandleUnsupported(PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC, gldrawrangeelementsbasevertex); \
    HandleUnsupported(PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC, gldrawelementsinstancedbasevertex); \
    HandleUnsupported(PFNGLFRAMEBUFFERTEXTUREPROC, glframebuffertexture); \
    HandleUnsupported(PFNGLPRIMITIVEBOUNDINGBOXPROC, glprimitiveboundingbox); \
    HandleUnsupported(PFNGLGETGRAPHICSRESETSTATUSPROC, glgetgraphicsresetstatus); \
    HandleUnsupported(PFNGLREADNPIXELSPROC, glreadnpixels); \
    HandleUnsupported(PFNGLGETNUNIFORMFVPROC, glgetnuniformfv); \
    HandleUnsupported(PFNGLGETNUNIFORMIVPROC, glgetnuniformiv); \
    HandleUnsupported(PFNGLGETNUNIFORMUIVPROC, glgetnuniformuiv); \
    HandleUnsupported(PFNGLMINSAMPLESHADINGPROC, glminsampleshading); \
    HandleUnsupported(PFNGLPATCHPARAMETERIPROC, glpatchparameteri); \
    HandleUnsupported(PFNGLTEXPARAMETERIIVPROC, gltexparameteriiv); \
    HandleUnsupported(PFNGLTEXPARAMETERIUIVPROC, gltexparameteriuiv); \
    HandleUnsupported(PFNGLGETTEXPARAMETERIIVPROC, glgettexparameteriiv); \
    HandleUnsupported(PFNGLGETTEXPARAMETERIUIVPROC, glgettexparameteriuiv); \
    HandleUnsupported(PFNGLSAMPLERPARAMETERIIVPROC, glsamplerparameteriiv); \
    HandleUnsupported(PFNGLSAMPLERPARAMETERIUIVPROC, glsamplerparameteriuiv); \
    HandleUnsupported(PFNGLGETSAMPLERPARAMETERIIVPROC, glgetsamplerparameteriiv); \
    HandleUnsupported(PFNGLGETSAMPLERPARAMETERIUIVPROC, glgetsamplerparameteriuiv); \
    HandleUnsupported(PFNGLTEXBUFFERPROC, gltexbuffer); \
    HandleUnsupported(PFNGLTEXBUFFERRANGEPROC, gltexbufferrange); \
    HandleUnsupported(PFNGLTEXSTORAGE3DMULTISAMPLEPROC, gltexstorage3dmultisample); \




