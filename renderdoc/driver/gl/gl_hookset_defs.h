/******************************************************************************
 * The MIT License (MIT)
 *
 * Copyright (c) 2015-2018 Baldur Karlsson
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 ******************************************************************************/

#pragma once

// This file is autogenerated with hookset.pl - any changes will be overwritten
// next time that script is run.
// $ pwd
// .../renderdoc/driver/gl
// $ ./hookset.pl > gl_hookset_defs.h
// We need to disable clang-format since this struct is programmatically generated
// clang-format off
////////////////////////////////////////////////////

// dllexport functions
#define DLLExportHooks() \
  HookInit(glCullFace); \
  HookInit(glFrontFace); \
  HookInit(glHint); \
  HookInit(glLineWidth); \
  HookInit(glPointSize); \
  HookInit(glPolygonMode); \
  HookInit(glScissor); \
  HookInit(glTexParameterf); \
  HookInit(glTexParameterfv); \
  HookInit(glTexParameteri); \
  HookInit(glTexParameteriv); \
  HookInit(glTexImage1D); \
  HookInit(glTexImage2D); \
  HookInit(glDrawBuffer); \
  HookInit(glClear); \
  HookInit(glClearColor); \
  HookInit(glClearStencil); \
  HookInit(glClearDepth); \
  HookInit(glStencilMask); \
  HookInit(glColorMask); \
  HookInit(glDepthMask); \
  HookInit(glDisable); \
  HookInit(glEnable); \
  HookInit(glFinish); \
  HookInit(glFlush); \
  HookInit(glBlendFunc); \
  HookInit(glLogicOp); \
  HookInit(glStencilFunc); \
  HookInit(glStencilOp); \
  HookInit(glDepthFunc); \
  HookInit(glPixelStoref); \
  HookInit(glPixelStorei); \
  HookInit(glReadBuffer); \
  HookInit(glReadPixels); \
  HookInit(glGetBooleanv); \
  HookInit(glGetDoublev); \
  HookInit(glGetError); \
  HookInit(glGetFloatv); \
  HookInit(glGetIntegerv); \
  HookInit(glGetString); \
  HookInit(glGetTexImage); \
  HookInit(glGetTexParameterfv); \
  HookInit(glGetTexParameteriv); \
  HookInit(glGetTexLevelParameterfv); \
  HookInit(glGetTexLevelParameteriv); \
  HookInit(glIsEnabled); \
  HookInit(glDepthRange); \
  HookInit(glViewport); \
  HookInit(glDrawArrays); \
  HookInit(glDrawElements); \
  HookInit(glGetPointerv); \
  HookInit(glPolygonOffset); \
  HookInit(glCopyTexImage1D); \
  HookInit(glCopyTexImage2D); \
  HookInit(glCopyTexSubImage1D); \
  HookInit(glCopyTexSubImage2D); \
  HookInit(glTexSubImage1D); \
  HookInit(glTexSubImage2D); \
  HookInit(glBindTexture); \
  HookInit(glDeleteTextures); \
  HookInit(glGenTextures); \
  HookInit(glIsTexture); \



// gl extensions
#define HookCheckGLExtensions() \
  HookExtension(PFNGLDRAWRANGEELEMENTSPROC, glDrawRangeElements); \
  HookExtensionAlias(PFNGLDRAWRANGEELEMENTSPROC, glDrawRangeElements, glDrawRangeElementsEXT); \
  HookExtension(PFNGLTEXIMAGE3DPROC, glTexImage3D); \
  HookExtensionAlias(PFNGLTEXIMAGE3DPROC, glTexImage3D, glTexImage3DEXT); \
  HookExtensionAlias(PFNGLTEXIMAGE3DPROC, glTexImage3D, glTexImage3DOES); \
  HookExtension(PFNGLTEXSUBIMAGE3DPROC, glTexSubImage3D); \
  HookExtensionAlias(PFNGLTEXSUBIMAGE3DPROC, glTexSubImage3D, glTexSubImage3DOES); \
  HookExtension(PFNGLCOPYTEXSUBIMAGE3DPROC, glCopyTexSubImage3D); \
  HookExtensionAlias(PFNGLCOPYTEXSUBIMAGE3DPROC, glCopyTexSubImage3D, glCopyTexSubImage3DOES); \
  HookExtension(PFNGLACTIVETEXTUREPROC, glActiveTexture); \
  HookExtensionAlias(PFNGLACTIVETEXTUREPROC, glActiveTexture, glActiveTextureARB); \
  HookExtension(PFNGLSAMPLECOVERAGEPROC, glSampleCoverage); \
  HookExtensionAlias(PFNGLSAMPLECOVERAGEPROC, glSampleCoverage, glSampleCoverageARB); \
  HookExtension(PFNGLCOMPRESSEDTEXIMAGE3DPROC, glCompressedTexImage3D); \
  HookExtensionAlias(PFNGLCOMPRESSEDTEXIMAGE3DPROC, glCompressedTexImage3D, glCompressedTexImage3DARB); \
  HookExtensionAlias(PFNGLCOMPRESSEDTEXIMAGE3DPROC, glCompressedTexImage3D, glCompressedTexImage3DOES); \
  HookExtension(PFNGLCOMPRESSEDTEXIMAGE2DPROC, glCompressedTexImage2D); \
  HookExtensionAlias(PFNGLCOMPRESSEDTEXIMAGE2DPROC, glCompressedTexImage2D, glCompressedTexImage2DARB); \
  HookExtension(PFNGLCOMPRESSEDTEXIMAGE1DPROC, glCompressedTexImage1D); \
  HookExtensionAlias(PFNGLCOMPRESSEDTEXIMAGE1DPROC, glCompressedTexImage1D, glCompressedTexImage1DARB); \
  HookExtension(PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC, glCompressedTexSubImage3D); \
  HookExtensionAlias(PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC, glCompressedTexSubImage3D, glCompressedTexSubImage3DARB); \
  HookExtensionAlias(PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC, glCompressedTexSubImage3D, glCompressedTexSubImage3DOES); \
  HookExtension(PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC, glCompressedTexSubImage2D); \
  HookExtensionAlias(PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC, glCompressedTexSubImage2D, glCompressedTexSubImage2DARB); \
  HookExtension(PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC, glCompressedTexSubImage1D); \
  HookExtensionAlias(PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC, glCompressedTexSubImage1D, glCompressedTexSubImage1DARB); \
  HookExtension(PFNGLGETCOMPRESSEDTEXIMAGEPROC, glGetCompressedTexImage); \
  HookExtensionAlias(PFNGLGETCOMPRESSEDTEXIMAGEPROC, glGetCompressedTexImage, glGetCompressedTexImageARB); \
  HookExtension(PFNGLBLENDFUNCSEPARATEPROC, glBlendFuncSeparate); \
  HookExtensionAlias(PFNGLBLENDFUNCSEPARATEPROC, glBlendFuncSeparate, glBlendFuncSeparateARB); \
  HookExtension(PFNGLMULTIDRAWARRAYSPROC, glMultiDrawArrays); \
  HookExtensionAlias(PFNGLMULTIDRAWARRAYSPROC, glMultiDrawArrays, glMultiDrawArraysEXT); \
  HookExtension(PFNGLMULTIDRAWELEMENTSPROC, glMultiDrawElements); \
  HookExtension(PFNGLPOINTPARAMETERFPROC, glPointParameterf); \
  HookExtensionAlias(PFNGLPOINTPARAMETERFPROC, glPointParameterf, glPointParameterfARB); \
  HookExtensionAlias(PFNGLPOINTPARAMETERFPROC, glPointParameterf, glPointParameterfEXT); \
  HookExtension(PFNGLPOINTPARAMETERFVPROC, glPointParameterfv); \
  HookExtensionAlias(PFNGLPOINTPARAMETERFVPROC, glPointParameterfv, glPointParameterfvARB); \
  HookExtensionAlias(PFNGLPOINTPARAMETERFVPROC, glPointParameterfv, glPointParameterfvEXT); \
  HookExtension(PFNGLPOINTPARAMETERIPROC, glPointParameteri); \
  HookExtension(PFNGLPOINTPARAMETERIVPROC, glPointParameteriv); \
  HookExtension(PFNGLBLENDCOLORPROC, glBlendColor); \
  HookExtensionAlias(PFNGLBLENDCOLORPROC, glBlendColor, glBlendColorEXT); \
  HookExtension(PFNGLBLENDEQUATIONPROC, glBlendEquation); \
  HookExtensionAlias(PFNGLBLENDEQUATIONPROC, glBlendEquation, glBlendEquationEXT); \
  HookExtension(PFNGLGENQUERIESPROC, glGenQueries); \
  HookExtensionAlias(PFNGLGENQUERIESPROC, glGenQueries, glGenQueriesARB); \
  HookExtensionAlias(PFNGLGENQUERIESPROC, glGenQueries, glGenQueriesEXT); \
  HookExtension(PFNGLDELETEQUERIESPROC, glDeleteQueries); \
  HookExtensionAlias(PFNGLDELETEQUERIESPROC, glDeleteQueries, glDeleteQueriesARB); \
  HookExtensionAlias(PFNGLDELETEQUERIESPROC, glDeleteQueries, glDeleteQueriesEXT); \
  HookExtension(PFNGLISQUERYPROC, glIsQuery); \
  HookExtensionAlias(PFNGLISQUERYPROC, glIsQuery, glIsQueryARB); \
  HookExtensionAlias(PFNGLISQUERYPROC, glIsQuery, glIsQueryEXT); \
  HookExtension(PFNGLBEGINQUERYPROC, glBeginQuery); \
  HookExtensionAlias(PFNGLBEGINQUERYPROC, glBeginQuery, glBeginQueryARB); \
  HookExtensionAlias(PFNGLBEGINQUERYPROC, glBeginQuery, glBeginQueryEXT); \
  HookExtension(PFNGLENDQUERYPROC, glEndQuery); \
  HookExtensionAlias(PFNGLENDQUERYPROC, glEndQuery, glEndQueryARB); \
  HookExtensionAlias(PFNGLENDQUERYPROC, glEndQuery, glEndQueryEXT); \
  HookExtension(PFNGLGETQUERYIVPROC, glGetQueryiv); \
  HookExtensionAlias(PFNGLGETQUERYIVPROC, glGetQueryiv, glGetQueryivARB); \
  HookExtensionAlias(PFNGLGETQUERYIVPROC, glGetQueryiv, glGetQueryivEXT); \
  HookExtension(PFNGLGETQUERYOBJECTIVPROC, glGetQueryObjectiv); \
  HookExtensionAlias(PFNGLGETQUERYOBJECTIVPROC, glGetQueryObjectiv, glGetQueryObjectivARB); \
  HookExtensionAlias(PFNGLGETQUERYOBJECTIVPROC, glGetQueryObjectiv, glGetQueryObjectivEXT); \
  HookExtension(PFNGLGETQUERYOBJECTUIVPROC, glGetQueryObjectuiv); \
  HookExtensionAlias(PFNGLGETQUERYOBJECTUIVPROC, glGetQueryObjectuiv, glGetQueryObjectuivARB); \
  HookExtensionAlias(PFNGLGETQUERYOBJECTUIVPROC, glGetQueryObjectuiv, glGetQueryObjectuivEXT); \
  HookExtension(PFNGLBINDBUFFERPROC, glBindBuffer); \
  HookExtensionAlias(PFNGLBINDBUFFERPROC, glBindBuffer, glBindBufferARB); \
  HookExtension(PFNGLDELETEBUFFERSPROC, glDeleteBuffers); \
  HookExtensionAlias(PFNGLDELETEBUFFERSPROC, glDeleteBuffers, glDeleteBuffersARB); \
  HookExtension(PFNGLGENBUFFERSPROC, glGenBuffers); \
  HookExtensionAlias(PFNGLGENBUFFERSPROC, glGenBuffers, glGenBuffersARB); \
  HookExtension(PFNGLISBUFFERPROC, glIsBuffer); \
  HookExtensionAlias(PFNGLISBUFFERPROC, glIsBuffer, glIsBufferARB); \
  HookExtension(PFNGLBUFFERDATAPROC, glBufferData); \
  HookExtensionAlias(PFNGLBUFFERDATAPROC, glBufferData, glBufferDataARB); \
  HookExtension(PFNGLBUFFERSUBDATAPROC, glBufferSubData); \
  HookExtensionAlias(PFNGLBUFFERSUBDATAPROC, glBufferSubData, glBufferSubDataARB); \
  HookExtension(PFNGLGETBUFFERSUBDATAPROC, glGetBufferSubData); \
  HookExtensionAlias(PFNGLGETBUFFERSUBDATAPROC, glGetBufferSubData, glGetBufferSubDataARB); \
  HookExtension(PFNGLMAPBUFFERPROC, glMapBuffer); \
  HookExtensionAlias(PFNGLMAPBUFFERPROC, glMapBuffer, glMapBufferARB); \
  HookExtensionAlias(PFNGLMAPBUFFERPROC, glMapBuffer, glMapBufferOES); \
  HookExtension(PFNGLUNMAPBUFFERPROC, glUnmapBuffer); \
  HookExtensionAlias(PFNGLUNMAPBUFFERPROC, glUnmapBuffer, glUnmapBufferARB); \
  HookExtensionAlias(PFNGLUNMAPBUFFERPROC, glUnmapBuffer, glUnmapBufferOES); \
  HookExtension(PFNGLGETBUFFERPARAMETERIVPROC, glGetBufferParameteriv); \
  HookExtensionAlias(PFNGLGETBUFFERPARAMETERIVPROC, glGetBufferParameteriv, glGetBufferParameterivARB); \
  HookExtension(PFNGLGETBUFFERPOINTERVPROC, glGetBufferPointerv); \
  HookExtensionAlias(PFNGLGETBUFFERPOINTERVPROC, glGetBufferPointerv, glGetBufferPointervARB); \
  HookExtensionAlias(PFNGLGETBUFFERPOINTERVPROC, glGetBufferPointerv, glGetBufferPointervOES); \
  HookExtension(PFNGLBLENDEQUATIONSEPARATEPROC, glBlendEquationSeparate); \
  HookExtensionAlias(PFNGLBLENDEQUATIONSEPARATEPROC, glBlendEquationSeparate, glBlendEquationSeparateARB); \
  HookExtensionAlias(PFNGLBLENDEQUATIONSEPARATEPROC, glBlendEquationSeparate, glBlendEquationSeparateEXT); \
  HookExtension(PFNGLDRAWBUFFERSPROC, glDrawBuffers); \
  HookExtensionAlias(PFNGLDRAWBUFFERSPROC, glDrawBuffers, glDrawBuffersARB); \
  HookExtensionAlias(PFNGLDRAWBUFFERSPROC, glDrawBuffers, glDrawBuffersEXT); \
  HookExtension(PFNGLSTENCILOPSEPARATEPROC, glStencilOpSeparate); \
  HookExtension(PFNGLSTENCILFUNCSEPARATEPROC, glStencilFuncSeparate); \
  HookExtension(PFNGLSTENCILMASKSEPARATEPROC, glStencilMaskSeparate); \
  HookExtension(PFNGLATTACHSHADERPROC, glAttachShader); \
  HookExtension(PFNGLBINDATTRIBLOCATIONPROC, glBindAttribLocation); \
  HookExtension(PFNGLCOMPILESHADERPROC, glCompileShader); \
  HookExtension(PFNGLCREATEPROGRAMPROC, glCreateProgram); \
  HookExtension(PFNGLCREATESHADERPROC, glCreateShader); \
  HookExtension(PFNGLDELETEPROGRAMPROC, glDeleteProgram); \
  HookExtension(PFNGLDELETESHADERPROC, glDeleteShader); \
  HookExtension(PFNGLDETACHSHADERPROC, glDetachShader); \
  HookExtension(PFNGLDISABLEVERTEXATTRIBARRAYPROC, glDisableVertexAttribArray); \
  HookExtensionAlias(PFNGLDISABLEVERTEXATTRIBARRAYPROC, glDisableVertexAttribArray, glDisableVertexAttribArrayARB); \
  HookExtension(PFNGLENABLEVERTEXATTRIBARRAYPROC, glEnableVertexAttribArray); \
  HookExtensionAlias(PFNGLENABLEVERTEXATTRIBARRAYPROC, glEnableVertexAttribArray, glEnableVertexAttribArrayARB); \
  HookExtension(PFNGLGETACTIVEATTRIBPROC, glGetActiveAttrib); \
  HookExtension(PFNGLGETACTIVEUNIFORMPROC, glGetActiveUniform); \
  HookExtension(PFNGLGETATTACHEDSHADERSPROC, glGetAttachedShaders); \
  HookExtension(PFNGLGETATTRIBLOCATIONPROC, glGetAttribLocation); \
  HookExtension(PFNGLGETPROGRAMIVPROC, glGetProgramiv); \
  HookExtension(PFNGLGETPROGRAMINFOLOGPROC, glGetProgramInfoLog); \
  HookExtension(PFNGLGETSHADERIVPROC, glGetShaderiv); \
  HookExtension(PFNGLGETSHADERINFOLOGPROC, glGetShaderInfoLog); \
  HookExtension(PFNGLGETSHADERSOURCEPROC, glGetShaderSource); \
  HookExtension(PFNGLGETUNIFORMLOCATIONPROC, glGetUniformLocation); \
  HookExtension(PFNGLGETUNIFORMFVPROC, glGetUniformfv); \
  HookExtension(PFNGLGETUNIFORMIVPROC, glGetUniformiv); \
  HookExtension(PFNGLGETVERTEXATTRIBDVPROC, glGetVertexAttribdv); \
  HookExtension(PFNGLGETVERTEXATTRIBFVPROC, glGetVertexAttribfv); \
  HookExtension(PFNGLGETVERTEXATTRIBIVPROC, glGetVertexAttribiv); \
  HookExtension(PFNGLGETVERTEXATTRIBPOINTERVPROC, glGetVertexAttribPointerv); \
  HookExtension(PFNGLISPROGRAMPROC, glIsProgram); \
  HookExtension(PFNGLISSHADERPROC, glIsShader); \
  HookExtension(PFNGLLINKPROGRAMPROC, glLinkProgram); \
  HookExtension(PFNGLSHADERSOURCEPROC, glShaderSource); \
  HookExtension(PFNGLUSEPROGRAMPROC, glUseProgram); \
  HookExtension(PFNGLUNIFORM1FPROC, glUniform1f); \
  HookExtension(PFNGLUNIFORM2FPROC, glUniform2f); \
  HookExtension(PFNGLUNIFORM3FPROC, glUniform3f); \
  HookExtension(PFNGLUNIFORM4FPROC, glUniform4f); \
  HookExtension(PFNGLUNIFORM1IPROC, glUniform1i); \
  HookExtension(PFNGLUNIFORM2IPROC, glUniform2i); \
  HookExtension(PFNGLUNIFORM3IPROC, glUniform3i); \
  HookExtension(PFNGLUNIFORM4IPROC, glUniform4i); \
  HookExtension(PFNGLUNIFORM1FVPROC, glUniform1fv); \
  HookExtension(PFNGLUNIFORM2FVPROC, glUniform2fv); \
  HookExtension(PFNGLUNIFORM3FVPROC, glUniform3fv); \
  HookExtension(PFNGLUNIFORM4FVPROC, glUniform4fv); \
  HookExtension(PFNGLUNIFORM1IVPROC, glUniform1iv); \
  HookExtension(PFNGLUNIFORM2IVPROC, glUniform2iv); \
  HookExtension(PFNGLUNIFORM3IVPROC, glUniform3iv); \
  HookExtension(PFNGLUNIFORM4IVPROC, glUniform4iv); \
  HookExtension(PFNGLUNIFORMMATRIX2FVPROC, glUniformMatrix2fv); \
  HookExtension(PFNGLUNIFORMMATRIX3FVPROC, glUniformMatrix3fv); \
  HookExtension(PFNGLUNIFORMMATRIX4FVPROC, glUniformMatrix4fv); \
  HookExtension(PFNGLVALIDATEPROGRAMPROC, glValidateProgram); \
  HookExtension(PFNGLVERTEXATTRIB1DPROC, glVertexAttrib1d); \
  HookExtensionAlias(PFNGLVERTEXATTRIB1DPROC, glVertexAttrib1d, glVertexAttrib1dARB); \
  HookExtension(PFNGLVERTEXATTRIB1DVPROC, glVertexAttrib1dv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB1DVPROC, glVertexAttrib1dv, glVertexAttrib1dvARB); \
  HookExtension(PFNGLVERTEXATTRIB1FPROC, glVertexAttrib1f); \
  HookExtensionAlias(PFNGLVERTEXATTRIB1FPROC, glVertexAttrib1f, glVertexAttrib1fARB); \
  HookExtension(PFNGLVERTEXATTRIB1FVPROC, glVertexAttrib1fv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB1FVPROC, glVertexAttrib1fv, glVertexAttrib1fvARB); \
  HookExtension(PFNGLVERTEXATTRIB1SPROC, glVertexAttrib1s); \
  HookExtensionAlias(PFNGLVERTEXATTRIB1SPROC, glVertexAttrib1s, glVertexAttrib1sARB); \
  HookExtension(PFNGLVERTEXATTRIB1SVPROC, glVertexAttrib1sv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB1SVPROC, glVertexAttrib1sv, glVertexAttrib1svARB); \
  HookExtension(PFNGLVERTEXATTRIB2DPROC, glVertexAttrib2d); \
  HookExtensionAlias(PFNGLVERTEXATTRIB2DPROC, glVertexAttrib2d, glVertexAttrib2dARB); \
  HookExtension(PFNGLVERTEXATTRIB2DVPROC, glVertexAttrib2dv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB2DVPROC, glVertexAttrib2dv, glVertexAttrib2dvARB); \
  HookExtension(PFNGLVERTEXATTRIB2FPROC, glVertexAttrib2f); \
  HookExtensionAlias(PFNGLVERTEXATTRIB2FPROC, glVertexAttrib2f, glVertexAttrib2fARB); \
  HookExtension(PFNGLVERTEXATTRIB2FVPROC, glVertexAttrib2fv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB2FVPROC, glVertexAttrib2fv, glVertexAttrib2fvARB); \
  HookExtension(PFNGLVERTEXATTRIB2SPROC, glVertexAttrib2s); \
  HookExtensionAlias(PFNGLVERTEXATTRIB2SPROC, glVertexAttrib2s, glVertexAttrib2sARB); \
  HookExtension(PFNGLVERTEXATTRIB2SVPROC, glVertexAttrib2sv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB2SVPROC, glVertexAttrib2sv, glVertexAttrib2svARB); \
  HookExtension(PFNGLVERTEXATTRIB3DPROC, glVertexAttrib3d); \
  HookExtensionAlias(PFNGLVERTEXATTRIB3DPROC, glVertexAttrib3d, glVertexAttrib3dARB); \
  HookExtension(PFNGLVERTEXATTRIB3DVPROC, glVertexAttrib3dv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB3DVPROC, glVertexAttrib3dv, glVertexAttrib3dvARB); \
  HookExtension(PFNGLVERTEXATTRIB3FPROC, glVertexAttrib3f); \
  HookExtensionAlias(PFNGLVERTEXATTRIB3FPROC, glVertexAttrib3f, glVertexAttrib3fARB); \
  HookExtension(PFNGLVERTEXATTRIB3FVPROC, glVertexAttrib3fv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB3FVPROC, glVertexAttrib3fv, glVertexAttrib3fvARB); \
  HookExtension(PFNGLVERTEXATTRIB3SPROC, glVertexAttrib3s); \
  HookExtensionAlias(PFNGLVERTEXATTRIB3SPROC, glVertexAttrib3s, glVertexAttrib3sARB); \
  HookExtension(PFNGLVERTEXATTRIB3SVPROC, glVertexAttrib3sv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB3SVPROC, glVertexAttrib3sv, glVertexAttrib3svARB); \
  HookExtension(PFNGLVERTEXATTRIB4NBVPROC, glVertexAttrib4Nbv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4NBVPROC, glVertexAttrib4Nbv, glVertexAttrib4NbvARB); \
  HookExtension(PFNGLVERTEXATTRIB4NIVPROC, glVertexAttrib4Niv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4NIVPROC, glVertexAttrib4Niv, glVertexAttrib4NivARB); \
  HookExtension(PFNGLVERTEXATTRIB4NSVPROC, glVertexAttrib4Nsv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4NSVPROC, glVertexAttrib4Nsv, glVertexAttrib4NsvARB); \
  HookExtension(PFNGLVERTEXATTRIB4NUBPROC, glVertexAttrib4Nub); \
  HookExtension(PFNGLVERTEXATTRIB4NUBVPROC, glVertexAttrib4Nubv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4NUBVPROC, glVertexAttrib4Nubv, glVertexAttrib4NubvARB); \
  HookExtension(PFNGLVERTEXATTRIB4NUIVPROC, glVertexAttrib4Nuiv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4NUIVPROC, glVertexAttrib4Nuiv, glVertexAttrib4NuivARB); \
  HookExtension(PFNGLVERTEXATTRIB4NUSVPROC, glVertexAttrib4Nusv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4NUSVPROC, glVertexAttrib4Nusv, glVertexAttrib4NusvARB); \
  HookExtension(PFNGLVERTEXATTRIB4BVPROC, glVertexAttrib4bv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4BVPROC, glVertexAttrib4bv, glVertexAttrib4bvARB); \
  HookExtension(PFNGLVERTEXATTRIB4DPROC, glVertexAttrib4d); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4DPROC, glVertexAttrib4d, glVertexAttrib4dARB); \
  HookExtension(PFNGLVERTEXATTRIB4DVPROC, glVertexAttrib4dv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4DVPROC, glVertexAttrib4dv, glVertexAttrib4dvARB); \
  HookExtension(PFNGLVERTEXATTRIB4FPROC, glVertexAttrib4f); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4FPROC, glVertexAttrib4f, glVertexAttrib4fARB); \
  HookExtension(PFNGLVERTEXATTRIB4FVPROC, glVertexAttrib4fv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4FVPROC, glVertexAttrib4fv, glVertexAttrib4fvARB); \
  HookExtension(PFNGLVERTEXATTRIB4IVPROC, glVertexAttrib4iv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4IVPROC, glVertexAttrib4iv, glVertexAttrib4ivARB); \
  HookExtension(PFNGLVERTEXATTRIB4SPROC, glVertexAttrib4s); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4SPROC, glVertexAttrib4s, glVertexAttrib4sARB); \
  HookExtension(PFNGLVERTEXATTRIB4SVPROC, glVertexAttrib4sv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4SVPROC, glVertexAttrib4sv, glVertexAttrib4svARB); \
  HookExtension(PFNGLVERTEXATTRIB4UBVPROC, glVertexAttrib4ubv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4UBVPROC, glVertexAttrib4ubv, glVertexAttrib4ubvARB); \
  HookExtension(PFNGLVERTEXATTRIB4UIVPROC, glVertexAttrib4uiv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4UIVPROC, glVertexAttrib4uiv, glVertexAttrib4uivARB); \
  HookExtension(PFNGLVERTEXATTRIB4USVPROC, glVertexAttrib4usv); \
  HookExtensionAlias(PFNGLVERTEXATTRIB4USVPROC, glVertexAttrib4usv, glVertexAttrib4usvARB); \
  HookExtension(PFNGLVERTEXATTRIBPOINTERPROC, glVertexAttribPointer); \
  HookExtensionAlias(PFNGLVERTEXATTRIBPOINTERPROC, glVertexAttribPointer, glVertexAttribPointerARB); \
  HookExtension(PFNGLUNIFORMMATRIX2X3FVPROC, glUniformMatrix2x3fv); \
  HookExtension(PFNGLUNIFORMMATRIX3X2FVPROC, glUniformMatrix3x2fv); \
  HookExtension(PFNGLUNIFORMMATRIX2X4FVPROC, glUniformMatrix2x4fv); \
  HookExtension(PFNGLUNIFORMMATRIX4X2FVPROC, glUniformMatrix4x2fv); \
  HookExtension(PFNGLUNIFORMMATRIX3X4FVPROC, glUniformMatrix3x4fv); \
  HookExtension(PFNGLUNIFORMMATRIX4X3FVPROC, glUniformMatrix4x3fv); \
  HookExtension(PFNGLCOLORMASKIPROC, glColorMaski); \
  HookExtensionAlias(PFNGLCOLORMASKIPROC, glColorMaski, glColorMaskiEXT); \
  HookExtensionAlias(PFNGLCOLORMASKIPROC, glColorMaski, glColorMaskIndexedEXT); \
  HookExtensionAlias(PFNGLCOLORMASKIPROC, glColorMaski, glColorMaskiOES); \
  HookExtension(PFNGLGETBOOLEANI_VPROC, glGetBooleani_v); \
  HookExtension(PFNGLGETINTEGERI_VPROC, glGetIntegeri_v); \
  HookExtension(PFNGLENABLEIPROC, glEnablei); \
  HookExtensionAlias(PFNGLENABLEIPROC, glEnablei, glEnableiEXT); \
  HookExtensionAlias(PFNGLENABLEIPROC, glEnablei, glEnableIndexedEXT); \
  HookExtensionAlias(PFNGLENABLEIPROC, glEnablei, glEnableiOES); \
  HookExtensionAlias(PFNGLENABLEIPROC, glEnablei, glEnableiNV); \
  HookExtension(PFNGLDISABLEIPROC, glDisablei); \
  HookExtensionAlias(PFNGLDISABLEIPROC, glDisablei, glDisableiEXT); \
  HookExtensionAlias(PFNGLDISABLEIPROC, glDisablei, glDisableIndexedEXT); \
  HookExtensionAlias(PFNGLDISABLEIPROC, glDisablei, glDisableiOES); \
  HookExtensionAlias(PFNGLDISABLEIPROC, glDisablei, glDisableiNV); \
  HookExtension(PFNGLISENABLEDIPROC, glIsEnabledi); \
  HookExtensionAlias(PFNGLISENABLEDIPROC, glIsEnabledi, glIsEnablediEXT); \
  HookExtensionAlias(PFNGLISENABLEDIPROC, glIsEnabledi, glIsEnabledIndexedEXT); \
  HookExtensionAlias(PFNGLISENABLEDIPROC, glIsEnabledi, glIsEnablediOES); \
  HookExtensionAlias(PFNGLISENABLEDIPROC, glIsEnabledi, glIsEnablediNV); \
  HookExtension(PFNGLBEGINTRANSFORMFEEDBACKPROC, glBeginTransformFeedback); \
  HookExtensionAlias(PFNGLBEGINTRANSFORMFEEDBACKPROC, glBeginTransformFeedback, glBeginTransformFeedbackEXT); \
  HookExtension(PFNGLENDTRANSFORMFEEDBACKPROC, glEndTransformFeedback); \
  HookExtensionAlias(PFNGLENDTRANSFORMFEEDBACKPROC, glEndTransformFeedback, glEndTransformFeedbackEXT); \
  HookExtension(PFNGLBINDBUFFERRANGEPROC, glBindBufferRange); \
  HookExtensionAlias(PFNGLBINDBUFFERRANGEPROC, glBindBufferRange, glBindBufferRangeEXT); \
  HookExtension(PFNGLBINDBUFFERBASEPROC, glBindBufferBase); \
  HookExtensionAlias(PFNGLBINDBUFFERBASEPROC, glBindBufferBase, glBindBufferBaseEXT); \
  HookExtension(PFNGLTRANSFORMFEEDBACKVARYINGSPROC, glTransformFeedbackVaryings); \
  HookExtensionAlias(PFNGLTRANSFORMFEEDBACKVARYINGSPROC, glTransformFeedbackVaryings, glTransformFeedbackVaryingsEXT); \
  HookExtension(PFNGLGETTRANSFORMFEEDBACKVARYINGPROC, glGetTransformFeedbackVarying); \
  HookExtensionAlias(PFNGLGETTRANSFORMFEEDBACKVARYINGPROC, glGetTransformFeedbackVarying, glGetTransformFeedbackVaryingEXT); \
  HookExtension(PFNGLCLAMPCOLORPROC, glClampColor); \
  HookExtensionAlias(PFNGLCLAMPCOLORPROC, glClampColor, glClampColorARB); \
  HookExtension(PFNGLBEGINCONDITIONALRENDERPROC, glBeginConditionalRender); \
  HookExtension(PFNGLENDCONDITIONALRENDERPROC, glEndConditionalRender); \
  HookExtension(PFNGLVERTEXATTRIBIPOINTERPROC, glVertexAttribIPointer); \
  HookExtensionAlias(PFNGLVERTEXATTRIBIPOINTERPROC, glVertexAttribIPointer, glVertexAttribIPointerEXT); \
  HookExtension(PFNGLGETVERTEXATTRIBIIVPROC, glGetVertexAttribIiv); \
  HookExtensionAlias(PFNGLGETVERTEXATTRIBIIVPROC, glGetVertexAttribIiv, glGetVertexAttribIivEXT); \
  HookExtension(PFNGLGETVERTEXATTRIBIUIVPROC, glGetVertexAttribIuiv); \
  HookExtensionAlias(PFNGLGETVERTEXATTRIBIUIVPROC, glGetVertexAttribIuiv, glGetVertexAttribIuivEXT); \
  HookExtension(PFNGLVERTEXATTRIBI1IPROC, glVertexAttribI1i); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI1IPROC, glVertexAttribI1i, glVertexAttribI1iEXT); \
  HookExtension(PFNGLVERTEXATTRIBI2IPROC, glVertexAttribI2i); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI2IPROC, glVertexAttribI2i, glVertexAttribI2iEXT); \
  HookExtension(PFNGLVERTEXATTRIBI3IPROC, glVertexAttribI3i); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI3IPROC, glVertexAttribI3i, glVertexAttribI3iEXT); \
  HookExtension(PFNGLVERTEXATTRIBI4IPROC, glVertexAttribI4i); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI4IPROC, glVertexAttribI4i, glVertexAttribI4iEXT); \
  HookExtension(PFNGLVERTEXATTRIBI1UIPROC, glVertexAttribI1ui); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI1UIPROC, glVertexAttribI1ui, glVertexAttribI1uiEXT); \
  HookExtension(PFNGLVERTEXATTRIBI2UIPROC, glVertexAttribI2ui); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI2UIPROC, glVertexAttribI2ui, glVertexAttribI2uiEXT); \
  HookExtension(PFNGLVERTEXATTRIBI3UIPROC, glVertexAttribI3ui); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI3UIPROC, glVertexAttribI3ui, glVertexAttribI3uiEXT); \
  HookExtension(PFNGLVERTEXATTRIBI4UIPROC, glVertexAttribI4ui); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI4UIPROC, glVertexAttribI4ui, glVertexAttribI4uiEXT); \
  HookExtension(PFNGLVERTEXATTRIBI1IVPROC, glVertexAttribI1iv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI1IVPROC, glVertexAttribI1iv, glVertexAttribI1ivEXT); \
  HookExtension(PFNGLVERTEXATTRIBI2IVPROC, glVertexAttribI2iv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI2IVPROC, glVertexAttribI2iv, glVertexAttribI2ivEXT); \
  HookExtension(PFNGLVERTEXATTRIBI3IVPROC, glVertexAttribI3iv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI3IVPROC, glVertexAttribI3iv, glVertexAttribI3ivEXT); \
  HookExtension(PFNGLVERTEXATTRIBI4IVPROC, glVertexAttribI4iv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI4IVPROC, glVertexAttribI4iv, glVertexAttribI4ivEXT); \
  HookExtension(PFNGLVERTEXATTRIBI1UIVPROC, glVertexAttribI1uiv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI1UIVPROC, glVertexAttribI1uiv, glVertexAttribI1uivEXT); \
  HookExtension(PFNGLVERTEXATTRIBI2UIVPROC, glVertexAttribI2uiv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI2UIVPROC, glVertexAttribI2uiv, glVertexAttribI2uivEXT); \
  HookExtension(PFNGLVERTEXATTRIBI3UIVPROC, glVertexAttribI3uiv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI3UIVPROC, glVertexAttribI3uiv, glVertexAttribI3uivEXT); \
  HookExtension(PFNGLVERTEXATTRIBI4UIVPROC, glVertexAttribI4uiv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI4UIVPROC, glVertexAttribI4uiv, glVertexAttribI4uivEXT); \
  HookExtension(PFNGLVERTEXATTRIBI4BVPROC, glVertexAttribI4bv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI4BVPROC, glVertexAttribI4bv, glVertexAttribI4bvEXT); \
  HookExtension(PFNGLVERTEXATTRIBI4SVPROC, glVertexAttribI4sv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI4SVPROC, glVertexAttribI4sv, glVertexAttribI4svEXT); \
  HookExtension(PFNGLVERTEXATTRIBI4UBVPROC, glVertexAttribI4ubv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI4UBVPROC, glVertexAttribI4ubv, glVertexAttribI4ubvEXT); \
  HookExtension(PFNGLVERTEXATTRIBI4USVPROC, glVertexAttribI4usv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBI4USVPROC, glVertexAttribI4usv, glVertexAttribI4usvEXT); \
  HookExtension(PFNGLGETUNIFORMUIVPROC, glGetUniformuiv); \
  HookExtensionAlias(PFNGLGETUNIFORMUIVPROC, glGetUniformuiv, glGetUniformuivEXT); \
  HookExtension(PFNGLBINDFRAGDATALOCATIONPROC, glBindFragDataLocation); \
  HookExtensionAlias(PFNGLBINDFRAGDATALOCATIONPROC, glBindFragDataLocation, glBindFragDataLocationEXT); \
  HookExtension(PFNGLGETFRAGDATALOCATIONPROC, glGetFragDataLocation); \
  HookExtensionAlias(PFNGLGETFRAGDATALOCATIONPROC, glGetFragDataLocation, glGetFragDataLocationEXT); \
  HookExtension(PFNGLUNIFORM1UIPROC, glUniform1ui); \
  HookExtensionAlias(PFNGLUNIFORM1UIPROC, glUniform1ui, glUniform1uiEXT); \
  HookExtension(PFNGLUNIFORM2UIPROC, glUniform2ui); \
  HookExtensionAlias(PFNGLUNIFORM2UIPROC, glUniform2ui, glUniform2uiEXT); \
  HookExtension(PFNGLUNIFORM3UIPROC, glUniform3ui); \
  HookExtensionAlias(PFNGLUNIFORM3UIPROC, glUniform3ui, glUniform3uiEXT); \
  HookExtension(PFNGLUNIFORM4UIPROC, glUniform4ui); \
  HookExtensionAlias(PFNGLUNIFORM4UIPROC, glUniform4ui, glUniform4uiEXT); \
  HookExtension(PFNGLUNIFORM1UIVPROC, glUniform1uiv); \
  HookExtensionAlias(PFNGLUNIFORM1UIVPROC, glUniform1uiv, glUniform1uivEXT); \
  HookExtension(PFNGLUNIFORM2UIVPROC, glUniform2uiv); \
  HookExtensionAlias(PFNGLUNIFORM2UIVPROC, glUniform2uiv, glUniform2uivEXT); \
  HookExtension(PFNGLUNIFORM3UIVPROC, glUniform3uiv); \
  HookExtensionAlias(PFNGLUNIFORM3UIVPROC, glUniform3uiv, glUniform3uivEXT); \
  HookExtension(PFNGLUNIFORM4UIVPROC, glUniform4uiv); \
  HookExtensionAlias(PFNGLUNIFORM4UIVPROC, glUniform4uiv, glUniform4uivEXT); \
  HookExtension(PFNGLTEXPARAMETERIIVPROC, glTexParameterIiv); \
  HookExtensionAlias(PFNGLTEXPARAMETERIIVPROC, glTexParameterIiv, glTexParameterIivEXT); \
  HookExtensionAlias(PFNGLTEXPARAMETERIIVPROC, glTexParameterIiv, glTexParameterIivOES); \
  HookExtension(PFNGLTEXPARAMETERIUIVPROC, glTexParameterIuiv); \
  HookExtensionAlias(PFNGLTEXPARAMETERIUIVPROC, glTexParameterIuiv, glTexParameterIuivEXT); \
  HookExtensionAlias(PFNGLTEXPARAMETERIUIVPROC, glTexParameterIuiv, glTexParameterIuivOES); \
  HookExtension(PFNGLGETTEXPARAMETERIIVPROC, glGetTexParameterIiv); \
  HookExtensionAlias(PFNGLGETTEXPARAMETERIIVPROC, glGetTexParameterIiv, glGetTexParameterIivEXT); \
  HookExtensionAlias(PFNGLGETTEXPARAMETERIIVPROC, glGetTexParameterIiv, glGetTexParameterIivOES); \
  HookExtension(PFNGLGETTEXPARAMETERIUIVPROC, glGetTexParameterIuiv); \
  HookExtensionAlias(PFNGLGETTEXPARAMETERIUIVPROC, glGetTexParameterIuiv, glGetTexParameterIuivEXT); \
  HookExtensionAlias(PFNGLGETTEXPARAMETERIUIVPROC, glGetTexParameterIuiv, glGetTexParameterIuivOES); \
  HookExtension(PFNGLCLEARBUFFERIVPROC, glClearBufferiv); \
  HookExtension(PFNGLCLEARBUFFERUIVPROC, glClearBufferuiv); \
  HookExtension(PFNGLCLEARBUFFERFVPROC, glClearBufferfv); \
  HookExtension(PFNGLCLEARBUFFERFIPROC, glClearBufferfi); \
  HookExtension(PFNGLGETSTRINGIPROC, glGetStringi); \
  HookExtension(PFNGLISRENDERBUFFERPROC, glIsRenderbuffer); \
  HookExtensionAlias(PFNGLISRENDERBUFFERPROC, glIsRenderbuffer, glIsRenderbufferEXT); \
  HookExtension(PFNGLBINDRENDERBUFFERPROC, glBindRenderbuffer); \
  HookExtensionAlias(PFNGLBINDRENDERBUFFERPROC, glBindRenderbuffer, glBindRenderbufferEXT); \
  HookExtension(PFNGLDELETERENDERBUFFERSPROC, glDeleteRenderbuffers); \
  HookExtensionAlias(PFNGLDELETERENDERBUFFERSPROC, glDeleteRenderbuffers, glDeleteRenderbuffersEXT); \
  HookExtension(PFNGLGENRENDERBUFFERSPROC, glGenRenderbuffers); \
  HookExtensionAlias(PFNGLGENRENDERBUFFERSPROC, glGenRenderbuffers, glGenRenderbuffersEXT); \
  HookExtension(PFNGLRENDERBUFFERSTORAGEPROC, glRenderbufferStorage); \
  HookExtensionAlias(PFNGLRENDERBUFFERSTORAGEPROC, glRenderbufferStorage, glRenderbufferStorageEXT); \
  HookExtension(PFNGLGETRENDERBUFFERPARAMETERIVPROC, glGetRenderbufferParameteriv); \
  HookExtensionAlias(PFNGLGETRENDERBUFFERPARAMETERIVPROC, glGetRenderbufferParameteriv, glGetRenderbufferParameterivEXT); \
  HookExtension(PFNGLISFRAMEBUFFERPROC, glIsFramebuffer); \
  HookExtensionAlias(PFNGLISFRAMEBUFFERPROC, glIsFramebuffer, glIsFramebufferEXT); \
  HookExtension(PFNGLBINDFRAMEBUFFERPROC, glBindFramebuffer); \
  HookExtensionAlias(PFNGLBINDFRAMEBUFFERPROC, glBindFramebuffer, glBindFramebufferEXT); \
  HookExtension(PFNGLDELETEFRAMEBUFFERSPROC, glDeleteFramebuffers); \
  HookExtensionAlias(PFNGLDELETEFRAMEBUFFERSPROC, glDeleteFramebuffers, glDeleteFramebuffersEXT); \
  HookExtension(PFNGLGENFRAMEBUFFERSPROC, glGenFramebuffers); \
  HookExtensionAlias(PFNGLGENFRAMEBUFFERSPROC, glGenFramebuffers, glGenFramebuffersEXT); \
  HookExtension(PFNGLCHECKFRAMEBUFFERSTATUSPROC, glCheckFramebufferStatus); \
  HookExtensionAlias(PFNGLCHECKFRAMEBUFFERSTATUSPROC, glCheckFramebufferStatus, glCheckFramebufferStatusEXT); \
  HookExtension(PFNGLFRAMEBUFFERTEXTURE1DPROC, glFramebufferTexture1D); \
  HookExtensionAlias(PFNGLFRAMEBUFFERTEXTURE1DPROC, glFramebufferTexture1D, glFramebufferTexture1DEXT); \
  HookExtension(PFNGLFRAMEBUFFERTEXTURE2DPROC, glFramebufferTexture2D); \
  HookExtensionAlias(PFNGLFRAMEBUFFERTEXTURE2DPROC, glFramebufferTexture2D, glFramebufferTexture2DEXT); \
  HookExtension(PFNGLFRAMEBUFFERTEXTURE3DPROC, glFramebufferTexture3D); \
  HookExtensionAlias(PFNGLFRAMEBUFFERTEXTURE3DPROC, glFramebufferTexture3D, glFramebufferTexture3DEXT); \
  HookExtensionAlias(PFNGLFRAMEBUFFERTEXTURE3DPROC, glFramebufferTexture3D, glFramebufferTexture3DOES); \
  HookExtension(PFNGLFRAMEBUFFERRENDERBUFFERPROC, glFramebufferRenderbuffer); \
  HookExtensionAlias(PFNGLFRAMEBUFFERRENDERBUFFERPROC, glFramebufferRenderbuffer, glFramebufferRenderbufferEXT); \
  HookExtension(PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC, glGetFramebufferAttachmentParameteriv); \
  HookExtensionAlias(PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC, glGetFramebufferAttachmentParameteriv, glGetFramebufferAttachmentParameterivEXT); \
  HookExtension(PFNGLGENERATEMIPMAPPROC, glGenerateMipmap); \
  HookExtensionAlias(PFNGLGENERATEMIPMAPPROC, glGenerateMipmap, glGenerateMipmapEXT); \
  HookExtension(PFNGLBLITFRAMEBUFFERPROC, glBlitFramebuffer); \
  HookExtensionAlias(PFNGLBLITFRAMEBUFFERPROC, glBlitFramebuffer, glBlitFramebufferEXT); \
  HookExtension(PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC, glRenderbufferStorageMultisample); \
  HookExtensionAlias(PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC, glRenderbufferStorageMultisample, glRenderbufferStorageMultisampleEXT); \
  HookExtension(PFNGLFRAMEBUFFERTEXTURELAYERPROC, glFramebufferTextureLayer); \
  HookExtensionAlias(PFNGLFRAMEBUFFERTEXTURELAYERPROC, glFramebufferTextureLayer, glFramebufferTextureLayerARB); \
  HookExtensionAlias(PFNGLFRAMEBUFFERTEXTURELAYERPROC, glFramebufferTextureLayer, glFramebufferTextureLayerEXT); \
  HookExtension(PFNGLMAPBUFFERRANGEPROC, glMapBufferRange); \
  HookExtension(PFNGLFLUSHMAPPEDBUFFERRANGEPROC, glFlushMappedBufferRange); \
  HookExtension(PFNGLBINDVERTEXARRAYPROC, glBindVertexArray); \
  HookExtensionAlias(PFNGLBINDVERTEXARRAYPROC, glBindVertexArray, glBindVertexArrayOES); \
  HookExtension(PFNGLDELETEVERTEXARRAYSPROC, glDeleteVertexArrays); \
  HookExtensionAlias(PFNGLDELETEVERTEXARRAYSPROC, glDeleteVertexArrays, glDeleteVertexArraysOES); \
  HookExtension(PFNGLGENVERTEXARRAYSPROC, glGenVertexArrays); \
  HookExtensionAlias(PFNGLGENVERTEXARRAYSPROC, glGenVertexArrays, glGenVertexArraysOES); \
  HookExtension(PFNGLISVERTEXARRAYPROC, glIsVertexArray); \
  HookExtensionAlias(PFNGLISVERTEXARRAYPROC, glIsVertexArray, glIsVertexArrayOES); \
  HookExtension(PFNGLDRAWARRAYSINSTANCEDPROC, glDrawArraysInstanced); \
  HookExtensionAlias(PFNGLDRAWARRAYSINSTANCEDPROC, glDrawArraysInstanced, glDrawArraysInstancedARB); \
  HookExtensionAlias(PFNGLDRAWARRAYSINSTANCEDPROC, glDrawArraysInstanced, glDrawArraysInstancedEXT); \
  HookExtension(PFNGLDRAWELEMENTSINSTANCEDPROC, glDrawElementsInstanced); \
  HookExtensionAlias(PFNGLDRAWELEMENTSINSTANCEDPROC, glDrawElementsInstanced, glDrawElementsInstancedARB); \
  HookExtensionAlias(PFNGLDRAWELEMENTSINSTANCEDPROC, glDrawElementsInstanced, glDrawElementsInstancedEXT); \
  HookExtension(PFNGLTEXBUFFERPROC, glTexBuffer); \
  HookExtensionAlias(PFNGLTEXBUFFERPROC, glTexBuffer, glTexBufferARB); \
  HookExtensionAlias(PFNGLTEXBUFFERPROC, glTexBuffer, glTexBufferEXT); \
  HookExtensionAlias(PFNGLTEXBUFFERPROC, glTexBuffer, glTexBufferOES); \
  HookExtension(PFNGLPRIMITIVERESTARTINDEXPROC, glPrimitiveRestartIndex); \
  HookExtension(PFNGLCOPYBUFFERSUBDATAPROC, glCopyBufferSubData); \
  HookExtension(PFNGLGETUNIFORMINDICESPROC, glGetUniformIndices); \
  HookExtension(PFNGLGETACTIVEUNIFORMSIVPROC, glGetActiveUniformsiv); \
  HookExtension(PFNGLGETACTIVEUNIFORMNAMEPROC, glGetActiveUniformName); \
  HookExtension(PFNGLGETUNIFORMBLOCKINDEXPROC, glGetUniformBlockIndex); \
  HookExtension(PFNGLGETACTIVEUNIFORMBLOCKIVPROC, glGetActiveUniformBlockiv); \
  HookExtension(PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC, glGetActiveUniformBlockName); \
  HookExtension(PFNGLUNIFORMBLOCKBINDINGPROC, glUniformBlockBinding); \
  HookExtension(PFNGLDRAWELEMENTSBASEVERTEXPROC, glDrawElementsBaseVertex); \
  HookExtensionAlias(PFNGLDRAWELEMENTSBASEVERTEXPROC, glDrawElementsBaseVertex, glDrawElementsBaseVertexEXT); \
  HookExtensionAlias(PFNGLDRAWELEMENTSBASEVERTEXPROC, glDrawElementsBaseVertex, glDrawElementsBaseVertexOES); \
  HookExtension(PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC, glDrawRangeElementsBaseVertex); \
  HookExtensionAlias(PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC, glDrawRangeElementsBaseVertex, glDrawRangeElementsBaseVertexEXT); \
  HookExtensionAlias(PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC, glDrawRangeElementsBaseVertex, glDrawRangeElementsBaseVertexOES); \
  HookExtension(PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC, glDrawElementsInstancedBaseVertex); \
  HookExtensionAlias(PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC, glDrawElementsInstancedBaseVertex, glDrawElementsInstancedBaseVertexEXT); \
  HookExtensionAlias(PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC, glDrawElementsInstancedBaseVertex, glDrawElementsInstancedBaseVertexOES); \
  HookExtension(PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC, glMultiDrawElementsBaseVertex); \
  HookExtensionAlias(PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC, glMultiDrawElementsBaseVertex, glMultiDrawElementsBaseVertexEXT); \
  HookExtensionAlias(PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC, glMultiDrawElementsBaseVertex, glMultiDrawElementsBaseVertexOES); \
  HookExtension(PFNGLPROVOKINGVERTEXPROC, glProvokingVertex); \
  HookExtensionAlias(PFNGLPROVOKINGVERTEXPROC, glProvokingVertex, glProvokingVertexEXT); \
  HookExtension(PFNGLFENCESYNCPROC, glFenceSync); \
  HookExtension(PFNGLISSYNCPROC, glIsSync); \
  HookExtension(PFNGLDELETESYNCPROC, glDeleteSync); \
  HookExtension(PFNGLCLIENTWAITSYNCPROC, glClientWaitSync); \
  HookExtension(PFNGLWAITSYNCPROC, glWaitSync); \
  HookExtension(PFNGLGETINTEGER64VPROC, glGetInteger64v); \
  HookExtension(PFNGLGETSYNCIVPROC, glGetSynciv); \
  HookExtension(PFNGLGETINTEGER64I_VPROC, glGetInteger64i_v); \
  HookExtension(PFNGLGETBUFFERPARAMETERI64VPROC, glGetBufferParameteri64v); \
  HookExtension(PFNGLFRAMEBUFFERTEXTUREPROC, glFramebufferTexture); \
  HookExtensionAlias(PFNGLFRAMEBUFFERTEXTUREPROC, glFramebufferTexture, glFramebufferTextureARB); \
  HookExtensionAlias(PFNGLFRAMEBUFFERTEXTUREPROC, glFramebufferTexture, glFramebufferTextureOES); \
  HookExtensionAlias(PFNGLFRAMEBUFFERTEXTUREPROC, glFramebufferTexture, glFramebufferTextureEXT); \
  HookExtension(PFNGLTEXIMAGE2DMULTISAMPLEPROC, glTexImage2DMultisample); \
  HookExtension(PFNGLTEXIMAGE3DMULTISAMPLEPROC, glTexImage3DMultisample); \
  HookExtension(PFNGLGETMULTISAMPLEFVPROC, glGetMultisamplefv); \
  HookExtension(PFNGLSAMPLEMASKIPROC, glSampleMaski); \
  HookExtension(PFNGLBINDFRAGDATALOCATIONINDEXEDPROC, glBindFragDataLocationIndexed); \
  HookExtension(PFNGLGETFRAGDATAINDEXPROC, glGetFragDataIndex); \
  HookExtension(PFNGLGENSAMPLERSPROC, glGenSamplers); \
  HookExtension(PFNGLDELETESAMPLERSPROC, glDeleteSamplers); \
  HookExtension(PFNGLISSAMPLERPROC, glIsSampler); \
  HookExtension(PFNGLBINDSAMPLERPROC, glBindSampler); \
  HookExtension(PFNGLSAMPLERPARAMETERIPROC, glSamplerParameteri); \
  HookExtension(PFNGLSAMPLERPARAMETERIVPROC, glSamplerParameteriv); \
  HookExtension(PFNGLSAMPLERPARAMETERFPROC, glSamplerParameterf); \
  HookExtension(PFNGLSAMPLERPARAMETERFVPROC, glSamplerParameterfv); \
  HookExtension(PFNGLSAMPLERPARAMETERIIVPROC, glSamplerParameterIiv); \
  HookExtensionAlias(PFNGLSAMPLERPARAMETERIIVPROC, glSamplerParameterIiv, glSamplerParameterIivEXT); \
  HookExtensionAlias(PFNGLSAMPLERPARAMETERIIVPROC, glSamplerParameterIiv, glSamplerParameterIivOES); \
  HookExtension(PFNGLSAMPLERPARAMETERIUIVPROC, glSamplerParameterIuiv); \
  HookExtensionAlias(PFNGLSAMPLERPARAMETERIUIVPROC, glSamplerParameterIuiv, glSamplerParameterIuivEXT); \
  HookExtensionAlias(PFNGLSAMPLERPARAMETERIUIVPROC, glSamplerParameterIuiv, glSamplerParameterIuivOES); \
  HookExtension(PFNGLGETSAMPLERPARAMETERIVPROC, glGetSamplerParameteriv); \
  HookExtension(PFNGLGETSAMPLERPARAMETERIIVPROC, glGetSamplerParameterIiv); \
  HookExtensionAlias(PFNGLGETSAMPLERPARAMETERIIVPROC, glGetSamplerParameterIiv, glGetSamplerParameterIivEXT); \
  HookExtensionAlias(PFNGLGETSAMPLERPARAMETERIIVPROC, glGetSamplerParameterIiv, glGetSamplerParameterIivOES); \
  HookExtension(PFNGLGETSAMPLERPARAMETERFVPROC, glGetSamplerParameterfv); \
  HookExtension(PFNGLGETSAMPLERPARAMETERIUIVPROC, glGetSamplerParameterIuiv); \
  HookExtensionAlias(PFNGLGETSAMPLERPARAMETERIUIVPROC, glGetSamplerParameterIuiv, glGetSamplerParameterIuivEXT); \
  HookExtensionAlias(PFNGLGETSAMPLERPARAMETERIUIVPROC, glGetSamplerParameterIuiv, glGetSamplerParameterIuivOES); \
  HookExtension(PFNGLQUERYCOUNTERPROC, glQueryCounter); \
  HookExtensionAlias(PFNGLQUERYCOUNTERPROC, glQueryCounter, glQueryCounterEXT); \
  HookExtension(PFNGLGETQUERYOBJECTI64VPROC, glGetQueryObjecti64v); \
  HookExtensionAlias(PFNGLGETQUERYOBJECTI64VPROC, glGetQueryObjecti64v, glGetQueryObjecti64vEXT); \
  HookExtension(PFNGLGETQUERYOBJECTUI64VPROC, glGetQueryObjectui64v); \
  HookExtensionAlias(PFNGLGETQUERYOBJECTUI64VPROC, glGetQueryObjectui64v, glGetQueryObjectui64vEXT); \
  HookExtension(PFNGLVERTEXATTRIBDIVISORPROC, glVertexAttribDivisor); \
  HookExtensionAlias(PFNGLVERTEXATTRIBDIVISORPROC, glVertexAttribDivisor, glVertexAttribDivisorARB); \
  HookExtension(PFNGLVERTEXATTRIBP1UIPROC, glVertexAttribP1ui); \
  HookExtension(PFNGLVERTEXATTRIBP1UIVPROC, glVertexAttribP1uiv); \
  HookExtension(PFNGLVERTEXATTRIBP2UIPROC, glVertexAttribP2ui); \
  HookExtension(PFNGLVERTEXATTRIBP2UIVPROC, glVertexAttribP2uiv); \
  HookExtension(PFNGLVERTEXATTRIBP3UIPROC, glVertexAttribP3ui); \
  HookExtension(PFNGLVERTEXATTRIBP3UIVPROC, glVertexAttribP3uiv); \
  HookExtension(PFNGLVERTEXATTRIBP4UIPROC, glVertexAttribP4ui); \
  HookExtension(PFNGLVERTEXATTRIBP4UIVPROC, glVertexAttribP4uiv); \
  HookExtension(PFNGLMINSAMPLESHADINGPROC, glMinSampleShading); \
  HookExtensionAlias(PFNGLMINSAMPLESHADINGPROC, glMinSampleShading, glMinSampleShadingARB); \
  HookExtensionAlias(PFNGLMINSAMPLESHADINGPROC, glMinSampleShading, glMinSampleShadingOES); \
  HookExtension(PFNGLBLENDEQUATIONIPROC, glBlendEquationi); \
  HookExtensionAlias(PFNGLBLENDEQUATIONIPROC, glBlendEquationi, glBlendEquationiARB); \
  HookExtensionAlias(PFNGLBLENDEQUATIONIPROC, glBlendEquationi, glBlendEquationiEXT); \
  HookExtensionAlias(PFNGLBLENDEQUATIONIPROC, glBlendEquationi, glBlendEquationiOES); \
  HookExtension(PFNGLBLENDEQUATIONSEPARATEIPROC, glBlendEquationSeparatei); \
  HookExtensionAlias(PFNGLBLENDEQUATIONSEPARATEIPROC, glBlendEquationSeparatei, glBlendEquationSeparateiARB); \
  HookExtensionAlias(PFNGLBLENDEQUATIONSEPARATEIPROC, glBlendEquationSeparatei, glBlendEquationSeparateiEXT); \
  HookExtensionAlias(PFNGLBLENDEQUATIONSEPARATEIPROC, glBlendEquationSeparatei, glBlendEquationSeparateiOES); \
  HookExtension(PFNGLBLENDFUNCIPROC, glBlendFunci); \
  HookExtensionAlias(PFNGLBLENDFUNCIPROC, glBlendFunci, glBlendFunciARB); \
  HookExtensionAlias(PFNGLBLENDFUNCIPROC, glBlendFunci, glBlendFunciEXT); \
  HookExtensionAlias(PFNGLBLENDFUNCIPROC, glBlendFunci, glBlendFunciOES); \
  HookExtension(PFNGLBLENDFUNCSEPARATEIPROC, glBlendFuncSeparatei); \
  HookExtensionAlias(PFNGLBLENDFUNCSEPARATEIPROC, glBlendFuncSeparatei, glBlendFuncSeparateiARB); \
  HookExtensionAlias(PFNGLBLENDFUNCSEPARATEIPROC, glBlendFuncSeparatei, glBlendFuncSeparateiEXT); \
  HookExtensionAlias(PFNGLBLENDFUNCSEPARATEIPROC, glBlendFuncSeparatei, glBlendFuncSeparateiOES); \
  HookExtension(PFNGLDRAWARRAYSINDIRECTPROC, glDrawArraysIndirect); \
  HookExtension(PFNGLDRAWELEMENTSINDIRECTPROC, glDrawElementsIndirect); \
  HookExtension(PFNGLUNIFORM1DPROC, glUniform1d); \
  HookExtension(PFNGLUNIFORM2DPROC, glUniform2d); \
  HookExtension(PFNGLUNIFORM3DPROC, glUniform3d); \
  HookExtension(PFNGLUNIFORM4DPROC, glUniform4d); \
  HookExtension(PFNGLUNIFORM1DVPROC, glUniform1dv); \
  HookExtension(PFNGLUNIFORM2DVPROC, glUniform2dv); \
  HookExtension(PFNGLUNIFORM3DVPROC, glUniform3dv); \
  HookExtension(PFNGLUNIFORM4DVPROC, glUniform4dv); \
  HookExtension(PFNGLUNIFORMMATRIX2DVPROC, glUniformMatrix2dv); \
  HookExtension(PFNGLUNIFORMMATRIX3DVPROC, glUniformMatrix3dv); \
  HookExtension(PFNGLUNIFORMMATRIX4DVPROC, glUniformMatrix4dv); \
  HookExtension(PFNGLUNIFORMMATRIX2X3DVPROC, glUniformMatrix2x3dv); \
  HookExtension(PFNGLUNIFORMMATRIX2X4DVPROC, glUniformMatrix2x4dv); \
  HookExtension(PFNGLUNIFORMMATRIX3X2DVPROC, glUniformMatrix3x2dv); \
  HookExtension(PFNGLUNIFORMMATRIX3X4DVPROC, glUniformMatrix3x4dv); \
  HookExtension(PFNGLUNIFORMMATRIX4X2DVPROC, glUniformMatrix4x2dv); \
  HookExtension(PFNGLUNIFORMMATRIX4X3DVPROC, glUniformMatrix4x3dv); \
  HookExtension(PFNGLGETUNIFORMDVPROC, glGetUniformdv); \
  HookExtension(PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC, glGetSubroutineUniformLocation); \
  HookExtension(PFNGLGETSUBROUTINEINDEXPROC, glGetSubroutineIndex); \
  HookExtension(PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC, glGetActiveSubroutineUniformiv); \
  HookExtension(PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC, glGetActiveSubroutineUniformName); \
  HookExtension(PFNGLGETACTIVESUBROUTINENAMEPROC, glGetActiveSubroutineName); \
  HookExtension(PFNGLUNIFORMSUBROUTINESUIVPROC, glUniformSubroutinesuiv); \
  HookExtension(PFNGLGETUNIFORMSUBROUTINEUIVPROC, glGetUniformSubroutineuiv); \
  HookExtension(PFNGLGETPROGRAMSTAGEIVPROC, glGetProgramStageiv); \
  HookExtension(PFNGLPATCHPARAMETERIPROC, glPatchParameteri); \
  HookExtensionAlias(PFNGLPATCHPARAMETERIPROC, glPatchParameteri, glPatchParameteriEXT); \
  HookExtensionAlias(PFNGLPATCHPARAMETERIPROC, glPatchParameteri, glPatchParameteriOES); \
  HookExtension(PFNGLPATCHPARAMETERFVPROC, glPatchParameterfv); \
  HookExtension(PFNGLBINDTRANSFORMFEEDBACKPROC, glBindTransformFeedback); \
  HookExtension(PFNGLDELETETRANSFORMFEEDBACKSPROC, glDeleteTransformFeedbacks); \
  HookExtension(PFNGLGENTRANSFORMFEEDBACKSPROC, glGenTransformFeedbacks); \
  HookExtension(PFNGLISTRANSFORMFEEDBACKPROC, glIsTransformFeedback); \
  HookExtension(PFNGLPAUSETRANSFORMFEEDBACKPROC, glPauseTransformFeedback); \
  HookExtension(PFNGLRESUMETRANSFORMFEEDBACKPROC, glResumeTransformFeedback); \
  HookExtension(PFNGLDRAWTRANSFORMFEEDBACKPROC, glDrawTransformFeedback); \
  HookExtension(PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC, glDrawTransformFeedbackStream); \
  HookExtension(PFNGLBEGINQUERYINDEXEDPROC, glBeginQueryIndexed); \
  HookExtension(PFNGLENDQUERYINDEXEDPROC, glEndQueryIndexed); \
  HookExtension(PFNGLGETQUERYINDEXEDIVPROC, glGetQueryIndexediv); \
  HookExtension(PFNGLRELEASESHADERCOMPILERPROC, glReleaseShaderCompiler); \
  HookExtension(PFNGLSHADERBINARYPROC, glShaderBinary); \
  HookExtension(PFNGLGETSHADERPRECISIONFORMATPROC, glGetShaderPrecisionFormat); \
  HookExtension(PFNGLDEPTHRANGEFPROC, glDepthRangef); \
  HookExtension(PFNGLCLEARDEPTHFPROC, glClearDepthf); \
  HookExtension(PFNGLGETPROGRAMBINARYPROC, glGetProgramBinary); \
  HookExtension(PFNGLPROGRAMBINARYPROC, glProgramBinary); \
  HookExtension(PFNGLPROGRAMPARAMETERIPROC, glProgramParameteri); \
  HookExtensionAlias(PFNGLPROGRAMPARAMETERIPROC, glProgramParameteri, glProgramParameteriARB); \
  HookExtensionAlias(PFNGLPROGRAMPARAMETERIPROC, glProgramParameteri, glProgramParameteriEXT); \
  HookExtension(PFNGLUSEPROGRAMSTAGESPROC, glUseProgramStages); \
  HookExtensionAlias(PFNGLUSEPROGRAMSTAGESPROC, glUseProgramStages, glUseProgramStagesEXT); \
  HookExtension(PFNGLACTIVESHADERPROGRAMPROC, glActiveShaderProgram); \
  HookExtensionAlias(PFNGLACTIVESHADERPROGRAMPROC, glActiveShaderProgram, glActiveShaderProgramEXT); \
  HookExtension(PFNGLCREATESHADERPROGRAMVPROC, glCreateShaderProgramv); \
  HookExtensionAlias(PFNGLCREATESHADERPROGRAMVPROC, glCreateShaderProgramv, glCreateShaderProgramvEXT); \
  HookExtension(PFNGLBINDPROGRAMPIPELINEPROC, glBindProgramPipeline); \
  HookExtensionAlias(PFNGLBINDPROGRAMPIPELINEPROC, glBindProgramPipeline, glBindProgramPipelineEXT); \
  HookExtension(PFNGLDELETEPROGRAMPIPELINESPROC, glDeleteProgramPipelines); \
  HookExtensionAlias(PFNGLDELETEPROGRAMPIPELINESPROC, glDeleteProgramPipelines, glDeleteProgramPipelinesEXT); \
  HookExtension(PFNGLGENPROGRAMPIPELINESPROC, glGenProgramPipelines); \
  HookExtensionAlias(PFNGLGENPROGRAMPIPELINESPROC, glGenProgramPipelines, glGenProgramPipelinesEXT); \
  HookExtension(PFNGLISPROGRAMPIPELINEPROC, glIsProgramPipeline); \
  HookExtensionAlias(PFNGLISPROGRAMPIPELINEPROC, glIsProgramPipeline, glIsProgramPipelineEXT); \
  HookExtension(PFNGLGETPROGRAMPIPELINEIVPROC, glGetProgramPipelineiv); \
  HookExtensionAlias(PFNGLGETPROGRAMPIPELINEIVPROC, glGetProgramPipelineiv, glGetProgramPipelineivEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM1IPROC, glProgramUniform1i); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM1IPROC, glProgramUniform1i, glProgramUniform1iEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM1IVPROC, glProgramUniform1iv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM1IVPROC, glProgramUniform1iv, glProgramUniform1ivEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM1FPROC, glProgramUniform1f); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM1FPROC, glProgramUniform1f, glProgramUniform1fEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM1FVPROC, glProgramUniform1fv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM1FVPROC, glProgramUniform1fv, glProgramUniform1fvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM1DPROC, glProgramUniform1d); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM1DPROC, glProgramUniform1d, glProgramUniform1dEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM1DVPROC, glProgramUniform1dv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM1DVPROC, glProgramUniform1dv, glProgramUniform1dvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM1UIPROC, glProgramUniform1ui); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM1UIPROC, glProgramUniform1ui, glProgramUniform1uiEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM1UIVPROC, glProgramUniform1uiv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM1UIVPROC, glProgramUniform1uiv, glProgramUniform1uivEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM2IPROC, glProgramUniform2i); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM2IPROC, glProgramUniform2i, glProgramUniform2iEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM2IVPROC, glProgramUniform2iv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM2IVPROC, glProgramUniform2iv, glProgramUniform2ivEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM2FPROC, glProgramUniform2f); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM2FPROC, glProgramUniform2f, glProgramUniform2fEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM2FVPROC, glProgramUniform2fv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM2FVPROC, glProgramUniform2fv, glProgramUniform2fvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM2DPROC, glProgramUniform2d); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM2DPROC, glProgramUniform2d, glProgramUniform2dEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM2DVPROC, glProgramUniform2dv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM2DVPROC, glProgramUniform2dv, glProgramUniform2dvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM2UIPROC, glProgramUniform2ui); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM2UIPROC, glProgramUniform2ui, glProgramUniform2uiEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM2UIVPROC, glProgramUniform2uiv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM2UIVPROC, glProgramUniform2uiv, glProgramUniform2uivEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM3IPROC, glProgramUniform3i); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM3IPROC, glProgramUniform3i, glProgramUniform3iEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM3IVPROC, glProgramUniform3iv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM3IVPROC, glProgramUniform3iv, glProgramUniform3ivEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM3FPROC, glProgramUniform3f); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM3FPROC, glProgramUniform3f, glProgramUniform3fEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM3FVPROC, glProgramUniform3fv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM3FVPROC, glProgramUniform3fv, glProgramUniform3fvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM3DPROC, glProgramUniform3d); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM3DPROC, glProgramUniform3d, glProgramUniform3dEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM3DVPROC, glProgramUniform3dv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM3DVPROC, glProgramUniform3dv, glProgramUniform3dvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM3UIPROC, glProgramUniform3ui); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM3UIPROC, glProgramUniform3ui, glProgramUniform3uiEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM3UIVPROC, glProgramUniform3uiv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM3UIVPROC, glProgramUniform3uiv, glProgramUniform3uivEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM4IPROC, glProgramUniform4i); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM4IPROC, glProgramUniform4i, glProgramUniform4iEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM4IVPROC, glProgramUniform4iv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM4IVPROC, glProgramUniform4iv, glProgramUniform4ivEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM4FPROC, glProgramUniform4f); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM4FPROC, glProgramUniform4f, glProgramUniform4fEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM4FVPROC, glProgramUniform4fv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM4FVPROC, glProgramUniform4fv, glProgramUniform4fvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM4DPROC, glProgramUniform4d); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM4DPROC, glProgramUniform4d, glProgramUniform4dEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM4DVPROC, glProgramUniform4dv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM4DVPROC, glProgramUniform4dv, glProgramUniform4dvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM4UIPROC, glProgramUniform4ui); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM4UIPROC, glProgramUniform4ui, glProgramUniform4uiEXT); \
  HookExtension(PFNGLPROGRAMUNIFORM4UIVPROC, glProgramUniform4uiv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORM4UIVPROC, glProgramUniform4uiv, glProgramUniform4uivEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX2FVPROC, glProgramUniformMatrix2fv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX2FVPROC, glProgramUniformMatrix2fv, glProgramUniformMatrix2fvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX3FVPROC, glProgramUniformMatrix3fv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX3FVPROC, glProgramUniformMatrix3fv, glProgramUniformMatrix3fvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX4FVPROC, glProgramUniformMatrix4fv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX4FVPROC, glProgramUniformMatrix4fv, glProgramUniformMatrix4fvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX2DVPROC, glProgramUniformMatrix2dv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX2DVPROC, glProgramUniformMatrix2dv, glProgramUniformMatrix2dvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX3DVPROC, glProgramUniformMatrix3dv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX3DVPROC, glProgramUniformMatrix3dv, glProgramUniformMatrix3dvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX4DVPROC, glProgramUniformMatrix4dv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX4DVPROC, glProgramUniformMatrix4dv, glProgramUniformMatrix4dvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC, glProgramUniformMatrix2x3fv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC, glProgramUniformMatrix2x3fv, glProgramUniformMatrix2x3fvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC, glProgramUniformMatrix3x2fv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC, glProgramUniformMatrix3x2fv, glProgramUniformMatrix3x2fvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC, glProgramUniformMatrix2x4fv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC, glProgramUniformMatrix2x4fv, glProgramUniformMatrix2x4fvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC, glProgramUniformMatrix4x2fv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC, glProgramUniformMatrix4x2fv, glProgramUniformMatrix4x2fvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC, glProgramUniformMatrix3x4fv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC, glProgramUniformMatrix3x4fv, glProgramUniformMatrix3x4fvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC, glProgramUniformMatrix4x3fv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC, glProgramUniformMatrix4x3fv, glProgramUniformMatrix4x3fvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC, glProgramUniformMatrix2x3dv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC, glProgramUniformMatrix2x3dv, glProgramUniformMatrix2x3dvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC, glProgramUniformMatrix3x2dv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC, glProgramUniformMatrix3x2dv, glProgramUniformMatrix3x2dvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC, glProgramUniformMatrix2x4dv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC, glProgramUniformMatrix2x4dv, glProgramUniformMatrix2x4dvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC, glProgramUniformMatrix4x2dv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC, glProgramUniformMatrix4x2dv, glProgramUniformMatrix4x2dvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC, glProgramUniformMatrix3x4dv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC, glProgramUniformMatrix3x4dv, glProgramUniformMatrix3x4dvEXT); \
  HookExtension(PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC, glProgramUniformMatrix4x3dv); \
  HookExtensionAlias(PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC, glProgramUniformMatrix4x3dv, glProgramUniformMatrix4x3dvEXT); \
  HookExtension(PFNGLVALIDATEPROGRAMPIPELINEPROC, glValidateProgramPipeline); \
  HookExtensionAlias(PFNGLVALIDATEPROGRAMPIPELINEPROC, glValidateProgramPipeline, glValidateProgramPipelineEXT); \
  HookExtension(PFNGLGETPROGRAMPIPELINEINFOLOGPROC, glGetProgramPipelineInfoLog); \
  HookExtensionAlias(PFNGLGETPROGRAMPIPELINEINFOLOGPROC, glGetProgramPipelineInfoLog, glGetProgramPipelineInfoLogEXT); \
  HookExtension(PFNGLVERTEXATTRIBL1DPROC, glVertexAttribL1d); \
  HookExtensionAlias(PFNGLVERTEXATTRIBL1DPROC, glVertexAttribL1d, glVertexAttribL1dEXT); \
  HookExtension(PFNGLVERTEXATTRIBL2DPROC, glVertexAttribL2d); \
  HookExtensionAlias(PFNGLVERTEXATTRIBL2DPROC, glVertexAttribL2d, glVertexAttribL2dEXT); \
  HookExtension(PFNGLVERTEXATTRIBL3DPROC, glVertexAttribL3d); \
  HookExtensionAlias(PFNGLVERTEXATTRIBL3DPROC, glVertexAttribL3d, glVertexAttribL3dEXT); \
  HookExtension(PFNGLVERTEXATTRIBL4DPROC, glVertexAttribL4d); \
  HookExtensionAlias(PFNGLVERTEXATTRIBL4DPROC, glVertexAttribL4d, glVertexAttribL4dEXT); \
  HookExtension(PFNGLVERTEXATTRIBL1DVPROC, glVertexAttribL1dv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBL1DVPROC, glVertexAttribL1dv, glVertexAttribL1dvEXT); \
  HookExtension(PFNGLVERTEXATTRIBL2DVPROC, glVertexAttribL2dv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBL2DVPROC, glVertexAttribL2dv, glVertexAttribL2dvEXT); \
  HookExtension(PFNGLVERTEXATTRIBL3DVPROC, glVertexAttribL3dv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBL3DVPROC, glVertexAttribL3dv, glVertexAttribL3dvEXT); \
  HookExtension(PFNGLVERTEXATTRIBL4DVPROC, glVertexAttribL4dv); \
  HookExtensionAlias(PFNGLVERTEXATTRIBL4DVPROC, glVertexAttribL4dv, glVertexAttribL4dvEXT); \
  HookExtension(PFNGLVERTEXATTRIBLPOINTERPROC, glVertexAttribLPointer); \
  HookExtensionAlias(PFNGLVERTEXATTRIBLPOINTERPROC, glVertexAttribLPointer, glVertexAttribLPointerEXT); \
  HookExtension(PFNGLGETVERTEXATTRIBLDVPROC, glGetVertexAttribLdv); \
  HookExtensionAlias(PFNGLGETVERTEXATTRIBLDVPROC, glGetVertexAttribLdv, glGetVertexAttribLdvEXT); \
  HookExtension(PFNGLVIEWPORTARRAYVPROC, glViewportArrayv); \
  HookExtensionAlias(PFNGLVIEWPORTARRAYVPROC, glViewportArrayv, glViewportArrayvOES); \
  HookExtensionAlias(PFNGLVIEWPORTARRAYVPROC, glViewportArrayv, glViewportArrayvNV); \
  HookExtension(PFNGLVIEWPORTINDEXEDFPROC, glViewportIndexedf); \
  HookExtensionAlias(PFNGLVIEWPORTINDEXEDFPROC, glViewportIndexedf, glViewportIndexedfOES); \
  HookExtensionAlias(PFNGLVIEWPORTINDEXEDFPROC, glViewportIndexedf, glViewportIndexedfNV); \
  HookExtension(PFNGLVIEWPORTINDEXEDFVPROC, glViewportIndexedfv); \
  HookExtensionAlias(PFNGLVIEWPORTINDEXEDFVPROC, glViewportIndexedfv, glViewportIndexedfvOES); \
  HookExtensionAlias(PFNGLVIEWPORTINDEXEDFVPROC, glViewportIndexedfv, glViewportIndexedfvNV); \
  HookExtension(PFNGLSCISSORARRAYVPROC, glScissorArrayv); \
  HookExtensionAlias(PFNGLSCISSORARRAYVPROC, glScissorArrayv, glScissorArrayvOES); \
  HookExtensionAlias(PFNGLSCISSORARRAYVPROC, glScissorArrayv, glScissorArrayvNV); \
  HookExtension(PFNGLSCISSORINDEXEDPROC, glScissorIndexed); \
  HookExtensionAlias(PFNGLSCISSORINDEXEDPROC, glScissorIndexed, glScissorIndexedOES); \
  HookExtensionAlias(PFNGLSCISSORINDEXEDPROC, glScissorIndexed, glScissorIndexedNV); \
  HookExtension(PFNGLSCISSORINDEXEDVPROC, glScissorIndexedv); \
  HookExtensionAlias(PFNGLSCISSORINDEXEDVPROC, glScissorIndexedv, glScissorIndexedvOES); \
  HookExtensionAlias(PFNGLSCISSORINDEXEDVPROC, glScissorIndexedv, glScissorIndexedvNV); \
  HookExtension(PFNGLDEPTHRANGEARRAYVPROC, glDepthRangeArrayv); \
  HookExtension(PFNGLDEPTHRANGEINDEXEDPROC, glDepthRangeIndexed); \
  HookExtension(PFNGLGETFLOATI_VPROC, glGetFloati_v); \
  HookExtensionAlias(PFNGLGETFLOATI_VPROC, glGetFloati_v, glGetFloati_vEXT); \
  HookExtensionAlias(PFNGLGETFLOATI_VPROC, glGetFloati_v, glGetFloati_vOES); \
  HookExtensionAlias(PFNGLGETFLOATI_VPROC, glGetFloati_v, glGetFloati_vNV); \
  HookExtension(PFNGLGETDOUBLEI_VPROC, glGetDoublei_v); \
  HookExtensionAlias(PFNGLGETDOUBLEI_VPROC, glGetDoublei_v, glGetDoublei_vEXT); \
  HookExtension(PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC, glDrawArraysInstancedBaseInstance); \
  HookExtensionAlias(PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC, glDrawArraysInstancedBaseInstance, glDrawArraysInstancedBaseInstanceEXT); \
  HookExtension(PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC, glDrawElementsInstancedBaseInstance); \
  HookExtensionAlias(PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC, glDrawElementsInstancedBaseInstance, glDrawElementsInstancedBaseInstanceEXT); \
  HookExtension(PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC, glDrawElementsInstancedBaseVertexBaseInstance); \
  HookExtensionAlias(PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC, glDrawElementsInstancedBaseVertexBaseInstance, glDrawElementsInstancedBaseVertexBaseInstanceEXT); \
  HookExtension(PFNGLGETINTERNALFORMATIVPROC, glGetInternalformativ); \
  HookExtension(PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC, glGetActiveAtomicCounterBufferiv); \
  HookExtension(PFNGLBINDIMAGETEXTUREPROC, glBindImageTexture); \
  HookExtensionAlias(PFNGLBINDIMAGETEXTUREPROC, glBindImageTexture, glBindImageTextureEXT); \
  HookExtension(PFNGLMEMORYBARRIERPROC, glMemoryBarrier); \
  HookExtensionAlias(PFNGLMEMORYBARRIERPROC, glMemoryBarrier, glMemoryBarrierEXT); \
  HookExtension(PFNGLTEXSTORAGE1DPROC, glTexStorage1D); \
  HookExtensionAlias(PFNGLTEXSTORAGE1DPROC, glTexStorage1D, glTexStorage1DEXT); \
  HookExtension(PFNGLTEXSTORAGE2DPROC, glTexStorage2D); \
  HookExtensionAlias(PFNGLTEXSTORAGE2DPROC, glTexStorage2D, glTexStorage2DEXT); \
  HookExtension(PFNGLTEXSTORAGE3DPROC, glTexStorage3D); \
  HookExtensionAlias(PFNGLTEXSTORAGE3DPROC, glTexStorage3D, glTexStorage3DEXT); \
  HookExtension(PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC, glDrawTransformFeedbackInstanced); \
  HookExtension(PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC, glDrawTransformFeedbackStreamInstanced); \
  HookExtension(PFNGLCLEARBUFFERDATAPROC, glClearBufferData); \
  HookExtension(PFNGLCLEARBUFFERSUBDATAPROC, glClearBufferSubData); \
  HookExtension(PFNGLDISPATCHCOMPUTEPROC, glDispatchCompute); \
  HookExtension(PFNGLDISPATCHCOMPUTEINDIRECTPROC, glDispatchComputeIndirect); \
  HookExtension(PFNGLCOPYIMAGESUBDATAPROC, glCopyImageSubData); \
  HookExtensionAlias(PFNGLCOPYIMAGESUBDATAPROC, glCopyImageSubData, glCopyImageSubDataEXT); \
  HookExtensionAlias(PFNGLCOPYIMAGESUBDATAPROC, glCopyImageSubData, glCopyImageSubDataOES); \
  HookExtension(PFNGLFRAMEBUFFERPARAMETERIPROC, glFramebufferParameteri); \
  HookExtension(PFNGLGETFRAMEBUFFERPARAMETERIVPROC, glGetFramebufferParameteriv); \
  HookExtension(PFNGLGETINTERNALFORMATI64VPROC, glGetInternalformati64v); \
  HookExtension(PFNGLINVALIDATETEXSUBIMAGEPROC, glInvalidateTexSubImage); \
  HookExtension(PFNGLINVALIDATETEXIMAGEPROC, glInvalidateTexImage); \
  HookExtension(PFNGLINVALIDATEBUFFERSUBDATAPROC, glInvalidateBufferSubData); \
  HookExtension(PFNGLINVALIDATEBUFFERDATAPROC, glInvalidateBufferData); \
  HookExtension(PFNGLINVALIDATEFRAMEBUFFERPROC, glInvalidateFramebuffer); \
  HookExtension(PFNGLINVALIDATESUBFRAMEBUFFERPROC, glInvalidateSubFramebuffer); \
  HookExtension(PFNGLMULTIDRAWARRAYSINDIRECTPROC, glMultiDrawArraysIndirect); \
  HookExtension(PFNGLMULTIDRAWELEMENTSINDIRECTPROC, glMultiDrawElementsIndirect); \
  HookExtension(PFNGLGETPROGRAMINTERFACEIVPROC, glGetProgramInterfaceiv); \
  HookExtension(PFNGLGETPROGRAMRESOURCEINDEXPROC, glGetProgramResourceIndex); \
  HookExtension(PFNGLGETPROGRAMRESOURCENAMEPROC, glGetProgramResourceName); \
  HookExtension(PFNGLGETPROGRAMRESOURCEIVPROC, glGetProgramResourceiv); \
  HookExtension(PFNGLGETPROGRAMRESOURCELOCATIONPROC, glGetProgramResourceLocation); \
  HookExtension(PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC, glGetProgramResourceLocationIndex); \
  HookExtension(PFNGLSHADERSTORAGEBLOCKBINDINGPROC, glShaderStorageBlockBinding); \
  HookExtension(PFNGLTEXBUFFERRANGEPROC, glTexBufferRange); \
  HookExtensionAlias(PFNGLTEXBUFFERRANGEPROC, glTexBufferRange, glTexBufferRangeEXT); \
  HookExtensionAlias(PFNGLTEXBUFFERRANGEPROC, glTexBufferRange, glTexBufferRangeOES); \
  HookExtension(PFNGLTEXSTORAGE2DMULTISAMPLEPROC, glTexStorage2DMultisample); \
  HookExtension(PFNGLTEXSTORAGE3DMULTISAMPLEPROC, glTexStorage3DMultisample); \
  HookExtensionAlias(PFNGLTEXSTORAGE3DMULTISAMPLEPROC, glTexStorage3DMultisample, glTexStorage3DMultisampleOES); \
  HookExtension(PFNGLTEXTUREVIEWPROC, glTextureView); \
  HookExtensionAlias(PFNGLTEXTUREVIEWPROC, glTextureView, glTextureViewEXT); \
  HookExtensionAlias(PFNGLTEXTUREVIEWPROC, glTextureView, glTextureViewOES); \
  HookExtension(PFNGLBINDVERTEXBUFFERPROC, glBindVertexBuffer); \
  HookExtension(PFNGLVERTEXATTRIBFORMATPROC, glVertexAttribFormat); \
  HookExtension(PFNGLVERTEXATTRIBIFORMATPROC, glVertexAttribIFormat); \
  HookExtension(PFNGLVERTEXATTRIBLFORMATPROC, glVertexAttribLFormat); \
  HookExtension(PFNGLVERTEXATTRIBBINDINGPROC, glVertexAttribBinding); \
  HookExtension(PFNGLVERTEXBINDINGDIVISORPROC, glVertexBindingDivisor); \
  HookExtension(PFNGLDEBUGMESSAGECONTROLPROC, glDebugMessageControl); \
  HookExtensionAlias(PFNGLDEBUGMESSAGECONTROLPROC, glDebugMessageControl, glDebugMessageControlARB); \
  HookExtensionAlias(PFNGLDEBUGMESSAGECONTROLPROC, glDebugMessageControl, glDebugMessageControlKHR); \
  HookExtension(PFNGLDEBUGMESSAGEINSERTPROC, glDebugMessageInsert); \
  HookExtensionAlias(PFNGLDEBUGMESSAGEINSERTPROC, glDebugMessageInsert, glDebugMessageInsertARB); \
  HookExtensionAlias(PFNGLDEBUGMESSAGEINSERTPROC, glDebugMessageInsert, glDebugMessageInsertKHR); \
  HookExtension(PFNGLDEBUGMESSAGECALLBACKPROC, glDebugMessageCallback); \
  HookExtensionAlias(PFNGLDEBUGMESSAGECALLBACKPROC, glDebugMessageCallback, glDebugMessageCallbackARB); \
  HookExtensionAlias(PFNGLDEBUGMESSAGECALLBACKPROC, glDebugMessageCallback, glDebugMessageCallbackKHR); \
  HookExtension(PFNGLGETDEBUGMESSAGELOGPROC, glGetDebugMessageLog); \
  HookExtensionAlias(PFNGLGETDEBUGMESSAGELOGPROC, glGetDebugMessageLog, glGetDebugMessageLogARB); \
  HookExtensionAlias(PFNGLGETDEBUGMESSAGELOGPROC, glGetDebugMessageLog, glGetDebugMessageLogKHR); \
  HookExtension(PFNGLPUSHDEBUGGROUPPROC, glPushDebugGroup); \
  HookExtensionAlias(PFNGLPUSHDEBUGGROUPPROC, glPushDebugGroup, glPushDebugGroupKHR); \
  HookExtension(PFNGLPOPDEBUGGROUPPROC, glPopDebugGroup); \
  HookExtensionAlias(PFNGLPOPDEBUGGROUPPROC, glPopDebugGroup, glPopDebugGroupKHR); \
  HookExtension(PFNGLOBJECTLABELPROC, glObjectLabel); \
  HookExtensionAlias(PFNGLOBJECTLABELPROC, glObjectLabel, glObjectLabelKHR); \
  HookExtension(PFNGLGETOBJECTLABELPROC, glGetObjectLabel); \
  HookExtensionAlias(PFNGLGETOBJECTLABELPROC, glGetObjectLabel, glGetObjectLabelKHR); \
  HookExtension(PFNGLOBJECTPTRLABELPROC, glObjectPtrLabel); \
  HookExtensionAlias(PFNGLOBJECTPTRLABELPROC, glObjectPtrLabel, glObjectPtrLabelKHR); \
  HookExtension(PFNGLGETOBJECTPTRLABELPROC, glGetObjectPtrLabel); \
  HookExtensionAlias(PFNGLGETOBJECTPTRLABELPROC, glGetObjectPtrLabel, glGetObjectPtrLabelKHR); \
  HookExtension(PFNGLBUFFERSTORAGEPROC, glBufferStorage); \
  HookExtension(PFNGLCLEARTEXIMAGEPROC, glClearTexImage); \
  HookExtension(PFNGLCLEARTEXSUBIMAGEPROC, glClearTexSubImage); \
  HookExtension(PFNGLBINDBUFFERSBASEPROC, glBindBuffersBase); \
  HookExtension(PFNGLBINDBUFFERSRANGEPROC, glBindBuffersRange); \
  HookExtension(PFNGLBINDTEXTURESPROC, glBindTextures); \
  HookExtension(PFNGLBINDSAMPLERSPROC, glBindSamplers); \
  HookExtension(PFNGLBINDIMAGETEXTURESPROC, glBindImageTextures); \
  HookExtension(PFNGLBINDVERTEXBUFFERSPROC, glBindVertexBuffers); \
  HookExtension(PFNGLCLIPCONTROLPROC, glClipControl); \
  HookExtension(PFNGLCREATETRANSFORMFEEDBACKSPROC, glCreateTransformFeedbacks); \
  HookExtension(PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC, glTransformFeedbackBufferBase); \
  HookExtension(PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC, glTransformFeedbackBufferRange); \
  HookExtension(PFNGLGETTRANSFORMFEEDBACKIVPROC, glGetTransformFeedbackiv); \
  HookExtension(PFNGLGETTRANSFORMFEEDBACKI_VPROC, glGetTransformFeedbacki_v); \
  HookExtension(PFNGLGETTRANSFORMFEEDBACKI64_VPROC, glGetTransformFeedbacki64_v); \
  HookExtension(PFNGLCREATEBUFFERSPROC, glCreateBuffers); \
  HookExtension(PFNGLNAMEDBUFFERSTORAGEPROC, glNamedBufferStorage); \
  HookExtension(PFNGLNAMEDBUFFERDATAPROC, glNamedBufferData); \
  HookExtension(PFNGLNAMEDBUFFERSUBDATAPROC, glNamedBufferSubData); \
  HookExtension(PFNGLCOPYNAMEDBUFFERSUBDATAPROC, glCopyNamedBufferSubData); \
  HookExtension(PFNGLCLEARNAMEDBUFFERDATAPROC, glClearNamedBufferDataEXT); \
  HookExtensionAlias(PFNGLCLEARNAMEDBUFFERDATAPROC, glClearNamedBufferDataEXT, glClearNamedBufferData); \
  HookExtension(PFNGLCLEARNAMEDBUFFERSUBDATAPROC, glClearNamedBufferSubData); \
  HookExtension(PFNGLMAPNAMEDBUFFERPROC, glMapNamedBufferEXT); \
  HookExtensionAlias(PFNGLMAPNAMEDBUFFERPROC, glMapNamedBufferEXT, glMapNamedBuffer); \
  HookExtension(PFNGLMAPNAMEDBUFFERRANGEPROC, glMapNamedBufferRange); \
  HookExtension(PFNGLUNMAPNAMEDBUFFERPROC, glUnmapNamedBufferEXT); \
  HookExtensionAlias(PFNGLUNMAPNAMEDBUFFERPROC, glUnmapNamedBufferEXT, glUnmapNamedBuffer); \
  HookExtension(PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC, glFlushMappedNamedBufferRange); \
  HookExtension(PFNGLGETNAMEDBUFFERPARAMETERIVPROC, glGetNamedBufferParameterivEXT); \
  HookExtensionAlias(PFNGLGETNAMEDBUFFERPARAMETERIVPROC, glGetNamedBufferParameterivEXT, glGetNamedBufferParameteriv); \
  HookExtension(PFNGLGETNAMEDBUFFERPARAMETERI64VPROC, glGetNamedBufferParameteri64v); \
  HookExtension(PFNGLGETNAMEDBUFFERPOINTERVPROC, glGetNamedBufferPointervEXT); \
  HookExtensionAlias(PFNGLGETNAMEDBUFFERPOINTERVPROC, glGetNamedBufferPointervEXT, glGetNamedBufferPointerv); \
  HookExtension(PFNGLGETNAMEDBUFFERSUBDATAPROC, glGetNamedBufferSubData); \
  HookExtension(PFNGLCREATEFRAMEBUFFERSPROC, glCreateFramebuffers); \
  HookExtension(PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC, glNamedFramebufferRenderbufferEXT); \
  HookExtensionAlias(PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC, glNamedFramebufferRenderbufferEXT, glNamedFramebufferRenderbuffer); \
  HookExtension(PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC, glNamedFramebufferParameteriEXT); \
  HookExtensionAlias(PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC, glNamedFramebufferParameteriEXT, glNamedFramebufferParameteri); \
  HookExtension(PFNGLNAMEDFRAMEBUFFERTEXTUREPROC, glNamedFramebufferTextureEXT); \
  HookExtensionAlias(PFNGLNAMEDFRAMEBUFFERTEXTUREPROC, glNamedFramebufferTextureEXT, glNamedFramebufferTexture); \
  HookExtension(PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC, glNamedFramebufferTextureLayerEXT); \
  HookExtensionAlias(PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC, glNamedFramebufferTextureLayerEXT, glNamedFramebufferTextureLayer); \
  HookExtension(PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC, glFramebufferDrawBufferEXT); \
  HookExtensionAlias(PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC, glFramebufferDrawBufferEXT, glNamedFramebufferDrawBuffer); \
  HookExtension(PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC, glFramebufferDrawBuffersEXT); \
  HookExtensionAlias(PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC, glFramebufferDrawBuffersEXT, glNamedFramebufferDrawBuffers); \
  HookExtension(PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC, glFramebufferReadBufferEXT); \
  HookExtensionAlias(PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC, glFramebufferReadBufferEXT, glNamedFramebufferReadBuffer); \
  HookExtension(PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC, glInvalidateNamedFramebufferData); \
  HookExtension(PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC, glInvalidateNamedFramebufferSubData); \
  HookExtension(PFNGLCLEARNAMEDFRAMEBUFFERIVPROC, glClearNamedFramebufferiv); \
  HookExtension(PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC, glClearNamedFramebufferuiv); \
  HookExtension(PFNGLCLEARNAMEDFRAMEBUFFERFVPROC, glClearNamedFramebufferfv); \
  HookExtension(PFNGLCLEARNAMEDFRAMEBUFFERFIPROC, glClearNamedFramebufferfi); \
  HookExtension(PFNGLBLITNAMEDFRAMEBUFFERPROC, glBlitNamedFramebuffer); \
  HookExtension(PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC, glCheckNamedFramebufferStatusEXT); \
  HookExtensionAlias(PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC, glCheckNamedFramebufferStatusEXT, glCheckNamedFramebufferStatus); \
  HookExtension(PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC, glGetNamedFramebufferParameterivEXT); \
  HookExtensionAlias(PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC, glGetNamedFramebufferParameterivEXT, glGetFramebufferParameterivEXT); \
  HookExtensionAlias(PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC, glGetNamedFramebufferParameterivEXT, glGetNamedFramebufferParameteriv); \
  HookExtension(PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC, glGetNamedFramebufferAttachmentParameterivEXT); \
  HookExtensionAlias(PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC, glGetNamedFramebufferAttachmentParameterivEXT, glGetNamedFramebufferAttachmentParameteriv); \
  HookExtension(PFNGLCREATERENDERBUFFERSPROC, glCreateRenderbuffers); \
  HookExtension(PFNGLNAMEDRENDERBUFFERSTORAGEPROC, glNamedRenderbufferStorageEXT); \
  HookExtensionAlias(PFNGLNAMEDRENDERBUFFERSTORAGEPROC, glNamedRenderbufferStorageEXT, glNamedRenderbufferStorage); \
  HookExtension(PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC, glNamedRenderbufferStorageMultisampleEXT); \
  HookExtensionAlias(PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC, glNamedRenderbufferStorageMultisampleEXT, glNamedRenderbufferStorageMultisample); \
  HookExtension(PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC, glGetNamedRenderbufferParameterivEXT); \
  HookExtensionAlias(PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC, glGetNamedRenderbufferParameterivEXT, glGetNamedRenderbufferParameteriv); \
  HookExtension(PFNGLCREATETEXTURESPROC, glCreateTextures); \
  HookExtension(PFNGLTEXTUREBUFFERPROC, glTextureBuffer); \
  HookExtension(PFNGLTEXTUREBUFFERRANGEPROC, glTextureBufferRange); \
  HookExtension(PFNGLTEXTURESTORAGE1DPROC, glTextureStorage1D); \
  HookExtension(PFNGLTEXTURESTORAGE2DPROC, glTextureStorage2D); \
  HookExtension(PFNGLTEXTURESTORAGE3DPROC, glTextureStorage3D); \
  HookExtension(PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC, glTextureStorage2DMultisample); \
  HookExtension(PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC, glTextureStorage3DMultisample); \
  HookExtension(PFNGLTEXTURESUBIMAGE1DPROC, glTextureSubImage1D); \
  HookExtension(PFNGLTEXTURESUBIMAGE2DPROC, glTextureSubImage2D); \
  HookExtension(PFNGLTEXTURESUBIMAGE3DPROC, glTextureSubImage3D); \
  HookExtension(PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC, glCompressedTextureSubImage1D); \
  HookExtension(PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC, glCompressedTextureSubImage2D); \
  HookExtension(PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC, glCompressedTextureSubImage3D); \
  HookExtension(PFNGLCOPYTEXTURESUBIMAGE1DPROC, glCopyTextureSubImage1D); \
  HookExtension(PFNGLCOPYTEXTURESUBIMAGE2DPROC, glCopyTextureSubImage2D); \
  HookExtension(PFNGLCOPYTEXTURESUBIMAGE3DPROC, glCopyTextureSubImage3D); \
  HookExtension(PFNGLTEXTUREPARAMETERFPROC, glTextureParameterf); \
  HookExtension(PFNGLTEXTUREPARAMETERFVPROC, glTextureParameterfv); \
  HookExtension(PFNGLTEXTUREPARAMETERIPROC, glTextureParameteri); \
  HookExtension(PFNGLTEXTUREPARAMETERIIVPROC, glTextureParameterIiv); \
  HookExtension(PFNGLTEXTUREPARAMETERIUIVPROC, glTextureParameterIuiv); \
  HookExtension(PFNGLTEXTUREPARAMETERIVPROC, glTextureParameteriv); \
  HookExtension(PFNGLGENERATETEXTUREMIPMAPPROC, glGenerateTextureMipmap); \
  HookExtension(PFNGLBINDTEXTUREUNITPROC, glBindTextureUnit); \
  HookExtension(PFNGLGETTEXTUREIMAGEPROC, glGetTextureImage); \
  HookExtension(PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC, glGetCompressedTextureImage); \
  HookExtension(PFNGLGETTEXTURELEVELPARAMETERFVPROC, glGetTextureLevelParameterfv); \
  HookExtension(PFNGLGETTEXTURELEVELPARAMETERIVPROC, glGetTextureLevelParameteriv); \
  HookExtension(PFNGLGETTEXTUREPARAMETERFVPROC, glGetTextureParameterfv); \
  HookExtension(PFNGLGETTEXTUREPARAMETERIIVPROC, glGetTextureParameterIiv); \
  HookExtension(PFNGLGETTEXTUREPARAMETERIUIVPROC, glGetTextureParameterIuiv); \
  HookExtension(PFNGLGETTEXTUREPARAMETERIVPROC, glGetTextureParameteriv); \
  HookExtension(PFNGLCREATEVERTEXARRAYSPROC, glCreateVertexArrays); \
  HookExtension(PFNGLDISABLEVERTEXARRAYATTRIBPROC, glDisableVertexArrayAttribEXT); \
  HookExtensionAlias(PFNGLDISABLEVERTEXARRAYATTRIBPROC, glDisableVertexArrayAttribEXT, glDisableVertexArrayAttrib); \
  HookExtension(PFNGLENABLEVERTEXARRAYATTRIBPROC, glEnableVertexArrayAttribEXT); \
  HookExtensionAlias(PFNGLENABLEVERTEXARRAYATTRIBPROC, glEnableVertexArrayAttribEXT, glEnableVertexArrayAttrib); \
  HookExtension(PFNGLVERTEXARRAYELEMENTBUFFERPROC, glVertexArrayElementBuffer); \
  HookExtension(PFNGLVERTEXARRAYVERTEXBUFFERPROC, glVertexArrayBindVertexBufferEXT); \
  HookExtensionAlias(PFNGLVERTEXARRAYVERTEXBUFFERPROC, glVertexArrayBindVertexBufferEXT, glVertexArrayVertexBuffer); \
  HookExtension(PFNGLVERTEXARRAYVERTEXBUFFERSPROC, glVertexArrayVertexBuffers); \
  HookExtension(PFNGLVERTEXARRAYATTRIBBINDINGPROC, glVertexArrayVertexAttribBindingEXT); \
  HookExtensionAlias(PFNGLVERTEXARRAYATTRIBBINDINGPROC, glVertexArrayVertexAttribBindingEXT, glVertexArrayAttribBinding); \
  HookExtension(PFNGLVERTEXARRAYATTRIBFORMATPROC, glVertexArrayVertexAttribFormatEXT); \
  HookExtensionAlias(PFNGLVERTEXARRAYATTRIBFORMATPROC, glVertexArrayVertexAttribFormatEXT, glVertexArrayAttribFormat); \
  HookExtension(PFNGLVERTEXARRAYATTRIBIFORMATPROC, glVertexArrayVertexAttribIFormatEXT); \
  HookExtensionAlias(PFNGLVERTEXARRAYATTRIBIFORMATPROC, glVertexArrayVertexAttribIFormatEXT, glVertexArrayAttribIFormat); \
  HookExtension(PFNGLVERTEXARRAYATTRIBLFORMATPROC, glVertexArrayVertexAttribLFormatEXT); \
  HookExtensionAlias(PFNGLVERTEXARRAYATTRIBLFORMATPROC, glVertexArrayVertexAttribLFormatEXT, glVertexArrayAttribLFormat); \
  HookExtension(PFNGLVERTEXARRAYBINDINGDIVISORPROC, glVertexArrayVertexBindingDivisorEXT); \
  HookExtensionAlias(PFNGLVERTEXARRAYBINDINGDIVISORPROC, glVertexArrayVertexBindingDivisorEXT, glVertexArrayBindingDivisor); \
  HookExtension(PFNGLGETVERTEXARRAYIVPROC, glGetVertexArrayiv); \
  HookExtension(PFNGLGETVERTEXARRAYINDEXEDIVPROC, glGetVertexArrayIndexediv); \
  HookExtension(PFNGLGETVERTEXARRAYINDEXED64IVPROC, glGetVertexArrayIndexed64iv); \
  HookExtension(PFNGLCREATESAMPLERSPROC, glCreateSamplers); \
  HookExtension(PFNGLCREATEPROGRAMPIPELINESPROC, glCreateProgramPipelines); \
  HookExtension(PFNGLCREATEQUERIESPROC, glCreateQueries); \
  HookExtension(PFNGLGETQUERYBUFFEROBJECTI64VPROC, glGetQueryBufferObjecti64v); \
  HookExtension(PFNGLGETQUERYBUFFEROBJECTIVPROC, glGetQueryBufferObjectiv); \
  HookExtension(PFNGLGETQUERYBUFFEROBJECTUI64VPROC, glGetQueryBufferObjectui64v); \
  HookExtension(PFNGLGETQUERYBUFFEROBJECTUIVPROC, glGetQueryBufferObjectuiv); \
  HookExtension(PFNGLMEMORYBARRIERBYREGIONPROC, glMemoryBarrierByRegion); \
  HookExtension(PFNGLGETTEXTURESUBIMAGEPROC, glGetTextureSubImage); \
  HookExtension(PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC, glGetCompressedTextureSubImage); \
  HookExtension(PFNGLGETGRAPHICSRESETSTATUSPROC, glGetGraphicsResetStatus); \
  HookExtensionAlias(PFNGLGETGRAPHICSRESETSTATUSPROC, glGetGraphicsResetStatus, glGetGraphicsResetStatusARB); \
  HookExtensionAlias(PFNGLGETGRAPHICSRESETSTATUSPROC, glGetGraphicsResetStatus, glGetGraphicsResetStatusEXT); \
  HookExtension(PFNGLGETNCOMPRESSEDTEXIMAGEPROC, glGetnCompressedTexImage); \
  HookExtensionAlias(PFNGLGETNCOMPRESSEDTEXIMAGEPROC, glGetnCompressedTexImage, glGetnCompressedTexImageARB); \
  HookExtension(PFNGLGETNTEXIMAGEPROC, glGetnTexImage); \
  HookExtensionAlias(PFNGLGETNTEXIMAGEPROC, glGetnTexImage, glGetnTexImageARB); \
  HookExtension(PFNGLGETNUNIFORMDVPROC, glGetnUniformdv); \
  HookExtensionAlias(PFNGLGETNUNIFORMDVPROC, glGetnUniformdv, glGetnUniformdvARB); \
  HookExtension(PFNGLGETNUNIFORMFVPROC, glGetnUniformfv); \
  HookExtensionAlias(PFNGLGETNUNIFORMFVPROC, glGetnUniformfv, glGetnUniformfvARB); \
  HookExtensionAlias(PFNGLGETNUNIFORMFVPROC, glGetnUniformfv, glGetnUniformfvEXT); \
  HookExtension(PFNGLGETNUNIFORMIVPROC, glGetnUniformiv); \
  HookExtensionAlias(PFNGLGETNUNIFORMIVPROC, glGetnUniformiv, glGetnUniformivARB); \
  HookExtensionAlias(PFNGLGETNUNIFORMIVPROC, glGetnUniformiv, glGetnUniformivEXT); \
  HookExtension(PFNGLGETNUNIFORMUIVPROC, glGetnUniformuiv); \
  HookExtensionAlias(PFNGLGETNUNIFORMUIVPROC, glGetnUniformuiv, glGetnUniformuivARB); \
  HookExtension(PFNGLREADNPIXELSPROC, glReadnPixels); \
  HookExtensionAlias(PFNGLREADNPIXELSPROC, glReadnPixels, glReadnPixelsARB); \
  HookExtensionAlias(PFNGLREADNPIXELSPROC, glReadnPixels, glReadnPixelsEXT); \
  HookExtension(PFNGLTEXTUREBARRIERPROC, glTextureBarrier); \
  HookExtension(PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC, glDispatchComputeGroupSizeARB); \
  HookExtension(PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC, glMultiDrawArraysIndirectCountARB); \
  HookExtension(PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC, glMultiDrawElementsIndirectCountARB); \
  HookExtension(PFNGLNAMEDSTRINGARBPROC, glNamedStringARB); \
  HookExtension(PFNGLDELETENAMEDSTRINGARBPROC, glDeleteNamedStringARB); \
  HookExtension(PFNGLCOMPILESHADERINCLUDEARBPROC, glCompileShaderIncludeARB); \
  HookExtension(PFNGLISNAMEDSTRINGARBPROC, glIsNamedStringARB); \
  HookExtension(PFNGLGETNAMEDSTRINGARBPROC, glGetNamedStringARB); \
  HookExtension(PFNGLGETNAMEDSTRINGIVARBPROC, glGetNamedStringivARB); \
  HookExtension(PFNGLBLENDBARRIERKHRPROC, glBlendBarrierKHR); \
  HookExtension(PFNGLLABELOBJECTEXTPROC, glLabelObjectEXT); \
  HookExtension(PFNGLGETOBJECTLABELEXTPROC, glGetObjectLabelEXT); \
  HookExtension(PFNGLINSERTEVENTMARKEREXTPROC, glInsertEventMarkerEXT); \
  HookExtension(PFNGLPUSHGROUPMARKEREXTPROC, glPushGroupMarkerEXT); \
  HookExtension(PFNGLPOPGROUPMARKEREXTPROC, glPopGroupMarkerEXT); \
  HookExtension(PFNGLTEXTUREPARAMETERFEXTPROC, glTextureParameterfEXT); \
  HookExtension(PFNGLTEXTUREPARAMETERFVEXTPROC, glTextureParameterfvEXT); \
  HookExtension(PFNGLTEXTUREPARAMETERIEXTPROC, glTextureParameteriEXT); \
  HookExtension(PFNGLTEXTUREPARAMETERIVEXTPROC, glTextureParameterivEXT); \
  HookExtension(PFNGLTEXTUREIMAGE1DEXTPROC, glTextureImage1DEXT); \
  HookExtension(PFNGLTEXTUREIMAGE2DEXTPROC, glTextureImage2DEXT); \
  HookExtension(PFNGLTEXTURESUBIMAGE1DEXTPROC, glTextureSubImage1DEXT); \
  HookExtension(PFNGLTEXTURESUBIMAGE2DEXTPROC, glTextureSubImage2DEXT); \
  HookExtension(PFNGLCOPYTEXTUREIMAGE1DEXTPROC, glCopyTextureImage1DEXT); \
  HookExtension(PFNGLCOPYTEXTUREIMAGE2DEXTPROC, glCopyTextureImage2DEXT); \
  HookExtension(PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC, glCopyTextureSubImage1DEXT); \
  HookExtension(PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC, glCopyTextureSubImage2DEXT); \
  HookExtension(PFNGLGETTEXTUREIMAGEEXTPROC, glGetTextureImageEXT); \
  HookExtension(PFNGLGETTEXTUREPARAMETERFVEXTPROC, glGetTextureParameterfvEXT); \
  HookExtension(PFNGLGETTEXTUREPARAMETERIVEXTPROC, glGetTextureParameterivEXT); \
  HookExtension(PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC, glGetTextureLevelParameterfvEXT); \
  HookExtension(PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC, glGetTextureLevelParameterivEXT); \
  HookExtension(PFNGLTEXTUREIMAGE3DEXTPROC, glTextureImage3DEXT); \
  HookExtension(PFNGLTEXTURESUBIMAGE3DEXTPROC, glTextureSubImage3DEXT); \
  HookExtension(PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC, glCopyTextureSubImage3DEXT); \
  HookExtension(PFNGLBINDMULTITEXTUREEXTPROC, glBindMultiTextureEXT); \
  HookExtension(PFNGLMULTITEXPARAMETERIEXTPROC, glMultiTexParameteriEXT); \
  HookExtension(PFNGLMULTITEXPARAMETERIVEXTPROC, glMultiTexParameterivEXT); \
  HookExtension(PFNGLMULTITEXPARAMETERFEXTPROC, glMultiTexParameterfEXT); \
  HookExtension(PFNGLMULTITEXPARAMETERFVEXTPROC, glMultiTexParameterfvEXT); \
  HookExtension(PFNGLMULTITEXIMAGE1DEXTPROC, glMultiTexImage1DEXT); \
  HookExtension(PFNGLMULTITEXIMAGE2DEXTPROC, glMultiTexImage2DEXT); \
  HookExtension(PFNGLMULTITEXSUBIMAGE1DEXTPROC, glMultiTexSubImage1DEXT); \
  HookExtension(PFNGLMULTITEXSUBIMAGE2DEXTPROC, glMultiTexSubImage2DEXT); \
  HookExtension(PFNGLCOPYMULTITEXIMAGE1DEXTPROC, glCopyMultiTexImage1DEXT); \
  HookExtension(PFNGLCOPYMULTITEXIMAGE2DEXTPROC, glCopyMultiTexImage2DEXT); \
  HookExtension(PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC, glCopyMultiTexSubImage1DEXT); \
  HookExtension(PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC, glCopyMultiTexSubImage2DEXT); \
  HookExtension(PFNGLGETMULTITEXIMAGEEXTPROC, glGetMultiTexImageEXT); \
  HookExtension(PFNGLGETMULTITEXPARAMETERFVEXTPROC, glGetMultiTexParameterfvEXT); \
  HookExtension(PFNGLGETMULTITEXPARAMETERIVEXTPROC, glGetMultiTexParameterivEXT); \
  HookExtension(PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC, glGetMultiTexLevelParameterfvEXT); \
  HookExtension(PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC, glGetMultiTexLevelParameterivEXT); \
  HookExtension(PFNGLMULTITEXIMAGE3DEXTPROC, glMultiTexImage3DEXT); \
  HookExtension(PFNGLMULTITEXSUBIMAGE3DEXTPROC, glMultiTexSubImage3DEXT); \
  HookExtension(PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC, glCopyMultiTexSubImage3DEXT); \
  HookExtension(PFNGLGETFLOATINDEXEDVEXTPROC, glGetFloatIndexedvEXT); \
  HookExtension(PFNGLGETDOUBLEINDEXEDVEXTPROC, glGetDoubleIndexedvEXT); \
  HookExtension(PFNGLGETPOINTERINDEXEDVEXTPROC, glGetPointerIndexedvEXT); \
  HookExtension(PFNGLGETINTEGERINDEXEDVEXTPROC, glGetIntegerIndexedvEXT); \
  HookExtension(PFNGLGETBOOLEANINDEXEDVEXTPROC, glGetBooleanIndexedvEXT); \
  HookExtension(PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC, glCompressedTextureImage3DEXT); \
  HookExtension(PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC, glCompressedTextureImage2DEXT); \
  HookExtension(PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC, glCompressedTextureImage1DEXT); \
  HookExtension(PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC, glCompressedTextureSubImage3DEXT); \
  HookExtension(PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC, glCompressedTextureSubImage2DEXT); \
  HookExtension(PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC, glCompressedTextureSubImage1DEXT); \
  HookExtension(PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC, glGetCompressedTextureImageEXT); \
  HookExtension(PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC, glCompressedMultiTexImage3DEXT); \
  HookExtension(PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC, glCompressedMultiTexImage2DEXT); \
  HookExtension(PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC, glCompressedMultiTexImage1DEXT); \
  HookExtension(PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC, glCompressedMultiTexSubImage3DEXT); \
  HookExtension(PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC, glCompressedMultiTexSubImage2DEXT); \
  HookExtension(PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC, glCompressedMultiTexSubImage1DEXT); \
  HookExtension(PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC, glGetCompressedMultiTexImageEXT); \
  HookExtension(PFNGLNAMEDBUFFERDATAEXTPROC, glNamedBufferDataEXT); \
  HookExtension(PFNGLNAMEDBUFFERSUBDATAEXTPROC, glNamedBufferSubDataEXT); \
  HookExtension(PFNGLGETNAMEDBUFFERSUBDATAEXTPROC, glGetNamedBufferSubDataEXT); \
  HookExtension(PFNGLTEXTUREBUFFEREXTPROC, glTextureBufferEXT); \
  HookExtension(PFNGLMULTITEXBUFFEREXTPROC, glMultiTexBufferEXT); \
  HookExtension(PFNGLTEXTUREPARAMETERIIVEXTPROC, glTextureParameterIivEXT); \
  HookExtension(PFNGLTEXTUREPARAMETERIUIVEXTPROC, glTextureParameterIuivEXT); \
  HookExtension(PFNGLGETTEXTUREPARAMETERIIVEXTPROC, glGetTextureParameterIivEXT); \
  HookExtension(PFNGLGETTEXTUREPARAMETERIUIVEXTPROC, glGetTextureParameterIuivEXT); \
  HookExtension(PFNGLMULTITEXPARAMETERIIVEXTPROC, glMultiTexParameterIivEXT); \
  HookExtension(PFNGLMULTITEXPARAMETERIUIVEXTPROC, glMultiTexParameterIuivEXT); \
  HookExtension(PFNGLGETMULTITEXPARAMETERIIVEXTPROC, glGetMultiTexParameterIivEXT); \
  HookExtension(PFNGLGETMULTITEXPARAMETERIUIVEXTPROC, glGetMultiTexParameterIuivEXT); \
  HookExtension(PFNGLGETPOINTERI_VEXTPROC, glGetPointeri_vEXT); \
  HookExtension(PFNGLGETNAMEDPROGRAMIVEXTPROC, glGetNamedProgramivEXT); \
  HookExtension(PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC, glNamedFramebufferTexture1DEXT); \
  HookExtension(PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC, glNamedFramebufferTexture2DEXT); \
  HookExtension(PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC, glNamedFramebufferTexture3DEXT); \
  HookExtension(PFNGLGENERATETEXTUREMIPMAPEXTPROC, glGenerateTextureMipmapEXT); \
  HookExtension(PFNGLGENERATEMULTITEXMIPMAPEXTPROC, glGenerateMultiTexMipmapEXT); \
  HookExtension(PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC, glNamedCopyBufferSubDataEXT); \
  HookExtension(PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC, glVertexArrayVertexAttribOffsetEXT); \
  HookExtension(PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC, glVertexArrayVertexAttribIOffsetEXT); \
  HookExtension(PFNGLGETVERTEXARRAYINTEGERVEXTPROC, glGetVertexArrayIntegervEXT); \
  HookExtension(PFNGLGETVERTEXARRAYPOINTERVEXTPROC, glGetVertexArrayPointervEXT); \
  HookExtension(PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC, glGetVertexArrayIntegeri_vEXT); \
  HookExtension(PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC, glGetVertexArrayPointeri_vEXT); \
  HookExtension(PFNGLMAPNAMEDBUFFERRANGEEXTPROC, glMapNamedBufferRangeEXT); \
  HookExtension(PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC, glFlushMappedNamedBufferRangeEXT); \
  HookExtension(PFNGLNAMEDBUFFERSTORAGEEXTPROC, glNamedBufferStorageEXT); \
  HookExtension(PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC, glClearNamedBufferSubDataEXT); \
  HookExtension(PFNGLTEXTUREBUFFERRANGEEXTPROC, glTextureBufferRangeEXT); \
  HookExtension(PFNGLTEXTURESTORAGE1DEXTPROC, glTextureStorage1DEXT); \
  HookExtension(PFNGLTEXTURESTORAGE2DEXTPROC, glTextureStorage2DEXT); \
  HookExtension(PFNGLTEXTURESTORAGE3DEXTPROC, glTextureStorage3DEXT); \
  HookExtension(PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC, glTextureStorage2DMultisampleEXT); \
  HookExtension(PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC, glTextureStorage3DMultisampleEXT); \
  HookExtension(PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC, glVertexArrayVertexAttribLOffsetEXT); \
  HookExtension(PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC, glVertexArrayVertexAttribDivisorEXT); \
  HookExtension(PFNGLPOLYGONOFFSETCLAMPEXTPROC, glPolygonOffsetClampEXT); \
  HookExtension(PFNGLRASTERSAMPLESEXTPROC, glRasterSamplesEXT); \
  HookExtension(PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC, glFramebufferTextureMultiviewOVR); \
  HookExtension(PFNGLDEPTHBOUNDSEXTPROC, glDepthBoundsEXT); \
  HookExtension(PFNGLFRAMETERMINATORGREMEDYPROC, glFrameTerminatorGREMEDY); \
  HookExtension(PFNGLSTRINGMARKERGREMEDYPROC, glStringMarkerGREMEDY); \
  HookExtension(PFNGLBLENDBARRIERPROC, glBlendBarrier); \
  HookExtension(PFNGLPRIMITIVEBOUNDINGBOXPROC, glPrimitiveBoundingBox); \
  HookExtensionAlias(PFNGLPRIMITIVEBOUNDINGBOXPROC, glPrimitiveBoundingBox, glPrimitiveBoundingBoxEXT); \
  HookExtensionAlias(PFNGLPRIMITIVEBOUNDINGBOXPROC, glPrimitiveBoundingBox, glPrimitiveBoundingBoxOES); \
  HookExtension(PFNGLDEPTHRANGEARRAYFVOESPROC, glDepthRangeArrayfvOES); \
  HookExtensionAlias(PFNGLDEPTHRANGEARRAYFVOESPROC, glDepthRangeArrayfvOES, glDepthRangeArrayfvNV); \
  HookExtension(PFNGLDEPTHRANGEINDEXEDFOESPROC, glDepthRangeIndexedfOES); \
  HookExtensionAlias(PFNGLDEPTHRANGEINDEXEDFOESPROC, glDepthRangeIndexedfOES, glDepthRangeIndexedfNV); \
  HookExtension(PFNGLDISCARDFRAMEBUFFEREXTPROC, glDiscardFramebufferEXT); \
  HookExtension(PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC, glFramebufferTexture2DMultisampleEXT); \
  HookExtension(PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC, glFramebufferTextureMultisampleMultiviewOVR); \
  HookExtension(PFNWGLDXSETRESOURCESHAREHANDLENVPROC, wglDXSetResourceShareHandleNV); \
  HookExtension(PFNWGLDXOPENDEVICENVPROC, wglDXOpenDeviceNV); \
  HookExtension(PFNWGLDXCLOSEDEVICENVPROC, wglDXCloseDeviceNV); \
  HookExtension(PFNWGLDXREGISTEROBJECTNVPROC, wglDXRegisterObjectNV); \
  HookExtension(PFNWGLDXUNREGISTEROBJECTNVPROC, wglDXUnregisterObjectNV); \
  HookExtension(PFNWGLDXOBJECTACCESSNVPROC, wglDXObjectAccessNV); \
  HookExtension(PFNWGLDXLOCKOBJECTSNVPROC, wglDXLockObjectsNV); \
  HookExtension(PFNWGLDXUNLOCKOBJECTSNVPROC, wglDXUnlockObjectsNV); \
  HookExtension(PFNGLCULLFACEPROC, glCullFace); \
  HookExtension(PFNGLFRONTFACEPROC, glFrontFace); \
  HookExtension(PFNGLHINTPROC, glHint); \
  HookExtension(PFNGLLINEWIDTHPROC, glLineWidth); \
  HookExtension(PFNGLPOINTSIZEPROC, glPointSize); \
  HookExtension(PFNGLPOLYGONMODEPROC, glPolygonMode); \
  HookExtension(PFNGLSCISSORPROC, glScissor); \
  HookExtension(PFNGLTEXPARAMETERFPROC, glTexParameterf); \
  HookExtension(PFNGLTEXPARAMETERFVPROC, glTexParameterfv); \
  HookExtension(PFNGLTEXPARAMETERIPROC, glTexParameteri); \
  HookExtension(PFNGLTEXPARAMETERIVPROC, glTexParameteriv); \
  HookExtension(PFNGLTEXIMAGE1DPROC, glTexImage1D); \
  HookExtension(PFNGLTEXIMAGE2DPROC, glTexImage2D); \
  HookExtension(PFNGLDRAWBUFFERPROC, glDrawBuffer); \
  HookExtension(PFNGLCLEARPROC, glClear); \
  HookExtension(PFNGLCLEARCOLORPROC, glClearColor); \
  HookExtension(PFNGLCLEARSTENCILPROC, glClearStencil); \
  HookExtension(PFNGLCLEARDEPTHPROC, glClearDepth); \
  HookExtension(PFNGLSTENCILMASKPROC, glStencilMask); \
  HookExtension(PFNGLCOLORMASKPROC, glColorMask); \
  HookExtension(PFNGLDEPTHMASKPROC, glDepthMask); \
  HookExtension(PFNGLDISABLEPROC, glDisable); \
  HookExtension(PFNGLENABLEPROC, glEnable); \
  HookExtension(PFNGLFINISHPROC, glFinish); \
  HookExtension(PFNGLFLUSHPROC, glFlush); \
  HookExtension(PFNGLBLENDFUNCPROC, glBlendFunc); \
  HookExtension(PFNGLLOGICOPPROC, glLogicOp); \
  HookExtension(PFNGLSTENCILFUNCPROC, glStencilFunc); \
  HookExtension(PFNGLSTENCILOPPROC, glStencilOp); \
  HookExtension(PFNGLDEPTHFUNCPROC, glDepthFunc); \
  HookExtension(PFNGLPIXELSTOREFPROC, glPixelStoref); \
  HookExtension(PFNGLPIXELSTOREIPROC, glPixelStorei); \
  HookExtension(PFNGLREADBUFFERPROC, glReadBuffer); \
  HookExtension(PFNGLREADPIXELSPROC, glReadPixels); \
  HookExtension(PFNGLGETBOOLEANVPROC, glGetBooleanv); \
  HookExtension(PFNGLGETDOUBLEVPROC, glGetDoublev); \
  HookExtension(PFNGLGETERRORPROC, glGetError); \
  HookExtension(PFNGLGETFLOATVPROC, glGetFloatv); \
  HookExtension(PFNGLGETINTEGERVPROC, glGetIntegerv); \
  HookExtension(PFNGLGETSTRINGPROC, glGetString); \
  HookExtension(PFNGLGETTEXIMAGEPROC, glGetTexImage); \
  HookExtension(PFNGLGETTEXPARAMETERFVPROC, glGetTexParameterfv); \
  HookExtension(PFNGLGETTEXPARAMETERIVPROC, glGetTexParameteriv); \
  HookExtension(PFNGLGETTEXLEVELPARAMETERFVPROC, glGetTexLevelParameterfv); \
  HookExtension(PFNGLGETTEXLEVELPARAMETERIVPROC, glGetTexLevelParameteriv); \
  HookExtension(PFNGLISENABLEDPROC, glIsEnabled); \
  HookExtension(PFNGLDEPTHRANGEPROC, glDepthRange); \
  HookExtension(PFNGLVIEWPORTPROC, glViewport); \
  HookExtension(PFNGLDRAWARRAYSPROC, glDrawArrays); \
  HookExtension(PFNGLDRAWELEMENTSPROC, glDrawElements); \
  HookExtension(PFNGLGETPOINTERVPROC, glGetPointerv); \
  HookExtensionAlias(PFNGLGETPOINTERVPROC, glGetPointerv, glGetPointervKHR); \
  HookExtension(PFNGLPOLYGONOFFSETPROC, glPolygonOffset); \
  HookExtension(PFNGLCOPYTEXIMAGE1DPROC, glCopyTexImage1D); \
  HookExtension(PFNGLCOPYTEXIMAGE2DPROC, glCopyTexImage2D); \
  HookExtension(PFNGLCOPYTEXSUBIMAGE1DPROC, glCopyTexSubImage1D); \
  HookExtension(PFNGLCOPYTEXSUBIMAGE2DPROC, glCopyTexSubImage2D); \
  HookExtension(PFNGLTEXSUBIMAGE1DPROC, glTexSubImage1D); \
  HookExtension(PFNGLTEXSUBIMAGE2DPROC, glTexSubImage2D); \
  HookExtension(PFNGLBINDTEXTUREPROC, glBindTexture); \
  HookExtension(PFNGLDELETETEXTURESPROC, glDeleteTextures); \
  HookExtension(PFNGLGENTEXTURESPROC, glGenTextures); \
  HookExtension(PFNGLISTEXTUREPROC, glIsTexture); \



// dllexport functions
#define DefineDLLExportHooks() \
    HookWrapper1(void, glCullFace, GLenum, mode); \
    HookWrapper1(void, glFrontFace, GLenum, mode); \
    HookWrapper2(void, glHint, GLenum, target, GLenum, mode); \
    HookWrapper1(void, glLineWidth, GLfloat, width); \
    HookWrapper1(void, glPointSize, GLfloat, size); \
    HookWrapper2(void, glPolygonMode, GLenum, face, GLenum, mode); \
    HookWrapper4(void, glScissor, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper3(void, glTexParameterf, GLenum, target, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, glTexParameterfv, GLenum, target, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glTexParameteri, GLenum, target, GLenum, pname, GLint, param); \
    HookWrapper3(void, glTexParameteriv, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper8(void, glTexImage1D, GLenum, target, GLint, level, GLint, internalformat, GLsizei, width, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper9(void, glTexImage2D, GLenum, target, GLint, level, GLint, internalformat, GLsizei, width, GLsizei, height, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper1(void, glDrawBuffer, GLenum, buf); \
    HookWrapper1(void, glClear, GLbitfield, mask); \
    HookWrapper4(void, glClearColor, GLfloat, red, GLfloat, green, GLfloat, blue, GLfloat, alpha); \
    HookWrapper1(void, glClearStencil, GLint, s); \
    HookWrapper1(void, glClearDepth, GLdouble, depth); \
    HookWrapper1(void, glStencilMask, GLuint, mask); \
    HookWrapper4(void, glColorMask, GLboolean, red, GLboolean, green, GLboolean, blue, GLboolean, alpha); \
    HookWrapper1(void, glDepthMask, GLboolean, flag); \
    HookWrapper1(void, glDisable, GLenum, cap); \
    HookWrapper1(void, glEnable, GLenum, cap); \
    HookWrapper0(void, glFinish); \
    HookWrapper0(void, glFlush); \
    HookWrapper2(void, glBlendFunc, GLenum, sfactor, GLenum, dfactor); \
    HookWrapper1(void, glLogicOp, GLenum, opcode); \
    HookWrapper3(void, glStencilFunc, GLenum, func, GLint, ref, GLuint, mask); \
    HookWrapper3(void, glStencilOp, GLenum, fail, GLenum, zfail, GLenum, zpass); \
    HookWrapper1(void, glDepthFunc, GLenum, func); \
    HookWrapper2(void, glPixelStoref, GLenum, pname, GLfloat, param); \
    HookWrapper2(void, glPixelStorei, GLenum, pname, GLint, param); \
    HookWrapper1(void, glReadBuffer, GLenum, src); \
    HookWrapper7(void, glReadPixels, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, void *, pixels); \
    HookWrapper2(void, glGetBooleanv, GLenum, pname, GLboolean *, data); \
    HookWrapper2(void, glGetDoublev, GLenum, pname, GLdouble *, data); \
    HookWrapper0(GLenum, glGetError); \
    HookWrapper2(void, glGetFloatv, GLenum, pname, GLfloat *, data); \
    HookWrapper2(void, glGetIntegerv, GLenum, pname, GLint *, data); \
    HookWrapper1(const GLubyte *, glGetString, GLenum, name); \
    HookWrapper5(void, glGetTexImage, GLenum, target, GLint, level, GLenum, format, GLenum, type, void *, pixels); \
    HookWrapper3(void, glGetTexParameterfv, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetTexParameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetTexLevelParameterfv, GLenum, target, GLint, level, GLenum, pname, GLfloat *, params); \
    HookWrapper4(void, glGetTexLevelParameteriv, GLenum, target, GLint, level, GLenum, pname, GLint *, params); \
    HookWrapper1(GLboolean, glIsEnabled, GLenum, cap); \
    HookWrapper2(void, glDepthRange, GLdouble, near, GLdouble, far); \
    HookWrapper4(void, glViewport, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper3(void, glDrawArrays, GLenum, mode, GLint, first, GLsizei, count); \
    HookWrapper4(void, glDrawElements, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices); \
    HookAliasWrapper2(void, glGetPointervKHR, glGetPointerv, GLenum, pname, void **, params); \
    HookWrapper2(void, glGetPointerv, GLenum, pname, void **, params); \
    HookWrapper2(void, glPolygonOffset, GLfloat, factor, GLfloat, units); \
    HookWrapper7(void, glCopyTexImage1D, GLenum, target, GLint, level, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width, GLint, border); \
    HookWrapper8(void, glCopyTexImage2D, GLenum, target, GLint, level, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLint, border); \
    HookWrapper6(void, glCopyTexSubImage1D, GLenum, target, GLint, level, GLint, xoffset, GLint, x, GLint, y, GLsizei, width); \
    HookWrapper8(void, glCopyTexSubImage2D, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper7(void, glTexSubImage1D, GLenum, target, GLint, level, GLint, xoffset, GLsizei, width, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper9(void, glTexSubImage2D, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper2(void, glBindTexture, GLenum, target, GLuint, texture); \
    HookWrapper2(void, glDeleteTextures, GLsizei, n, const GLuint *, textures); \
    HookWrapper2(void, glGenTextures, GLsizei, n, GLuint *, textures); \
    HookWrapper1(GLboolean, glIsTexture, GLuint, texture); \



// gl extensions
#define DefineGLExtensionHooks() \
    HookAliasWrapper6(void, glDrawRangeElementsEXT, glDrawRangeElements, GLenum, mode, GLuint, start, GLuint, end, GLsizei, count, GLenum, type, const void *, indices); \
    HookWrapper6(void, glDrawRangeElements, GLenum, mode, GLuint, start, GLuint, end, GLsizei, count, GLenum, type, const void *, indices); \
    HookAliasWrapper10(void, glTexImage3DEXT, glTexImage3D, GLenum, target, GLint, level, GLint, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookAliasWrapper10(void, glTexImage3DOES, glTexImage3D, GLenum, target, GLint, level, GLint, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper10(void, glTexImage3D, GLenum, target, GLint, level, GLint, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookAliasWrapper11(void, glTexSubImage3DOES, glTexSubImage3D, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper11(void, glTexSubImage3D, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLenum, type, const void *, pixels); \
    HookAliasWrapper9(void, glCopyTexSubImage3DOES, glCopyTexSubImage3D, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper9(void, glCopyTexSubImage3D, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookAliasWrapper1(void, glActiveTextureARB, glActiveTexture, GLenum, texture); \
    HookWrapper1(void, glActiveTexture, GLenum, texture); \
    HookAliasWrapper2(void, glSampleCoverageARB, glSampleCoverage, GLfloat, value, GLboolean, invert); \
    HookWrapper2(void, glSampleCoverage, GLfloat, value, GLboolean, invert); \
    HookAliasWrapper9(void, glCompressedTexImage3DARB, glCompressedTexImage3D, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLsizei, imageSize, const void *, data); \
    HookAliasWrapper9(void, glCompressedTexImage3DOES, glCompressedTexImage3D, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLsizei, imageSize, const void *, data); \
    HookWrapper9(void, glCompressedTexImage3D, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLsizei, imageSize, const void *, data); \
    HookAliasWrapper8(void, glCompressedTexImage2DARB, glCompressedTexImage2D, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLint, border, GLsizei, imageSize, const void *, data); \
    HookWrapper8(void, glCompressedTexImage2D, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLint, border, GLsizei, imageSize, const void *, data); \
    HookAliasWrapper7(void, glCompressedTexImage1DARB, glCompressedTexImage1D, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLint, border, GLsizei, imageSize, const void *, data); \
    HookWrapper7(void, glCompressedTexImage1D, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLint, border, GLsizei, imageSize, const void *, data); \
    HookAliasWrapper11(void, glCompressedTexSubImage3DARB, glCompressedTexSubImage3D, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLsizei, imageSize, const void *, data); \
    HookAliasWrapper11(void, glCompressedTexSubImage3DOES, glCompressedTexSubImage3D, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLsizei, imageSize, const void *, data); \
    HookWrapper11(void, glCompressedTexSubImage3D, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLsizei, imageSize, const void *, data); \
    HookAliasWrapper9(void, glCompressedTexSubImage2DARB, glCompressedTexSubImage2D, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLsizei, width, GLsizei, height, GLenum, format, GLsizei, imageSize, const void *, data); \
    HookWrapper9(void, glCompressedTexSubImage2D, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLsizei, width, GLsizei, height, GLenum, format, GLsizei, imageSize, const void *, data); \
    HookAliasWrapper7(void, glCompressedTexSubImage1DARB, glCompressedTexSubImage1D, GLenum, target, GLint, level, GLint, xoffset, GLsizei, width, GLenum, format, GLsizei, imageSize, const void *, data); \
    HookWrapper7(void, glCompressedTexSubImage1D, GLenum, target, GLint, level, GLint, xoffset, GLsizei, width, GLenum, format, GLsizei, imageSize, const void *, data); \
    HookAliasWrapper3(void, glGetCompressedTexImageARB, glGetCompressedTexImage, GLenum, target, GLint, level, void *, img); \
    HookWrapper3(void, glGetCompressedTexImage, GLenum, target, GLint, level, void *, img); \
    HookAliasWrapper4(void, glBlendFuncSeparateARB, glBlendFuncSeparate, GLenum, sfactorRGB, GLenum, dfactorRGB, GLenum, sfactorAlpha, GLenum, dfactorAlpha); \
    HookWrapper4(void, glBlendFuncSeparate, GLenum, sfactorRGB, GLenum, dfactorRGB, GLenum, sfactorAlpha, GLenum, dfactorAlpha); \
    HookAliasWrapper4(void, glMultiDrawArraysEXT, glMultiDrawArrays, GLenum, mode, const GLint *, first, const GLsizei *, count, GLsizei, drawcount); \
    HookWrapper4(void, glMultiDrawArrays, GLenum, mode, const GLint *, first, const GLsizei *, count, GLsizei, drawcount); \
    HookWrapper5(void, glMultiDrawElements, GLenum, mode, const GLsizei *, count, GLenum, type, const void *const*, indices, GLsizei, drawcount); \
    HookAliasWrapper2(void, glPointParameterfARB, glPointParameterf, GLenum, pname, GLfloat, param); \
    HookAliasWrapper2(void, glPointParameterfEXT, glPointParameterf, GLenum, pname, GLfloat, param); \
    HookWrapper2(void, glPointParameterf, GLenum, pname, GLfloat, param); \
    HookAliasWrapper2(void, glPointParameterfvARB, glPointParameterfv, GLenum, pname, const GLfloat *, params); \
    HookAliasWrapper2(void, glPointParameterfvEXT, glPointParameterfv, GLenum, pname, const GLfloat *, params); \
    HookWrapper2(void, glPointParameterfv, GLenum, pname, const GLfloat *, params); \
    HookWrapper2(void, glPointParameteri, GLenum, pname, GLint, param); \
    HookWrapper2(void, glPointParameteriv, GLenum, pname, const GLint *, params); \
    HookAliasWrapper4(void, glBlendColorEXT, glBlendColor, GLfloat, red, GLfloat, green, GLfloat, blue, GLfloat, alpha); \
    HookWrapper4(void, glBlendColor, GLfloat, red, GLfloat, green, GLfloat, blue, GLfloat, alpha); \
    HookAliasWrapper1(void, glBlendEquationEXT, glBlendEquation, GLenum, mode); \
    HookWrapper1(void, glBlendEquation, GLenum, mode); \
    HookAliasWrapper2(void, glGenQueriesARB, glGenQueries, GLsizei, n, GLuint *, ids); \
    HookAliasWrapper2(void, glGenQueriesEXT, glGenQueries, GLsizei, n, GLuint *, ids); \
    HookWrapper2(void, glGenQueries, GLsizei, n, GLuint *, ids); \
    HookAliasWrapper2(void, glDeleteQueriesARB, glDeleteQueries, GLsizei, n, const GLuint *, ids); \
    HookAliasWrapper2(void, glDeleteQueriesEXT, glDeleteQueries, GLsizei, n, const GLuint *, ids); \
    HookWrapper2(void, glDeleteQueries, GLsizei, n, const GLuint *, ids); \
    HookAliasWrapper1(GLboolean, glIsQueryARB, glIsQuery, GLuint, id); \
    HookAliasWrapper1(GLboolean, glIsQueryEXT, glIsQuery, GLuint, id); \
    HookWrapper1(GLboolean, glIsQuery, GLuint, id); \
    HookAliasWrapper2(void, glBeginQueryARB, glBeginQuery, GLenum, target, GLuint, id); \
    HookAliasWrapper2(void, glBeginQueryEXT, glBeginQuery, GLenum, target, GLuint, id); \
    HookWrapper2(void, glBeginQuery, GLenum, target, GLuint, id); \
    HookAliasWrapper1(void, glEndQueryARB, glEndQuery, GLenum, target); \
    HookAliasWrapper1(void, glEndQueryEXT, glEndQuery, GLenum, target); \
    HookWrapper1(void, glEndQuery, GLenum, target); \
    HookAliasWrapper3(void, glGetQueryivARB, glGetQueryiv, GLenum, target, GLenum, pname, GLint *, params); \
    HookAliasWrapper3(void, glGetQueryivEXT, glGetQueryiv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetQueryiv, GLenum, target, GLenum, pname, GLint *, params); \
    HookAliasWrapper3(void, glGetQueryObjectivARB, glGetQueryObjectiv, GLuint, id, GLenum, pname, GLint *, params); \
    HookAliasWrapper3(void, glGetQueryObjectivEXT, glGetQueryObjectiv, GLuint, id, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetQueryObjectiv, GLuint, id, GLenum, pname, GLint *, params); \
    HookAliasWrapper3(void, glGetQueryObjectuivARB, glGetQueryObjectuiv, GLuint, id, GLenum, pname, GLuint *, params); \
    HookAliasWrapper3(void, glGetQueryObjectuivEXT, glGetQueryObjectuiv, GLuint, id, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, glGetQueryObjectuiv, GLuint, id, GLenum, pname, GLuint *, params); \
    HookAliasWrapper2(void, glBindBufferARB, glBindBuffer, GLenum, target, GLuint, buffer); \
    HookWrapper2(void, glBindBuffer, GLenum, target, GLuint, buffer); \
    HookAliasWrapper2(void, glDeleteBuffersARB, glDeleteBuffers, GLsizei, n, const GLuint *, buffers); \
    HookWrapper2(void, glDeleteBuffers, GLsizei, n, const GLuint *, buffers); \
    HookAliasWrapper2(void, glGenBuffersARB, glGenBuffers, GLsizei, n, GLuint *, buffers); \
    HookWrapper2(void, glGenBuffers, GLsizei, n, GLuint *, buffers); \
    HookAliasWrapper1(GLboolean, glIsBufferARB, glIsBuffer, GLuint, buffer); \
    HookWrapper1(GLboolean, glIsBuffer, GLuint, buffer); \
    HookAliasWrapper4(void, glBufferDataARB, glBufferData, GLenum, target, GLsizeiptr, size, const void *, data, GLenum, usage); \
    HookWrapper4(void, glBufferData, GLenum, target, GLsizeiptr, size, const void *, data, GLenum, usage); \
    HookAliasWrapper4(void, glBufferSubDataARB, glBufferSubData, GLenum, target, GLintptr, offset, GLsizeiptr, size, const void *, data); \
    HookWrapper4(void, glBufferSubData, GLenum, target, GLintptr, offset, GLsizeiptr, size, const void *, data); \
    HookAliasWrapper4(void, glGetBufferSubDataARB, glGetBufferSubData, GLenum, target, GLintptr, offset, GLsizeiptr, size, void *, data); \
    HookWrapper4(void, glGetBufferSubData, GLenum, target, GLintptr, offset, GLsizeiptr, size, void *, data); \
    HookAliasWrapper2(void *, glMapBufferARB, glMapBuffer, GLenum, target, GLenum, access); \
    HookAliasWrapper2(void *, glMapBufferOES, glMapBuffer, GLenum, target, GLenum, access); \
    HookWrapper2(void *, glMapBuffer, GLenum, target, GLenum, access); \
    HookAliasWrapper1(GLboolean, glUnmapBufferARB, glUnmapBuffer, GLenum, target); \
    HookAliasWrapper1(GLboolean, glUnmapBufferOES, glUnmapBuffer, GLenum, target); \
    HookWrapper1(GLboolean, glUnmapBuffer, GLenum, target); \
    HookAliasWrapper3(void, glGetBufferParameterivARB, glGetBufferParameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetBufferParameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookAliasWrapper3(void, glGetBufferPointervARB, glGetBufferPointerv, GLenum, target, GLenum, pname, void **, params); \
    HookAliasWrapper3(void, glGetBufferPointervOES, glGetBufferPointerv, GLenum, target, GLenum, pname, void **, params); \
    HookWrapper3(void, glGetBufferPointerv, GLenum, target, GLenum, pname, void **, params); \
    HookAliasWrapper2(void, glBlendEquationSeparateARB, glBlendEquationSeparate, GLenum, modeRGB, GLenum, modeAlpha); \
    HookAliasWrapper2(void, glBlendEquationSeparateEXT, glBlendEquationSeparate, GLenum, modeRGB, GLenum, modeAlpha); \
    HookWrapper2(void, glBlendEquationSeparate, GLenum, modeRGB, GLenum, modeAlpha); \
    HookAliasWrapper2(void, glDrawBuffersARB, glDrawBuffers, GLsizei, n, const GLenum *, bufs); \
    HookAliasWrapper2(void, glDrawBuffersEXT, glDrawBuffers, GLsizei, n, const GLenum *, bufs); \
    HookWrapper2(void, glDrawBuffers, GLsizei, n, const GLenum *, bufs); \
    HookWrapper4(void, glStencilOpSeparate, GLenum, face, GLenum, sfail, GLenum, dpfail, GLenum, dppass); \
    HookWrapper4(void, glStencilFuncSeparate, GLenum, face, GLenum, func, GLint, ref, GLuint, mask); \
    HookWrapper2(void, glStencilMaskSeparate, GLenum, face, GLuint, mask); \
    HookWrapper2(void, glAttachShader, GLuint, program, GLuint, shader); \
    HookWrapper3(void, glBindAttribLocation, GLuint, program, GLuint, index, const GLchar *, name); \
    HookWrapper1(void, glCompileShader, GLuint, shader); \
    HookWrapper0(GLuint, glCreateProgram); \
    HookWrapper1(GLuint, glCreateShader, GLenum, type); \
    HookWrapper1(void, glDeleteProgram, GLuint, program); \
    HookWrapper1(void, glDeleteShader, GLuint, shader); \
    HookWrapper2(void, glDetachShader, GLuint, program, GLuint, shader); \
    HookAliasWrapper1(void, glDisableVertexAttribArrayARB, glDisableVertexAttribArray, GLuint, index); \
    HookWrapper1(void, glDisableVertexAttribArray, GLuint, index); \
    HookAliasWrapper1(void, glEnableVertexAttribArrayARB, glEnableVertexAttribArray, GLuint, index); \
    HookWrapper1(void, glEnableVertexAttribArray, GLuint, index); \
    HookWrapper7(void, glGetActiveAttrib, GLuint, program, GLuint, index, GLsizei, bufSize, GLsizei *, length, GLint *, size, GLenum *, type, GLchar *, name); \
    HookWrapper7(void, glGetActiveUniform, GLuint, program, GLuint, index, GLsizei, bufSize, GLsizei *, length, GLint *, size, GLenum *, type, GLchar *, name); \
    HookWrapper4(void, glGetAttachedShaders, GLuint, program, GLsizei, maxCount, GLsizei *, count, GLuint *, shaders); \
    HookWrapper2(GLint, glGetAttribLocation, GLuint, program, const GLchar *, name); \
    HookWrapper3(void, glGetProgramiv, GLuint, program, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetProgramInfoLog, GLuint, program, GLsizei, bufSize, GLsizei *, length, GLchar *, infoLog); \
    HookWrapper3(void, glGetShaderiv, GLuint, shader, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetShaderInfoLog, GLuint, shader, GLsizei, bufSize, GLsizei *, length, GLchar *, infoLog); \
    HookWrapper4(void, glGetShaderSource, GLuint, shader, GLsizei, bufSize, GLsizei *, length, GLchar *, source); \
    HookWrapper2(GLint, glGetUniformLocation, GLuint, program, const GLchar *, name); \
    HookWrapper3(void, glGetUniformfv, GLuint, program, GLint, location, GLfloat *, params); \
    HookWrapper3(void, glGetUniformiv, GLuint, program, GLint, location, GLint *, params); \
    HookWrapper3(void, glGetVertexAttribdv, GLuint, index, GLenum, pname, GLdouble *, params); \
    HookWrapper3(void, glGetVertexAttribfv, GLuint, index, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetVertexAttribiv, GLuint, index, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetVertexAttribPointerv, GLuint, index, GLenum, pname, void **, pointer); \
    HookWrapper1(GLboolean, glIsProgram, GLuint, program); \
    HookWrapper1(GLboolean, glIsShader, GLuint, shader); \
    HookWrapper1(void, glLinkProgram, GLuint, program); \
    HookWrapper4(void, glShaderSource, GLuint, shader, GLsizei, count, const GLchar *const*, string, const GLint *, length); \
    HookWrapper1(void, glUseProgram, GLuint, program); \
    HookWrapper2(void, glUniform1f, GLint, location, GLfloat, v0); \
    HookWrapper3(void, glUniform2f, GLint, location, GLfloat, v0, GLfloat, v1); \
    HookWrapper4(void, glUniform3f, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2); \
    HookWrapper5(void, glUniform4f, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2, GLfloat, v3); \
    HookWrapper2(void, glUniform1i, GLint, location, GLint, v0); \
    HookWrapper3(void, glUniform2i, GLint, location, GLint, v0, GLint, v1); \
    HookWrapper4(void, glUniform3i, GLint, location, GLint, v0, GLint, v1, GLint, v2); \
    HookWrapper5(void, glUniform4i, GLint, location, GLint, v0, GLint, v1, GLint, v2, GLint, v3); \
    HookWrapper3(void, glUniform1fv, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper3(void, glUniform2fv, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper3(void, glUniform3fv, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper3(void, glUniform4fv, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper3(void, glUniform1iv, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper3(void, glUniform2iv, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper3(void, glUniform3iv, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper3(void, glUniform4iv, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, glUniformMatrix2fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, glUniformMatrix3fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, glUniformMatrix4fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper1(void, glValidateProgram, GLuint, program); \
    HookAliasWrapper2(void, glVertexAttrib1dARB, glVertexAttrib1d, GLuint, index, GLdouble, x); \
    HookWrapper2(void, glVertexAttrib1d, GLuint, index, GLdouble, x); \
    HookAliasWrapper2(void, glVertexAttrib1dvARB, glVertexAttrib1dv, GLuint, index, const GLdouble *, v); \
    HookWrapper2(void, glVertexAttrib1dv, GLuint, index, const GLdouble *, v); \
    HookAliasWrapper2(void, glVertexAttrib1fARB, glVertexAttrib1f, GLuint, index, GLfloat, x); \
    HookWrapper2(void, glVertexAttrib1f, GLuint, index, GLfloat, x); \
    HookAliasWrapper2(void, glVertexAttrib1fvARB, glVertexAttrib1fv, GLuint, index, const GLfloat *, v); \
    HookWrapper2(void, glVertexAttrib1fv, GLuint, index, const GLfloat *, v); \
    HookAliasWrapper2(void, glVertexAttrib1sARB, glVertexAttrib1s, GLuint, index, GLshort, x); \
    HookWrapper2(void, glVertexAttrib1s, GLuint, index, GLshort, x); \
    HookAliasWrapper2(void, glVertexAttrib1svARB, glVertexAttrib1sv, GLuint, index, const GLshort *, v); \
    HookWrapper2(void, glVertexAttrib1sv, GLuint, index, const GLshort *, v); \
    HookAliasWrapper3(void, glVertexAttrib2dARB, glVertexAttrib2d, GLuint, index, GLdouble, x, GLdouble, y); \
    HookWrapper3(void, glVertexAttrib2d, GLuint, index, GLdouble, x, GLdouble, y); \
    HookAliasWrapper2(void, glVertexAttrib2dvARB, glVertexAttrib2dv, GLuint, index, const GLdouble *, v); \
    HookWrapper2(void, glVertexAttrib2dv, GLuint, index, const GLdouble *, v); \
    HookAliasWrapper3(void, glVertexAttrib2fARB, glVertexAttrib2f, GLuint, index, GLfloat, x, GLfloat, y); \
    HookWrapper3(void, glVertexAttrib2f, GLuint, index, GLfloat, x, GLfloat, y); \
    HookAliasWrapper2(void, glVertexAttrib2fvARB, glVertexAttrib2fv, GLuint, index, const GLfloat *, v); \
    HookWrapper2(void, glVertexAttrib2fv, GLuint, index, const GLfloat *, v); \
    HookAliasWrapper3(void, glVertexAttrib2sARB, glVertexAttrib2s, GLuint, index, GLshort, x, GLshort, y); \
    HookWrapper3(void, glVertexAttrib2s, GLuint, index, GLshort, x, GLshort, y); \
    HookAliasWrapper2(void, glVertexAttrib2svARB, glVertexAttrib2sv, GLuint, index, const GLshort *, v); \
    HookWrapper2(void, glVertexAttrib2sv, GLuint, index, const GLshort *, v); \
    HookAliasWrapper4(void, glVertexAttrib3dARB, glVertexAttrib3d, GLuint, index, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper4(void, glVertexAttrib3d, GLuint, index, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookAliasWrapper2(void, glVertexAttrib3dvARB, glVertexAttrib3dv, GLuint, index, const GLdouble *, v); \
    HookWrapper2(void, glVertexAttrib3dv, GLuint, index, const GLdouble *, v); \
    HookAliasWrapper4(void, glVertexAttrib3fARB, glVertexAttrib3f, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper4(void, glVertexAttrib3f, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookAliasWrapper2(void, glVertexAttrib3fvARB, glVertexAttrib3fv, GLuint, index, const GLfloat *, v); \
    HookWrapper2(void, glVertexAttrib3fv, GLuint, index, const GLfloat *, v); \
    HookAliasWrapper4(void, glVertexAttrib3sARB, glVertexAttrib3s, GLuint, index, GLshort, x, GLshort, y, GLshort, z); \
    HookWrapper4(void, glVertexAttrib3s, GLuint, index, GLshort, x, GLshort, y, GLshort, z); \
    HookAliasWrapper2(void, glVertexAttrib3svARB, glVertexAttrib3sv, GLuint, index, const GLshort *, v); \
    HookWrapper2(void, glVertexAttrib3sv, GLuint, index, const GLshort *, v); \
    HookAliasWrapper2(void, glVertexAttrib4NbvARB, glVertexAttrib4Nbv, GLuint, index, const GLbyte *, v); \
    HookWrapper2(void, glVertexAttrib4Nbv, GLuint, index, const GLbyte *, v); \
    HookAliasWrapper2(void, glVertexAttrib4NivARB, glVertexAttrib4Niv, GLuint, index, const GLint *, v); \
    HookWrapper2(void, glVertexAttrib4Niv, GLuint, index, const GLint *, v); \
    HookAliasWrapper2(void, glVertexAttrib4NsvARB, glVertexAttrib4Nsv, GLuint, index, const GLshort *, v); \
    HookWrapper2(void, glVertexAttrib4Nsv, GLuint, index, const GLshort *, v); \
    HookWrapper5(void, glVertexAttrib4Nub, GLuint, index, GLubyte, x, GLubyte, y, GLubyte, z, GLubyte, w); \
    HookAliasWrapper2(void, glVertexAttrib4NubvARB, glVertexAttrib4Nubv, GLuint, index, const GLubyte *, v); \
    HookWrapper2(void, glVertexAttrib4Nubv, GLuint, index, const GLubyte *, v); \
    HookAliasWrapper2(void, glVertexAttrib4NuivARB, glVertexAttrib4Nuiv, GLuint, index, const GLuint *, v); \
    HookWrapper2(void, glVertexAttrib4Nuiv, GLuint, index, const GLuint *, v); \
    HookAliasWrapper2(void, glVertexAttrib4NusvARB, glVertexAttrib4Nusv, GLuint, index, const GLushort *, v); \
    HookWrapper2(void, glVertexAttrib4Nusv, GLuint, index, const GLushort *, v); \
    HookAliasWrapper2(void, glVertexAttrib4bvARB, glVertexAttrib4bv, GLuint, index, const GLbyte *, v); \
    HookWrapper2(void, glVertexAttrib4bv, GLuint, index, const GLbyte *, v); \
    HookAliasWrapper5(void, glVertexAttrib4dARB, glVertexAttrib4d, GLuint, index, GLdouble, x, GLdouble, y, GLdouble, z, GLdouble, w); \
    HookWrapper5(void, glVertexAttrib4d, GLuint, index, GLdouble, x, GLdouble, y, GLdouble, z, GLdouble, w); \
    HookAliasWrapper2(void, glVertexAttrib4dvARB, glVertexAttrib4dv, GLuint, index, const GLdouble *, v); \
    HookWrapper2(void, glVertexAttrib4dv, GLuint, index, const GLdouble *, v); \
    HookAliasWrapper5(void, glVertexAttrib4fARB, glVertexAttrib4f, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookWrapper5(void, glVertexAttrib4f, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookAliasWrapper2(void, glVertexAttrib4fvARB, glVertexAttrib4fv, GLuint, index, const GLfloat *, v); \
    HookWrapper2(void, glVertexAttrib4fv, GLuint, index, const GLfloat *, v); \
    HookAliasWrapper2(void, glVertexAttrib4ivARB, glVertexAttrib4iv, GLuint, index, const GLint *, v); \
    HookWrapper2(void, glVertexAttrib4iv, GLuint, index, const GLint *, v); \
    HookAliasWrapper5(void, glVertexAttrib4sARB, glVertexAttrib4s, GLuint, index, GLshort, x, GLshort, y, GLshort, z, GLshort, w); \
    HookWrapper5(void, glVertexAttrib4s, GLuint, index, GLshort, x, GLshort, y, GLshort, z, GLshort, w); \
    HookAliasWrapper2(void, glVertexAttrib4svARB, glVertexAttrib4sv, GLuint, index, const GLshort *, v); \
    HookWrapper2(void, glVertexAttrib4sv, GLuint, index, const GLshort *, v); \
    HookAliasWrapper2(void, glVertexAttrib4ubvARB, glVertexAttrib4ubv, GLuint, index, const GLubyte *, v); \
    HookWrapper2(void, glVertexAttrib4ubv, GLuint, index, const GLubyte *, v); \
    HookAliasWrapper2(void, glVertexAttrib4uivARB, glVertexAttrib4uiv, GLuint, index, const GLuint *, v); \
    HookWrapper2(void, glVertexAttrib4uiv, GLuint, index, const GLuint *, v); \
    HookAliasWrapper2(void, glVertexAttrib4usvARB, glVertexAttrib4usv, GLuint, index, const GLushort *, v); \
    HookWrapper2(void, glVertexAttrib4usv, GLuint, index, const GLushort *, v); \
    HookAliasWrapper6(void, glVertexAttribPointerARB, glVertexAttribPointer, GLuint, index, GLint, size, GLenum, type, GLboolean, normalized, GLsizei, stride, const void *, pointer); \
    HookWrapper6(void, glVertexAttribPointer, GLuint, index, GLint, size, GLenum, type, GLboolean, normalized, GLsizei, stride, const void *, pointer); \
    HookWrapper4(void, glUniformMatrix2x3fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, glUniformMatrix3x2fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, glUniformMatrix2x4fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, glUniformMatrix4x2fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, glUniformMatrix3x4fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, glUniformMatrix4x3fv, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookAliasWrapper5(void, glColorMaskiEXT, glColorMaski, GLuint, index, GLboolean, r, GLboolean, g, GLboolean, b, GLboolean, a); \
    HookAliasWrapper5(void, glColorMaskIndexedEXT, glColorMaski, GLuint, index, GLboolean, r, GLboolean, g, GLboolean, b, GLboolean, a); \
    HookAliasWrapper5(void, glColorMaskiOES, glColorMaski, GLuint, index, GLboolean, r, GLboolean, g, GLboolean, b, GLboolean, a); \
    HookWrapper5(void, glColorMaski, GLuint, index, GLboolean, r, GLboolean, g, GLboolean, b, GLboolean, a); \
    HookWrapper3(void, glGetBooleani_v, GLenum, target, GLuint, index, GLboolean *, data); \
    HookWrapper3(void, glGetIntegeri_v, GLenum, target, GLuint, index, GLint *, data); \
    HookAliasWrapper2(void, glEnableiEXT, glEnablei, GLenum, target, GLuint, index); \
    HookAliasWrapper2(void, glEnableIndexedEXT, glEnablei, GLenum, target, GLuint, index); \
    HookAliasWrapper2(void, glEnableiOES, glEnablei, GLenum, target, GLuint, index); \
    HookAliasWrapper2(void, glEnableiNV, glEnablei, GLenum, target, GLuint, index); \
    HookWrapper2(void, glEnablei, GLenum, target, GLuint, index); \
    HookAliasWrapper2(void, glDisableiEXT, glDisablei, GLenum, target, GLuint, index); \
    HookAliasWrapper2(void, glDisableIndexedEXT, glDisablei, GLenum, target, GLuint, index); \
    HookAliasWrapper2(void, glDisableiOES, glDisablei, GLenum, target, GLuint, index); \
    HookAliasWrapper2(void, glDisableiNV, glDisablei, GLenum, target, GLuint, index); \
    HookWrapper2(void, glDisablei, GLenum, target, GLuint, index); \
    HookAliasWrapper2(GLboolean, glIsEnablediEXT, glIsEnabledi, GLenum, target, GLuint, index); \
    HookAliasWrapper2(GLboolean, glIsEnabledIndexedEXT, glIsEnabledi, GLenum, target, GLuint, index); \
    HookAliasWrapper2(GLboolean, glIsEnablediOES, glIsEnabledi, GLenum, target, GLuint, index); \
    HookAliasWrapper2(GLboolean, glIsEnablediNV, glIsEnabledi, GLenum, target, GLuint, index); \
    HookWrapper2(GLboolean, glIsEnabledi, GLenum, target, GLuint, index); \
    HookAliasWrapper1(void, glBeginTransformFeedbackEXT, glBeginTransformFeedback, GLenum, primitiveMode); \
    HookWrapper1(void, glBeginTransformFeedback, GLenum, primitiveMode); \
    HookAliasWrapper0(void, glEndTransformFeedbackEXT, glEndTransformFeedback); \
    HookWrapper0(void, glEndTransformFeedback); \
    HookAliasWrapper5(void, glBindBufferRangeEXT, glBindBufferRange, GLenum, target, GLuint, index, GLuint, buffer, GLintptr, offset, GLsizeiptr, size); \
    HookWrapper5(void, glBindBufferRange, GLenum, target, GLuint, index, GLuint, buffer, GLintptr, offset, GLsizeiptr, size); \
    HookAliasWrapper3(void, glBindBufferBaseEXT, glBindBufferBase, GLenum, target, GLuint, index, GLuint, buffer); \
    HookWrapper3(void, glBindBufferBase, GLenum, target, GLuint, index, GLuint, buffer); \
    HookAliasWrapper4(void, glTransformFeedbackVaryingsEXT, glTransformFeedbackVaryings, GLuint, program, GLsizei, count, const GLchar *const*, varyings, GLenum, bufferMode); \
    HookWrapper4(void, glTransformFeedbackVaryings, GLuint, program, GLsizei, count, const GLchar *const*, varyings, GLenum, bufferMode); \
    HookAliasWrapper7(void, glGetTransformFeedbackVaryingEXT, glGetTransformFeedbackVarying, GLuint, program, GLuint, index, GLsizei, bufSize, GLsizei *, length, GLsizei *, size, GLenum *, type, GLchar *, name); \
    HookWrapper7(void, glGetTransformFeedbackVarying, GLuint, program, GLuint, index, GLsizei, bufSize, GLsizei *, length, GLsizei *, size, GLenum *, type, GLchar *, name); \
    HookAliasWrapper2(void, glClampColorARB, glClampColor, GLenum, target, GLenum, clamp); \
    HookWrapper2(void, glClampColor, GLenum, target, GLenum, clamp); \
    HookWrapper2(void, glBeginConditionalRender, GLuint, id, GLenum, mode); \
    HookWrapper0(void, glEndConditionalRender); \
    HookAliasWrapper5(void, glVertexAttribIPointerEXT, glVertexAttribIPointer, GLuint, index, GLint, size, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper5(void, glVertexAttribIPointer, GLuint, index, GLint, size, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookAliasWrapper3(void, glGetVertexAttribIivEXT, glGetVertexAttribIiv, GLuint, index, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetVertexAttribIiv, GLuint, index, GLenum, pname, GLint *, params); \
    HookAliasWrapper3(void, glGetVertexAttribIuivEXT, glGetVertexAttribIuiv, GLuint, index, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, glGetVertexAttribIuiv, GLuint, index, GLenum, pname, GLuint *, params); \
    HookAliasWrapper2(void, glVertexAttribI1iEXT, glVertexAttribI1i, GLuint, index, GLint, x); \
    HookWrapper2(void, glVertexAttribI1i, GLuint, index, GLint, x); \
    HookAliasWrapper3(void, glVertexAttribI2iEXT, glVertexAttribI2i, GLuint, index, GLint, x, GLint, y); \
    HookWrapper3(void, glVertexAttribI2i, GLuint, index, GLint, x, GLint, y); \
    HookAliasWrapper4(void, glVertexAttribI3iEXT, glVertexAttribI3i, GLuint, index, GLint, x, GLint, y, GLint, z); \
    HookWrapper4(void, glVertexAttribI3i, GLuint, index, GLint, x, GLint, y, GLint, z); \
    HookAliasWrapper5(void, glVertexAttribI4iEXT, glVertexAttribI4i, GLuint, index, GLint, x, GLint, y, GLint, z, GLint, w); \
    HookWrapper5(void, glVertexAttribI4i, GLuint, index, GLint, x, GLint, y, GLint, z, GLint, w); \
    HookAliasWrapper2(void, glVertexAttribI1uiEXT, glVertexAttribI1ui, GLuint, index, GLuint, x); \
    HookWrapper2(void, glVertexAttribI1ui, GLuint, index, GLuint, x); \
    HookAliasWrapper3(void, glVertexAttribI2uiEXT, glVertexAttribI2ui, GLuint, index, GLuint, x, GLuint, y); \
    HookWrapper3(void, glVertexAttribI2ui, GLuint, index, GLuint, x, GLuint, y); \
    HookAliasWrapper4(void, glVertexAttribI3uiEXT, glVertexAttribI3ui, GLuint, index, GLuint, x, GLuint, y, GLuint, z); \
    HookWrapper4(void, glVertexAttribI3ui, GLuint, index, GLuint, x, GLuint, y, GLuint, z); \
    HookAliasWrapper5(void, glVertexAttribI4uiEXT, glVertexAttribI4ui, GLuint, index, GLuint, x, GLuint, y, GLuint, z, GLuint, w); \
    HookWrapper5(void, glVertexAttribI4ui, GLuint, index, GLuint, x, GLuint, y, GLuint, z, GLuint, w); \
    HookAliasWrapper2(void, glVertexAttribI1ivEXT, glVertexAttribI1iv, GLuint, index, const GLint *, v); \
    HookWrapper2(void, glVertexAttribI1iv, GLuint, index, const GLint *, v); \
    HookAliasWrapper2(void, glVertexAttribI2ivEXT, glVertexAttribI2iv, GLuint, index, const GLint *, v); \
    HookWrapper2(void, glVertexAttribI2iv, GLuint, index, const GLint *, v); \
    HookAliasWrapper2(void, glVertexAttribI3ivEXT, glVertexAttribI3iv, GLuint, index, const GLint *, v); \
    HookWrapper2(void, glVertexAttribI3iv, GLuint, index, const GLint *, v); \
    HookAliasWrapper2(void, glVertexAttribI4ivEXT, glVertexAttribI4iv, GLuint, index, const GLint *, v); \
    HookWrapper2(void, glVertexAttribI4iv, GLuint, index, const GLint *, v); \
    HookAliasWrapper2(void, glVertexAttribI1uivEXT, glVertexAttribI1uiv, GLuint, index, const GLuint *, v); \
    HookWrapper2(void, glVertexAttribI1uiv, GLuint, index, const GLuint *, v); \
    HookAliasWrapper2(void, glVertexAttribI2uivEXT, glVertexAttribI2uiv, GLuint, index, const GLuint *, v); \
    HookWrapper2(void, glVertexAttribI2uiv, GLuint, index, const GLuint *, v); \
    HookAliasWrapper2(void, glVertexAttribI3uivEXT, glVertexAttribI3uiv, GLuint, index, const GLuint *, v); \
    HookWrapper2(void, glVertexAttribI3uiv, GLuint, index, const GLuint *, v); \
    HookAliasWrapper2(void, glVertexAttribI4uivEXT, glVertexAttribI4uiv, GLuint, index, const GLuint *, v); \
    HookWrapper2(void, glVertexAttribI4uiv, GLuint, index, const GLuint *, v); \
    HookAliasWrapper2(void, glVertexAttribI4bvEXT, glVertexAttribI4bv, GLuint, index, const GLbyte *, v); \
    HookWrapper2(void, glVertexAttribI4bv, GLuint, index, const GLbyte *, v); \
    HookAliasWrapper2(void, glVertexAttribI4svEXT, glVertexAttribI4sv, GLuint, index, const GLshort *, v); \
    HookWrapper2(void, glVertexAttribI4sv, GLuint, index, const GLshort *, v); \
    HookAliasWrapper2(void, glVertexAttribI4ubvEXT, glVertexAttribI4ubv, GLuint, index, const GLubyte *, v); \
    HookWrapper2(void, glVertexAttribI4ubv, GLuint, index, const GLubyte *, v); \
    HookAliasWrapper2(void, glVertexAttribI4usvEXT, glVertexAttribI4usv, GLuint, index, const GLushort *, v); \
    HookWrapper2(void, glVertexAttribI4usv, GLuint, index, const GLushort *, v); \
    HookAliasWrapper3(void, glGetUniformuivEXT, glGetUniformuiv, GLuint, program, GLint, location, GLuint *, params); \
    HookWrapper3(void, glGetUniformuiv, GLuint, program, GLint, location, GLuint *, params); \
    HookAliasWrapper3(void, glBindFragDataLocationEXT, glBindFragDataLocation, GLuint, program, GLuint, color, const GLchar *, name); \
    HookWrapper3(void, glBindFragDataLocation, GLuint, program, GLuint, color, const GLchar *, name); \
    HookAliasWrapper2(GLint, glGetFragDataLocationEXT, glGetFragDataLocation, GLuint, program, const GLchar *, name); \
    HookWrapper2(GLint, glGetFragDataLocation, GLuint, program, const GLchar *, name); \
    HookAliasWrapper2(void, glUniform1uiEXT, glUniform1ui, GLint, location, GLuint, v0); \
    HookWrapper2(void, glUniform1ui, GLint, location, GLuint, v0); \
    HookAliasWrapper3(void, glUniform2uiEXT, glUniform2ui, GLint, location, GLuint, v0, GLuint, v1); \
    HookWrapper3(void, glUniform2ui, GLint, location, GLuint, v0, GLuint, v1); \
    HookAliasWrapper4(void, glUniform3uiEXT, glUniform3ui, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2); \
    HookWrapper4(void, glUniform3ui, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2); \
    HookAliasWrapper5(void, glUniform4uiEXT, glUniform4ui, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2, GLuint, v3); \
    HookWrapper5(void, glUniform4ui, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2, GLuint, v3); \
    HookAliasWrapper3(void, glUniform1uivEXT, glUniform1uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper3(void, glUniform1uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookAliasWrapper3(void, glUniform2uivEXT, glUniform2uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper3(void, glUniform2uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookAliasWrapper3(void, glUniform3uivEXT, glUniform3uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper3(void, glUniform3uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookAliasWrapper3(void, glUniform4uivEXT, glUniform4uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper3(void, glUniform4uiv, GLint, location, GLsizei, count, const GLuint *, value); \
    HookAliasWrapper3(void, glTexParameterIivEXT, glTexParameterIiv, GLenum, target, GLenum, pname, const GLint *, params); \
    HookAliasWrapper3(void, glTexParameterIivOES, glTexParameterIiv, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper3(void, glTexParameterIiv, GLenum, target, GLenum, pname, const GLint *, params); \
    HookAliasWrapper3(void, glTexParameterIuivEXT, glTexParameterIuiv, GLenum, target, GLenum, pname, const GLuint *, params); \
    HookAliasWrapper3(void, glTexParameterIuivOES, glTexParameterIuiv, GLenum, target, GLenum, pname, const GLuint *, params); \
    HookWrapper3(void, glTexParameterIuiv, GLenum, target, GLenum, pname, const GLuint *, params); \
    HookAliasWrapper3(void, glGetTexParameterIivEXT, glGetTexParameterIiv, GLenum, target, GLenum, pname, GLint *, params); \
    HookAliasWrapper3(void, glGetTexParameterIivOES, glGetTexParameterIiv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetTexParameterIiv, GLenum, target, GLenum, pname, GLint *, params); \
    HookAliasWrapper3(void, glGetTexParameterIuivEXT, glGetTexParameterIuiv, GLenum, target, GLenum, pname, GLuint *, params); \
    HookAliasWrapper3(void, glGetTexParameterIuivOES, glGetTexParameterIuiv, GLenum, target, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, glGetTexParameterIuiv, GLenum, target, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, glClearBufferiv, GLenum, buffer, GLint, drawbuffer, const GLint *, value); \
    HookWrapper3(void, glClearBufferuiv, GLenum, buffer, GLint, drawbuffer, const GLuint *, value); \
    HookWrapper3(void, glClearBufferfv, GLenum, buffer, GLint, drawbuffer, const GLfloat *, value); \
    HookWrapper4(void, glClearBufferfi, GLenum, buffer, GLint, drawbuffer, GLfloat, depth, GLint, stencil); \
    HookWrapper2(const GLubyte *, glGetStringi, GLenum, name, GLuint, index); \
    HookAliasWrapper1(GLboolean, glIsRenderbufferEXT, glIsRenderbuffer, GLuint, renderbuffer); \
    HookWrapper1(GLboolean, glIsRenderbuffer, GLuint, renderbuffer); \
    HookAliasWrapper2(void, glBindRenderbufferEXT, glBindRenderbuffer, GLenum, target, GLuint, renderbuffer); \
    HookWrapper2(void, glBindRenderbuffer, GLenum, target, GLuint, renderbuffer); \
    HookAliasWrapper2(void, glDeleteRenderbuffersEXT, glDeleteRenderbuffers, GLsizei, n, const GLuint *, renderbuffers); \
    HookWrapper2(void, glDeleteRenderbuffers, GLsizei, n, const GLuint *, renderbuffers); \
    HookAliasWrapper2(void, glGenRenderbuffersEXT, glGenRenderbuffers, GLsizei, n, GLuint *, renderbuffers); \
    HookWrapper2(void, glGenRenderbuffers, GLsizei, n, GLuint *, renderbuffers); \
    HookAliasWrapper4(void, glRenderbufferStorageEXT, glRenderbufferStorage, GLenum, target, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper4(void, glRenderbufferStorage, GLenum, target, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookAliasWrapper3(void, glGetRenderbufferParameterivEXT, glGetRenderbufferParameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetRenderbufferParameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookAliasWrapper1(GLboolean, glIsFramebufferEXT, glIsFramebuffer, GLuint, framebuffer); \
    HookWrapper1(GLboolean, glIsFramebuffer, GLuint, framebuffer); \
    HookAliasWrapper2(void, glBindFramebufferEXT, glBindFramebuffer, GLenum, target, GLuint, framebuffer); \
    HookWrapper2(void, glBindFramebuffer, GLenum, target, GLuint, framebuffer); \
    HookAliasWrapper2(void, glDeleteFramebuffersEXT, glDeleteFramebuffers, GLsizei, n, const GLuint *, framebuffers); \
    HookWrapper2(void, glDeleteFramebuffers, GLsizei, n, const GLuint *, framebuffers); \
    HookAliasWrapper2(void, glGenFramebuffersEXT, glGenFramebuffers, GLsizei, n, GLuint *, framebuffers); \
    HookWrapper2(void, glGenFramebuffers, GLsizei, n, GLuint *, framebuffers); \
    HookAliasWrapper1(GLenum, glCheckFramebufferStatusEXT, glCheckFramebufferStatus, GLenum, target); \
    HookWrapper1(GLenum, glCheckFramebufferStatus, GLenum, target); \
    HookAliasWrapper5(void, glFramebufferTexture1DEXT, glFramebufferTexture1D, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level); \
    HookWrapper5(void, glFramebufferTexture1D, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level); \
    HookAliasWrapper5(void, glFramebufferTexture2DEXT, glFramebufferTexture2D, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level); \
    HookWrapper5(void, glFramebufferTexture2D, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level); \
    HookAliasWrapper6(void, glFramebufferTexture3DEXT, glFramebufferTexture3D, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level, GLint, zoffset); \
    HookAliasWrapper6(void, glFramebufferTexture3DOES, glFramebufferTexture3D, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level, GLint, zoffset); \
    HookWrapper6(void, glFramebufferTexture3D, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level, GLint, zoffset); \
    HookAliasWrapper4(void, glFramebufferRenderbufferEXT, glFramebufferRenderbuffer, GLenum, target, GLenum, attachment, GLenum, renderbuffertarget, GLuint, renderbuffer); \
    HookWrapper4(void, glFramebufferRenderbuffer, GLenum, target, GLenum, attachment, GLenum, renderbuffertarget, GLuint, renderbuffer); \
    HookAliasWrapper4(void, glGetFramebufferAttachmentParameterivEXT, glGetFramebufferAttachmentParameteriv, GLenum, target, GLenum, attachment, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetFramebufferAttachmentParameteriv, GLenum, target, GLenum, attachment, GLenum, pname, GLint *, params); \
    HookAliasWrapper1(void, glGenerateMipmapEXT, glGenerateMipmap, GLenum, target); \
    HookWrapper1(void, glGenerateMipmap, GLenum, target); \
    HookAliasWrapper10(void, glBlitFramebufferEXT, glBlitFramebuffer, GLint, srcX0, GLint, srcY0, GLint, srcX1, GLint, srcY1, GLint, dstX0, GLint, dstY0, GLint, dstX1, GLint, dstY1, GLbitfield, mask, GLenum, filter); \
    HookWrapper10(void, glBlitFramebuffer, GLint, srcX0, GLint, srcY0, GLint, srcX1, GLint, srcY1, GLint, dstX0, GLint, dstY0, GLint, dstX1, GLint, dstY1, GLbitfield, mask, GLenum, filter); \
    HookAliasWrapper5(void, glRenderbufferStorageMultisampleEXT, glRenderbufferStorageMultisample, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper5(void, glRenderbufferStorageMultisample, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookAliasWrapper5(void, glFramebufferTextureLayerARB, glFramebufferTextureLayer, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level, GLint, layer); \
    HookAliasWrapper5(void, glFramebufferTextureLayerEXT, glFramebufferTextureLayer, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level, GLint, layer); \
    HookWrapper5(void, glFramebufferTextureLayer, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level, GLint, layer); \
    HookWrapper4(void *, glMapBufferRange, GLenum, target, GLintptr, offset, GLsizeiptr, length, GLbitfield, access); \
    HookWrapper3(void, glFlushMappedBufferRange, GLenum, target, GLintptr, offset, GLsizeiptr, length); \
    HookAliasWrapper1(void, glBindVertexArrayOES, glBindVertexArray, GLuint, array); \
    HookWrapper1(void, glBindVertexArray, GLuint, array); \
    HookAliasWrapper2(void, glDeleteVertexArraysOES, glDeleteVertexArrays, GLsizei, n, const GLuint *, arrays); \
    HookWrapper2(void, glDeleteVertexArrays, GLsizei, n, const GLuint *, arrays); \
    HookAliasWrapper2(void, glGenVertexArraysOES, glGenVertexArrays, GLsizei, n, GLuint *, arrays); \
    HookWrapper2(void, glGenVertexArrays, GLsizei, n, GLuint *, arrays); \
    HookAliasWrapper1(GLboolean, glIsVertexArrayOES, glIsVertexArray, GLuint, array); \
    HookWrapper1(GLboolean, glIsVertexArray, GLuint, array); \
    HookAliasWrapper4(void, glDrawArraysInstancedARB, glDrawArraysInstanced, GLenum, mode, GLint, first, GLsizei, count, GLsizei, instancecount); \
    HookAliasWrapper4(void, glDrawArraysInstancedEXT, glDrawArraysInstanced, GLenum, mode, GLint, first, GLsizei, count, GLsizei, instancecount); \
    HookWrapper4(void, glDrawArraysInstanced, GLenum, mode, GLint, first, GLsizei, count, GLsizei, instancecount); \
    HookAliasWrapper5(void, glDrawElementsInstancedARB, glDrawElementsInstanced, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount); \
    HookAliasWrapper5(void, glDrawElementsInstancedEXT, glDrawElementsInstanced, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount); \
    HookWrapper5(void, glDrawElementsInstanced, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount); \
    HookAliasWrapper3(void, glTexBufferARB, glTexBuffer, GLenum, target, GLenum, internalformat, GLuint, buffer); \
    HookAliasWrapper3(void, glTexBufferEXT, glTexBuffer, GLenum, target, GLenum, internalformat, GLuint, buffer); \
    HookAliasWrapper3(void, glTexBufferOES, glTexBuffer, GLenum, target, GLenum, internalformat, GLuint, buffer); \
    HookWrapper3(void, glTexBuffer, GLenum, target, GLenum, internalformat, GLuint, buffer); \
    HookWrapper1(void, glPrimitiveRestartIndex, GLuint, index); \
    HookWrapper5(void, glCopyBufferSubData, GLenum, readTarget, GLenum, writeTarget, GLintptr, readOffset, GLintptr, writeOffset, GLsizeiptr, size); \
    HookWrapper4(void, glGetUniformIndices, GLuint, program, GLsizei, uniformCount, const GLchar *const*, uniformNames, GLuint *, uniformIndices); \
    HookWrapper5(void, glGetActiveUniformsiv, GLuint, program, GLsizei, uniformCount, const GLuint *, uniformIndices, GLenum, pname, GLint *, params); \
    HookWrapper5(void, glGetActiveUniformName, GLuint, program, GLuint, uniformIndex, GLsizei, bufSize, GLsizei *, length, GLchar *, uniformName); \
    HookWrapper2(GLuint, glGetUniformBlockIndex, GLuint, program, const GLchar *, uniformBlockName); \
    HookWrapper4(void, glGetActiveUniformBlockiv, GLuint, program, GLuint, uniformBlockIndex, GLenum, pname, GLint *, params); \
    HookWrapper5(void, glGetActiveUniformBlockName, GLuint, program, GLuint, uniformBlockIndex, GLsizei, bufSize, GLsizei *, length, GLchar *, uniformBlockName); \
    HookWrapper3(void, glUniformBlockBinding, GLuint, program, GLuint, uniformBlockIndex, GLuint, uniformBlockBinding); \
    HookAliasWrapper5(void, glDrawElementsBaseVertexEXT, glDrawElementsBaseVertex, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLint, basevertex); \
    HookAliasWrapper5(void, glDrawElementsBaseVertexOES, glDrawElementsBaseVertex, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLint, basevertex); \
    HookWrapper5(void, glDrawElementsBaseVertex, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLint, basevertex); \
    HookAliasWrapper7(void, glDrawRangeElementsBaseVertexEXT, glDrawRangeElementsBaseVertex, GLenum, mode, GLuint, start, GLuint, end, GLsizei, count, GLenum, type, const void *, indices, GLint, basevertex); \
    HookAliasWrapper7(void, glDrawRangeElementsBaseVertexOES, glDrawRangeElementsBaseVertex, GLenum, mode, GLuint, start, GLuint, end, GLsizei, count, GLenum, type, const void *, indices, GLint, basevertex); \
    HookWrapper7(void, glDrawRangeElementsBaseVertex, GLenum, mode, GLuint, start, GLuint, end, GLsizei, count, GLenum, type, const void *, indices, GLint, basevertex); \
    HookAliasWrapper6(void, glDrawElementsInstancedBaseVertexEXT, glDrawElementsInstancedBaseVertex, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount, GLint, basevertex); \
    HookAliasWrapper6(void, glDrawElementsInstancedBaseVertexOES, glDrawElementsInstancedBaseVertex, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount, GLint, basevertex); \
    HookWrapper6(void, glDrawElementsInstancedBaseVertex, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount, GLint, basevertex); \
    HookAliasWrapper6(void, glMultiDrawElementsBaseVertexEXT, glMultiDrawElementsBaseVertex, GLenum, mode, const GLsizei *, count, GLenum, type, const void *const*, indices, GLsizei, drawcount, const GLint *, basevertex); \
    HookAliasWrapper6(void, glMultiDrawElementsBaseVertexOES, glMultiDrawElementsBaseVertex, GLenum, mode, const GLsizei *, count, GLenum, type, const void *const*, indices, GLsizei, drawcount, const GLint *, basevertex); \
    HookWrapper6(void, glMultiDrawElementsBaseVertex, GLenum, mode, const GLsizei *, count, GLenum, type, const void *const*, indices, GLsizei, drawcount, const GLint *, basevertex); \
    HookAliasWrapper1(void, glProvokingVertexEXT, glProvokingVertex, GLenum, mode); \
    HookWrapper1(void, glProvokingVertex, GLenum, mode); \
    HookWrapper2(GLsync, glFenceSync, GLenum, condition, GLbitfield, flags); \
    HookWrapper1(GLboolean, glIsSync, GLsync, sync); \
    HookWrapper1(void, glDeleteSync, GLsync, sync); \
    HookWrapper3(GLenum, glClientWaitSync, GLsync, sync, GLbitfield, flags, GLuint64, timeout); \
    HookWrapper3(void, glWaitSync, GLsync, sync, GLbitfield, flags, GLuint64, timeout); \
    HookWrapper2(void, glGetInteger64v, GLenum, pname, GLint64 *, data); \
    HookWrapper5(void, glGetSynciv, GLsync, sync, GLenum, pname, GLsizei, bufSize, GLsizei *, length, GLint *, values); \
    HookWrapper3(void, glGetInteger64i_v, GLenum, target, GLuint, index, GLint64 *, data); \
    HookWrapper3(void, glGetBufferParameteri64v, GLenum, target, GLenum, pname, GLint64 *, params); \
    HookAliasWrapper4(void, glFramebufferTextureARB, glFramebufferTexture, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level); \
    HookAliasWrapper4(void, glFramebufferTextureOES, glFramebufferTexture, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level); \
    HookAliasWrapper4(void, glFramebufferTextureEXT, glFramebufferTexture, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level); \
    HookWrapper4(void, glFramebufferTexture, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level); \
    HookWrapper6(void, glTexImage2DMultisample, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height, GLboolean, fixedsamplelocations); \
    HookWrapper7(void, glTexImage3DMultisample, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, fixedsamplelocations); \
    HookWrapper3(void, glGetMultisamplefv, GLenum, pname, GLuint, index, GLfloat *, val); \
    HookWrapper2(void, glSampleMaski, GLuint, maskNumber, GLbitfield, mask); \
    HookWrapper4(void, glBindFragDataLocationIndexed, GLuint, program, GLuint, colorNumber, GLuint, index, const GLchar *, name); \
    HookWrapper2(GLint, glGetFragDataIndex, GLuint, program, const GLchar *, name); \
    HookWrapper2(void, glGenSamplers, GLsizei, count, GLuint *, samplers); \
    HookWrapper2(void, glDeleteSamplers, GLsizei, count, const GLuint *, samplers); \
    HookWrapper1(GLboolean, glIsSampler, GLuint, sampler); \
    HookWrapper2(void, glBindSampler, GLuint, unit, GLuint, sampler); \
    HookWrapper3(void, glSamplerParameteri, GLuint, sampler, GLenum, pname, GLint, param); \
    HookWrapper3(void, glSamplerParameteriv, GLuint, sampler, GLenum, pname, const GLint *, param); \
    HookWrapper3(void, glSamplerParameterf, GLuint, sampler, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, glSamplerParameterfv, GLuint, sampler, GLenum, pname, const GLfloat *, param); \
    HookAliasWrapper3(void, glSamplerParameterIivEXT, glSamplerParameterIiv, GLuint, sampler, GLenum, pname, const GLint *, param); \
    HookAliasWrapper3(void, glSamplerParameterIivOES, glSamplerParameterIiv, GLuint, sampler, GLenum, pname, const GLint *, param); \
    HookWrapper3(void, glSamplerParameterIiv, GLuint, sampler, GLenum, pname, const GLint *, param); \
    HookAliasWrapper3(void, glSamplerParameterIuivEXT, glSamplerParameterIuiv, GLuint, sampler, GLenum, pname, const GLuint *, param); \
    HookAliasWrapper3(void, glSamplerParameterIuivOES, glSamplerParameterIuiv, GLuint, sampler, GLenum, pname, const GLuint *, param); \
    HookWrapper3(void, glSamplerParameterIuiv, GLuint, sampler, GLenum, pname, const GLuint *, param); \
    HookWrapper3(void, glGetSamplerParameteriv, GLuint, sampler, GLenum, pname, GLint *, params); \
    HookAliasWrapper3(void, glGetSamplerParameterIivEXT, glGetSamplerParameterIiv, GLuint, sampler, GLenum, pname, GLint *, params); \
    HookAliasWrapper3(void, glGetSamplerParameterIivOES, glGetSamplerParameterIiv, GLuint, sampler, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetSamplerParameterIiv, GLuint, sampler, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetSamplerParameterfv, GLuint, sampler, GLenum, pname, GLfloat *, params); \
    HookAliasWrapper3(void, glGetSamplerParameterIuivEXT, glGetSamplerParameterIuiv, GLuint, sampler, GLenum, pname, GLuint *, params); \
    HookAliasWrapper3(void, glGetSamplerParameterIuivOES, glGetSamplerParameterIuiv, GLuint, sampler, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, glGetSamplerParameterIuiv, GLuint, sampler, GLenum, pname, GLuint *, params); \
    HookAliasWrapper2(void, glQueryCounterEXT, glQueryCounter, GLuint, id, GLenum, target); \
    HookWrapper2(void, glQueryCounter, GLuint, id, GLenum, target); \
    HookAliasWrapper3(void, glGetQueryObjecti64vEXT, glGetQueryObjecti64v, GLuint, id, GLenum, pname, GLint64 *, params); \
    HookWrapper3(void, glGetQueryObjecti64v, GLuint, id, GLenum, pname, GLint64 *, params); \
    HookAliasWrapper3(void, glGetQueryObjectui64vEXT, glGetQueryObjectui64v, GLuint, id, GLenum, pname, GLuint64 *, params); \
    HookWrapper3(void, glGetQueryObjectui64v, GLuint, id, GLenum, pname, GLuint64 *, params); \
    HookAliasWrapper2(void, glVertexAttribDivisorARB, glVertexAttribDivisor, GLuint, index, GLuint, divisor); \
    HookWrapper2(void, glVertexAttribDivisor, GLuint, index, GLuint, divisor); \
    HookWrapper4(void, glVertexAttribP1ui, GLuint, index, GLenum, type, GLboolean, normalized, GLuint, value); \
    HookWrapper4(void, glVertexAttribP1uiv, GLuint, index, GLenum, type, GLboolean, normalized, const GLuint *, value); \
    HookWrapper4(void, glVertexAttribP2ui, GLuint, index, GLenum, type, GLboolean, normalized, GLuint, value); \
    HookWrapper4(void, glVertexAttribP2uiv, GLuint, index, GLenum, type, GLboolean, normalized, const GLuint *, value); \
    HookWrapper4(void, glVertexAttribP3ui, GLuint, index, GLenum, type, GLboolean, normalized, GLuint, value); \
    HookWrapper4(void, glVertexAttribP3uiv, GLuint, index, GLenum, type, GLboolean, normalized, const GLuint *, value); \
    HookWrapper4(void, glVertexAttribP4ui, GLuint, index, GLenum, type, GLboolean, normalized, GLuint, value); \
    HookWrapper4(void, glVertexAttribP4uiv, GLuint, index, GLenum, type, GLboolean, normalized, const GLuint *, value); \
    HookAliasWrapper1(void, glMinSampleShadingARB, glMinSampleShading, GLfloat, value); \
    HookAliasWrapper1(void, glMinSampleShadingOES, glMinSampleShading, GLfloat, value); \
    HookWrapper1(void, glMinSampleShading, GLfloat, value); \
    HookAliasWrapper2(void, glBlendEquationiARB, glBlendEquationi, GLuint, buf, GLenum, mode); \
    HookAliasWrapper2(void, glBlendEquationiEXT, glBlendEquationi, GLuint, buf, GLenum, mode); \
    HookAliasWrapper2(void, glBlendEquationiOES, glBlendEquationi, GLuint, buf, GLenum, mode); \
    HookWrapper2(void, glBlendEquationi, GLuint, buf, GLenum, mode); \
    HookAliasWrapper3(void, glBlendEquationSeparateiARB, glBlendEquationSeparatei, GLuint, buf, GLenum, modeRGB, GLenum, modeAlpha); \
    HookAliasWrapper3(void, glBlendEquationSeparateiEXT, glBlendEquationSeparatei, GLuint, buf, GLenum, modeRGB, GLenum, modeAlpha); \
    HookAliasWrapper3(void, glBlendEquationSeparateiOES, glBlendEquationSeparatei, GLuint, buf, GLenum, modeRGB, GLenum, modeAlpha); \
    HookWrapper3(void, glBlendEquationSeparatei, GLuint, buf, GLenum, modeRGB, GLenum, modeAlpha); \
    HookAliasWrapper3(void, glBlendFunciARB, glBlendFunci, GLuint, buf, GLenum, src, GLenum, dst); \
    HookAliasWrapper3(void, glBlendFunciEXT, glBlendFunci, GLuint, buf, GLenum, src, GLenum, dst); \
    HookAliasWrapper3(void, glBlendFunciOES, glBlendFunci, GLuint, buf, GLenum, src, GLenum, dst); \
    HookWrapper3(void, glBlendFunci, GLuint, buf, GLenum, src, GLenum, dst); \
    HookAliasWrapper5(void, glBlendFuncSeparateiARB, glBlendFuncSeparatei, GLuint, buf, GLenum, srcRGB, GLenum, dstRGB, GLenum, srcAlpha, GLenum, dstAlpha); \
    HookAliasWrapper5(void, glBlendFuncSeparateiEXT, glBlendFuncSeparatei, GLuint, buf, GLenum, srcRGB, GLenum, dstRGB, GLenum, srcAlpha, GLenum, dstAlpha); \
    HookAliasWrapper5(void, glBlendFuncSeparateiOES, glBlendFuncSeparatei, GLuint, buf, GLenum, srcRGB, GLenum, dstRGB, GLenum, srcAlpha, GLenum, dstAlpha); \
    HookWrapper5(void, glBlendFuncSeparatei, GLuint, buf, GLenum, srcRGB, GLenum, dstRGB, GLenum, srcAlpha, GLenum, dstAlpha); \
    HookWrapper2(void, glDrawArraysIndirect, GLenum, mode, const void *, indirect); \
    HookWrapper3(void, glDrawElementsIndirect, GLenum, mode, GLenum, type, const void *, indirect); \
    HookWrapper2(void, glUniform1d, GLint, location, GLdouble, x); \
    HookWrapper3(void, glUniform2d, GLint, location, GLdouble, x, GLdouble, y); \
    HookWrapper4(void, glUniform3d, GLint, location, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper5(void, glUniform4d, GLint, location, GLdouble, x, GLdouble, y, GLdouble, z, GLdouble, w); \
    HookWrapper3(void, glUniform1dv, GLint, location, GLsizei, count, const GLdouble *, value); \
    HookWrapper3(void, glUniform2dv, GLint, location, GLsizei, count, const GLdouble *, value); \
    HookWrapper3(void, glUniform3dv, GLint, location, GLsizei, count, const GLdouble *, value); \
    HookWrapper3(void, glUniform4dv, GLint, location, GLsizei, count, const GLdouble *, value); \
    HookWrapper4(void, glUniformMatrix2dv, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper4(void, glUniformMatrix3dv, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper4(void, glUniformMatrix4dv, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper4(void, glUniformMatrix2x3dv, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper4(void, glUniformMatrix2x4dv, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper4(void, glUniformMatrix3x2dv, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper4(void, glUniformMatrix3x4dv, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper4(void, glUniformMatrix4x2dv, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper4(void, glUniformMatrix4x3dv, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper3(void, glGetUniformdv, GLuint, program, GLint, location, GLdouble *, params); \
    HookWrapper3(GLint, glGetSubroutineUniformLocation, GLuint, program, GLenum, shadertype, const GLchar *, name); \
    HookWrapper3(GLuint, glGetSubroutineIndex, GLuint, program, GLenum, shadertype, const GLchar *, name); \
    HookWrapper5(void, glGetActiveSubroutineUniformiv, GLuint, program, GLenum, shadertype, GLuint, index, GLenum, pname, GLint *, values); \
    HookWrapper6(void, glGetActiveSubroutineUniformName, GLuint, program, GLenum, shadertype, GLuint, index, GLsizei, bufsize, GLsizei *, length, GLchar *, name); \
    HookWrapper6(void, glGetActiveSubroutineName, GLuint, program, GLenum, shadertype, GLuint, index, GLsizei, bufsize, GLsizei *, length, GLchar *, name); \
    HookWrapper3(void, glUniformSubroutinesuiv, GLenum, shadertype, GLsizei, count, const GLuint *, indices); \
    HookWrapper3(void, glGetUniformSubroutineuiv, GLenum, shadertype, GLint, location, GLuint *, params); \
    HookWrapper4(void, glGetProgramStageiv, GLuint, program, GLenum, shadertype, GLenum, pname, GLint *, values); \
    HookAliasWrapper2(void, glPatchParameteriEXT, glPatchParameteri, GLenum, pname, GLint, value); \
    HookAliasWrapper2(void, glPatchParameteriOES, glPatchParameteri, GLenum, pname, GLint, value); \
    HookWrapper2(void, glPatchParameteri, GLenum, pname, GLint, value); \
    HookWrapper2(void, glPatchParameterfv, GLenum, pname, const GLfloat *, values); \
    HookWrapper2(void, glBindTransformFeedback, GLenum, target, GLuint, id); \
    HookWrapper2(void, glDeleteTransformFeedbacks, GLsizei, n, const GLuint *, ids); \
    HookWrapper2(void, glGenTransformFeedbacks, GLsizei, n, GLuint *, ids); \
    HookWrapper1(GLboolean, glIsTransformFeedback, GLuint, id); \
    HookWrapper0(void, glPauseTransformFeedback); \
    HookWrapper0(void, glResumeTransformFeedback); \
    HookWrapper2(void, glDrawTransformFeedback, GLenum, mode, GLuint, id); \
    HookWrapper3(void, glDrawTransformFeedbackStream, GLenum, mode, GLuint, id, GLuint, stream); \
    HookWrapper3(void, glBeginQueryIndexed, GLenum, target, GLuint, index, GLuint, id); \
    HookWrapper2(void, glEndQueryIndexed, GLenum, target, GLuint, index); \
    HookWrapper4(void, glGetQueryIndexediv, GLenum, target, GLuint, index, GLenum, pname, GLint *, params); \
    HookWrapper0(void, glReleaseShaderCompiler); \
    HookWrapper5(void, glShaderBinary, GLsizei, count, const GLuint *, shaders, GLenum, binaryformat, const void *, binary, GLsizei, length); \
    HookWrapper4(void, glGetShaderPrecisionFormat, GLenum, shadertype, GLenum, precisiontype, GLint *, range, GLint *, precision); \
    HookWrapper2(void, glDepthRangef, GLfloat, n, GLfloat, f); \
    HookWrapper1(void, glClearDepthf, GLfloat, d); \
    HookWrapper5(void, glGetProgramBinary, GLuint, program, GLsizei, bufSize, GLsizei *, length, GLenum *, binaryFormat, void *, binary); \
    HookWrapper4(void, glProgramBinary, GLuint, program, GLenum, binaryFormat, const void *, binary, GLsizei, length); \
    HookAliasWrapper3(void, glProgramParameteriARB, glProgramParameteri, GLuint, program, GLenum, pname, GLint, value); \
    HookAliasWrapper3(void, glProgramParameteriEXT, glProgramParameteri, GLuint, program, GLenum, pname, GLint, value); \
    HookWrapper3(void, glProgramParameteri, GLuint, program, GLenum, pname, GLint, value); \
    HookAliasWrapper3(void, glUseProgramStagesEXT, glUseProgramStages, GLuint, pipeline, GLbitfield, stages, GLuint, program); \
    HookWrapper3(void, glUseProgramStages, GLuint, pipeline, GLbitfield, stages, GLuint, program); \
    HookAliasWrapper2(void, glActiveShaderProgramEXT, glActiveShaderProgram, GLuint, pipeline, GLuint, program); \
    HookWrapper2(void, glActiveShaderProgram, GLuint, pipeline, GLuint, program); \
    HookAliasWrapper3(GLuint, glCreateShaderProgramvEXT, glCreateShaderProgramv, GLenum, type, GLsizei, count, const GLchar *const*, strings); \
    HookWrapper3(GLuint, glCreateShaderProgramv, GLenum, type, GLsizei, count, const GLchar *const*, strings); \
    HookAliasWrapper1(void, glBindProgramPipelineEXT, glBindProgramPipeline, GLuint, pipeline); \
    HookWrapper1(void, glBindProgramPipeline, GLuint, pipeline); \
    HookAliasWrapper2(void, glDeleteProgramPipelinesEXT, glDeleteProgramPipelines, GLsizei, n, const GLuint *, pipelines); \
    HookWrapper2(void, glDeleteProgramPipelines, GLsizei, n, const GLuint *, pipelines); \
    HookAliasWrapper2(void, glGenProgramPipelinesEXT, glGenProgramPipelines, GLsizei, n, GLuint *, pipelines); \
    HookWrapper2(void, glGenProgramPipelines, GLsizei, n, GLuint *, pipelines); \
    HookAliasWrapper1(GLboolean, glIsProgramPipelineEXT, glIsProgramPipeline, GLuint, pipeline); \
    HookWrapper1(GLboolean, glIsProgramPipeline, GLuint, pipeline); \
    HookAliasWrapper3(void, glGetProgramPipelineivEXT, glGetProgramPipelineiv, GLuint, pipeline, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetProgramPipelineiv, GLuint, pipeline, GLenum, pname, GLint *, params); \
    HookAliasWrapper3(void, glProgramUniform1iEXT, glProgramUniform1i, GLuint, program, GLint, location, GLint, v0); \
    HookWrapper3(void, glProgramUniform1i, GLuint, program, GLint, location, GLint, v0); \
    HookAliasWrapper4(void, glProgramUniform1ivEXT, glProgramUniform1iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, glProgramUniform1iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookAliasWrapper3(void, glProgramUniform1fEXT, glProgramUniform1f, GLuint, program, GLint, location, GLfloat, v0); \
    HookWrapper3(void, glProgramUniform1f, GLuint, program, GLint, location, GLfloat, v0); \
    HookAliasWrapper4(void, glProgramUniform1fvEXT, glProgramUniform1fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper4(void, glProgramUniform1fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookAliasWrapper3(void, glProgramUniform1dEXT, glProgramUniform1d, GLuint, program, GLint, location, GLdouble, v0); \
    HookWrapper3(void, glProgramUniform1d, GLuint, program, GLint, location, GLdouble, v0); \
    HookAliasWrapper4(void, glProgramUniform1dvEXT, glProgramUniform1dv, GLuint, program, GLint, location, GLsizei, count, const GLdouble *, value); \
    HookWrapper4(void, glProgramUniform1dv, GLuint, program, GLint, location, GLsizei, count, const GLdouble *, value); \
    HookAliasWrapper3(void, glProgramUniform1uiEXT, glProgramUniform1ui, GLuint, program, GLint, location, GLuint, v0); \
    HookWrapper3(void, glProgramUniform1ui, GLuint, program, GLint, location, GLuint, v0); \
    HookAliasWrapper4(void, glProgramUniform1uivEXT, glProgramUniform1uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper4(void, glProgramUniform1uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookAliasWrapper4(void, glProgramUniform2iEXT, glProgramUniform2i, GLuint, program, GLint, location, GLint, v0, GLint, v1); \
    HookWrapper4(void, glProgramUniform2i, GLuint, program, GLint, location, GLint, v0, GLint, v1); \
    HookAliasWrapper4(void, glProgramUniform2ivEXT, glProgramUniform2iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, glProgramUniform2iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookAliasWrapper4(void, glProgramUniform2fEXT, glProgramUniform2f, GLuint, program, GLint, location, GLfloat, v0, GLfloat, v1); \
    HookWrapper4(void, glProgramUniform2f, GLuint, program, GLint, location, GLfloat, v0, GLfloat, v1); \
    HookAliasWrapper4(void, glProgramUniform2fvEXT, glProgramUniform2fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper4(void, glProgramUniform2fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookAliasWrapper4(void, glProgramUniform2dEXT, glProgramUniform2d, GLuint, program, GLint, location, GLdouble, v0, GLdouble, v1); \
    HookWrapper4(void, glProgramUniform2d, GLuint, program, GLint, location, GLdouble, v0, GLdouble, v1); \
    HookAliasWrapper4(void, glProgramUniform2dvEXT, glProgramUniform2dv, GLuint, program, GLint, location, GLsizei, count, const GLdouble *, value); \
    HookWrapper4(void, glProgramUniform2dv, GLuint, program, GLint, location, GLsizei, count, const GLdouble *, value); \
    HookAliasWrapper4(void, glProgramUniform2uiEXT, glProgramUniform2ui, GLuint, program, GLint, location, GLuint, v0, GLuint, v1); \
    HookWrapper4(void, glProgramUniform2ui, GLuint, program, GLint, location, GLuint, v0, GLuint, v1); \
    HookAliasWrapper4(void, glProgramUniform2uivEXT, glProgramUniform2uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper4(void, glProgramUniform2uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookAliasWrapper5(void, glProgramUniform3iEXT, glProgramUniform3i, GLuint, program, GLint, location, GLint, v0, GLint, v1, GLint, v2); \
    HookWrapper5(void, glProgramUniform3i, GLuint, program, GLint, location, GLint, v0, GLint, v1, GLint, v2); \
    HookAliasWrapper4(void, glProgramUniform3ivEXT, glProgramUniform3iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, glProgramUniform3iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookAliasWrapper5(void, glProgramUniform3fEXT, glProgramUniform3f, GLuint, program, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2); \
    HookWrapper5(void, glProgramUniform3f, GLuint, program, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2); \
    HookAliasWrapper4(void, glProgramUniform3fvEXT, glProgramUniform3fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper4(void, glProgramUniform3fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookAliasWrapper5(void, glProgramUniform3dEXT, glProgramUniform3d, GLuint, program, GLint, location, GLdouble, v0, GLdouble, v1, GLdouble, v2); \
    HookWrapper5(void, glProgramUniform3d, GLuint, program, GLint, location, GLdouble, v0, GLdouble, v1, GLdouble, v2); \
    HookAliasWrapper4(void, glProgramUniform3dvEXT, glProgramUniform3dv, GLuint, program, GLint, location, GLsizei, count, const GLdouble *, value); \
    HookWrapper4(void, glProgramUniform3dv, GLuint, program, GLint, location, GLsizei, count, const GLdouble *, value); \
    HookAliasWrapper5(void, glProgramUniform3uiEXT, glProgramUniform3ui, GLuint, program, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2); \
    HookWrapper5(void, glProgramUniform3ui, GLuint, program, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2); \
    HookAliasWrapper4(void, glProgramUniform3uivEXT, glProgramUniform3uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper4(void, glProgramUniform3uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookAliasWrapper6(void, glProgramUniform4iEXT, glProgramUniform4i, GLuint, program, GLint, location, GLint, v0, GLint, v1, GLint, v2, GLint, v3); \
    HookWrapper6(void, glProgramUniform4i, GLuint, program, GLint, location, GLint, v0, GLint, v1, GLint, v2, GLint, v3); \
    HookAliasWrapper4(void, glProgramUniform4ivEXT, glProgramUniform4iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, glProgramUniform4iv, GLuint, program, GLint, location, GLsizei, count, const GLint *, value); \
    HookAliasWrapper6(void, glProgramUniform4fEXT, glProgramUniform4f, GLuint, program, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2, GLfloat, v3); \
    HookWrapper6(void, glProgramUniform4f, GLuint, program, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2, GLfloat, v3); \
    HookAliasWrapper4(void, glProgramUniform4fvEXT, glProgramUniform4fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper4(void, glProgramUniform4fv, GLuint, program, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookAliasWrapper6(void, glProgramUniform4dEXT, glProgramUniform4d, GLuint, program, GLint, location, GLdouble, v0, GLdouble, v1, GLdouble, v2, GLdouble, v3); \
    HookWrapper6(void, glProgramUniform4d, GLuint, program, GLint, location, GLdouble, v0, GLdouble, v1, GLdouble, v2, GLdouble, v3); \
    HookAliasWrapper4(void, glProgramUniform4dvEXT, glProgramUniform4dv, GLuint, program, GLint, location, GLsizei, count, const GLdouble *, value); \
    HookWrapper4(void, glProgramUniform4dv, GLuint, program, GLint, location, GLsizei, count, const GLdouble *, value); \
    HookAliasWrapper6(void, glProgramUniform4uiEXT, glProgramUniform4ui, GLuint, program, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2, GLuint, v3); \
    HookWrapper6(void, glProgramUniform4ui, GLuint, program, GLint, location, GLuint, v0, GLuint, v1, GLuint, v2, GLuint, v3); \
    HookAliasWrapper4(void, glProgramUniform4uivEXT, glProgramUniform4uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookWrapper4(void, glProgramUniform4uiv, GLuint, program, GLint, location, GLsizei, count, const GLuint *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix2fvEXT, glProgramUniformMatrix2fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glProgramUniformMatrix2fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix3fvEXT, glProgramUniformMatrix3fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glProgramUniformMatrix3fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix4fvEXT, glProgramUniformMatrix4fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glProgramUniformMatrix4fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix2dvEXT, glProgramUniformMatrix2dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper5(void, glProgramUniformMatrix2dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix3dvEXT, glProgramUniformMatrix3dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper5(void, glProgramUniformMatrix3dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix4dvEXT, glProgramUniformMatrix4dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper5(void, glProgramUniformMatrix4dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix2x3fvEXT, glProgramUniformMatrix2x3fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glProgramUniformMatrix2x3fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix3x2fvEXT, glProgramUniformMatrix3x2fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glProgramUniformMatrix3x2fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix2x4fvEXT, glProgramUniformMatrix2x4fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glProgramUniformMatrix2x4fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix4x2fvEXT, glProgramUniformMatrix4x2fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glProgramUniformMatrix4x2fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix3x4fvEXT, glProgramUniformMatrix3x4fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glProgramUniformMatrix3x4fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix4x3fvEXT, glProgramUniformMatrix4x3fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper5(void, glProgramUniformMatrix4x3fv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix2x3dvEXT, glProgramUniformMatrix2x3dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper5(void, glProgramUniformMatrix2x3dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix3x2dvEXT, glProgramUniformMatrix3x2dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper5(void, glProgramUniformMatrix3x2dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix2x4dvEXT, glProgramUniformMatrix2x4dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper5(void, glProgramUniformMatrix2x4dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix4x2dvEXT, glProgramUniformMatrix4x2dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper5(void, glProgramUniformMatrix4x2dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix3x4dvEXT, glProgramUniformMatrix3x4dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper5(void, glProgramUniformMatrix3x4dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookAliasWrapper5(void, glProgramUniformMatrix4x3dvEXT, glProgramUniformMatrix4x3dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookWrapper5(void, glProgramUniformMatrix4x3dv, GLuint, program, GLint, location, GLsizei, count, GLboolean, transpose, const GLdouble *, value); \
    HookAliasWrapper1(void, glValidateProgramPipelineEXT, glValidateProgramPipeline, GLuint, pipeline); \
    HookWrapper1(void, glValidateProgramPipeline, GLuint, pipeline); \
    HookAliasWrapper4(void, glGetProgramPipelineInfoLogEXT, glGetProgramPipelineInfoLog, GLuint, pipeline, GLsizei, bufSize, GLsizei *, length, GLchar *, infoLog); \
    HookWrapper4(void, glGetProgramPipelineInfoLog, GLuint, pipeline, GLsizei, bufSize, GLsizei *, length, GLchar *, infoLog); \
    HookAliasWrapper2(void, glVertexAttribL1dEXT, glVertexAttribL1d, GLuint, index, GLdouble, x); \
    HookWrapper2(void, glVertexAttribL1d, GLuint, index, GLdouble, x); \
    HookAliasWrapper3(void, glVertexAttribL2dEXT, glVertexAttribL2d, GLuint, index, GLdouble, x, GLdouble, y); \
    HookWrapper3(void, glVertexAttribL2d, GLuint, index, GLdouble, x, GLdouble, y); \
    HookAliasWrapper4(void, glVertexAttribL3dEXT, glVertexAttribL3d, GLuint, index, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper4(void, glVertexAttribL3d, GLuint, index, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookAliasWrapper5(void, glVertexAttribL4dEXT, glVertexAttribL4d, GLuint, index, GLdouble, x, GLdouble, y, GLdouble, z, GLdouble, w); \
    HookWrapper5(void, glVertexAttribL4d, GLuint, index, GLdouble, x, GLdouble, y, GLdouble, z, GLdouble, w); \
    HookAliasWrapper2(void, glVertexAttribL1dvEXT, glVertexAttribL1dv, GLuint, index, const GLdouble *, v); \
    HookWrapper2(void, glVertexAttribL1dv, GLuint, index, const GLdouble *, v); \
    HookAliasWrapper2(void, glVertexAttribL2dvEXT, glVertexAttribL2dv, GLuint, index, const GLdouble *, v); \
    HookWrapper2(void, glVertexAttribL2dv, GLuint, index, const GLdouble *, v); \
    HookAliasWrapper2(void, glVertexAttribL3dvEXT, glVertexAttribL3dv, GLuint, index, const GLdouble *, v); \
    HookWrapper2(void, glVertexAttribL3dv, GLuint, index, const GLdouble *, v); \
    HookAliasWrapper2(void, glVertexAttribL4dvEXT, glVertexAttribL4dv, GLuint, index, const GLdouble *, v); \
    HookWrapper2(void, glVertexAttribL4dv, GLuint, index, const GLdouble *, v); \
    HookAliasWrapper5(void, glVertexAttribLPointerEXT, glVertexAttribLPointer, GLuint, index, GLint, size, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper5(void, glVertexAttribLPointer, GLuint, index, GLint, size, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookAliasWrapper3(void, glGetVertexAttribLdvEXT, glGetVertexAttribLdv, GLuint, index, GLenum, pname, GLdouble *, params); \
    HookWrapper3(void, glGetVertexAttribLdv, GLuint, index, GLenum, pname, GLdouble *, params); \
    HookAliasWrapper3(void, glViewportArrayvOES, glViewportArrayv, GLuint, first, GLsizei, count, const GLfloat *, v); \
    HookAliasWrapper3(void, glViewportArrayvNV, glViewportArrayv, GLuint, first, GLsizei, count, const GLfloat *, v); \
    HookWrapper3(void, glViewportArrayv, GLuint, first, GLsizei, count, const GLfloat *, v); \
    HookAliasWrapper5(void, glViewportIndexedfOES, glViewportIndexedf, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, w, GLfloat, h); \
    HookAliasWrapper5(void, glViewportIndexedfNV, glViewportIndexedf, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, w, GLfloat, h); \
    HookWrapper5(void, glViewportIndexedf, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, w, GLfloat, h); \
    HookAliasWrapper2(void, glViewportIndexedfvOES, glViewportIndexedfv, GLuint, index, const GLfloat *, v); \
    HookAliasWrapper2(void, glViewportIndexedfvNV, glViewportIndexedfv, GLuint, index, const GLfloat *, v); \
    HookWrapper2(void, glViewportIndexedfv, GLuint, index, const GLfloat *, v); \
    HookAliasWrapper3(void, glScissorArrayvOES, glScissorArrayv, GLuint, first, GLsizei, count, const GLint *, v); \
    HookAliasWrapper3(void, glScissorArrayvNV, glScissorArrayv, GLuint, first, GLsizei, count, const GLint *, v); \
    HookWrapper3(void, glScissorArrayv, GLuint, first, GLsizei, count, const GLint *, v); \
    HookAliasWrapper5(void, glScissorIndexedOES, glScissorIndexed, GLuint, index, GLint, left, GLint, bottom, GLsizei, width, GLsizei, height); \
    HookAliasWrapper5(void, glScissorIndexedNV, glScissorIndexed, GLuint, index, GLint, left, GLint, bottom, GLsizei, width, GLsizei, height); \
    HookWrapper5(void, glScissorIndexed, GLuint, index, GLint, left, GLint, bottom, GLsizei, width, GLsizei, height); \
    HookAliasWrapper2(void, glScissorIndexedvOES, glScissorIndexedv, GLuint, index, const GLint *, v); \
    HookAliasWrapper2(void, glScissorIndexedvNV, glScissorIndexedv, GLuint, index, const GLint *, v); \
    HookWrapper2(void, glScissorIndexedv, GLuint, index, const GLint *, v); \
    HookWrapper3(void, glDepthRangeArrayv, GLuint, first, GLsizei, count, const GLdouble *, v); \
    HookWrapper3(void, glDepthRangeIndexed, GLuint, index, GLdouble, n, GLdouble, f); \
    HookAliasWrapper3(void, glGetFloati_vEXT, glGetFloati_v, GLenum, target, GLuint, index, GLfloat *, data); \
    HookAliasWrapper3(void, glGetFloati_vOES, glGetFloati_v, GLenum, target, GLuint, index, GLfloat *, data); \
    HookAliasWrapper3(void, glGetFloati_vNV, glGetFloati_v, GLenum, target, GLuint, index, GLfloat *, data); \
    HookWrapper3(void, glGetFloati_v, GLenum, target, GLuint, index, GLfloat *, data); \
    HookAliasWrapper3(void, glGetDoublei_vEXT, glGetDoublei_v, GLenum, target, GLuint, index, GLdouble *, data); \
    HookWrapper3(void, glGetDoublei_v, GLenum, target, GLuint, index, GLdouble *, data); \
    HookAliasWrapper5(void, glDrawArraysInstancedBaseInstanceEXT, glDrawArraysInstancedBaseInstance, GLenum, mode, GLint, first, GLsizei, count, GLsizei, instancecount, GLuint, baseinstance); \
    HookWrapper5(void, glDrawArraysInstancedBaseInstance, GLenum, mode, GLint, first, GLsizei, count, GLsizei, instancecount, GLuint, baseinstance); \
    HookAliasWrapper6(void, glDrawElementsInstancedBaseInstanceEXT, glDrawElementsInstancedBaseInstance, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount, GLuint, baseinstance); \
    HookWrapper6(void, glDrawElementsInstancedBaseInstance, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount, GLuint, baseinstance); \
    HookAliasWrapper7(void, glDrawElementsInstancedBaseVertexBaseInstanceEXT, glDrawElementsInstancedBaseVertexBaseInstance, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount, GLint, basevertex, GLuint, baseinstance); \
    HookWrapper7(void, glDrawElementsInstancedBaseVertexBaseInstance, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, instancecount, GLint, basevertex, GLuint, baseinstance); \
    HookWrapper5(void, glGetInternalformativ, GLenum, target, GLenum, internalformat, GLenum, pname, GLsizei, bufSize, GLint *, params); \
    HookWrapper4(void, glGetActiveAtomicCounterBufferiv, GLuint, program, GLuint, bufferIndex, GLenum, pname, GLint *, params); \
    HookAliasWrapper7(void, glBindImageTextureEXT, glBindImageTexture, GLuint, unit, GLuint, texture, GLint, level, GLboolean, layered, GLint, layer, GLenum, access, GLenum, format); \
    HookWrapper7(void, glBindImageTexture, GLuint, unit, GLuint, texture, GLint, level, GLboolean, layered, GLint, layer, GLenum, access, GLenum, format); \
    HookAliasWrapper1(void, glMemoryBarrierEXT, glMemoryBarrier, GLbitfield, barriers); \
    HookWrapper1(void, glMemoryBarrier, GLbitfield, barriers); \
    HookAliasWrapper4(void, glTexStorage1DEXT, glTexStorage1D, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width); \
    HookWrapper4(void, glTexStorage1D, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width); \
    HookAliasWrapper5(void, glTexStorage2DEXT, glTexStorage2D, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper5(void, glTexStorage2D, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookAliasWrapper6(void, glTexStorage3DEXT, glTexStorage3D, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth); \
    HookWrapper6(void, glTexStorage3D, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth); \
    HookWrapper3(void, glDrawTransformFeedbackInstanced, GLenum, mode, GLuint, id, GLsizei, instancecount); \
    HookWrapper4(void, glDrawTransformFeedbackStreamInstanced, GLenum, mode, GLuint, id, GLuint, stream, GLsizei, instancecount); \
    HookWrapper5(void, glClearBufferData, GLenum, target, GLenum, internalformat, GLenum, format, GLenum, type, const void *, data); \
    HookWrapper7(void, glClearBufferSubData, GLenum, target, GLenum, internalformat, GLintptr, offset, GLsizeiptr, size, GLenum, format, GLenum, type, const void *, data); \
    HookWrapper3(void, glDispatchCompute, GLuint, num_groups_x, GLuint, num_groups_y, GLuint, num_groups_z); \
    HookWrapper1(void, glDispatchComputeIndirect, GLintptr, indirect); \
    HookAliasWrapper15(void, glCopyImageSubDataEXT, glCopyImageSubData, GLuint, srcName, GLenum, srcTarget, GLint, srcLevel, GLint, srcX, GLint, srcY, GLint, srcZ, GLuint, dstName, GLenum, dstTarget, GLint, dstLevel, GLint, dstX, GLint, dstY, GLint, dstZ, GLsizei, srcWidth, GLsizei, srcHeight, GLsizei, srcDepth); \
    HookAliasWrapper15(void, glCopyImageSubDataOES, glCopyImageSubData, GLuint, srcName, GLenum, srcTarget, GLint, srcLevel, GLint, srcX, GLint, srcY, GLint, srcZ, GLuint, dstName, GLenum, dstTarget, GLint, dstLevel, GLint, dstX, GLint, dstY, GLint, dstZ, GLsizei, srcWidth, GLsizei, srcHeight, GLsizei, srcDepth); \
    HookWrapper15(void, glCopyImageSubData, GLuint, srcName, GLenum, srcTarget, GLint, srcLevel, GLint, srcX, GLint, srcY, GLint, srcZ, GLuint, dstName, GLenum, dstTarget, GLint, dstLevel, GLint, dstX, GLint, dstY, GLint, dstZ, GLsizei, srcWidth, GLsizei, srcHeight, GLsizei, srcDepth); \
    HookWrapper3(void, glFramebufferParameteri, GLenum, target, GLenum, pname, GLint, param); \
    HookWrapper3(void, glGetFramebufferParameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper5(void, glGetInternalformati64v, GLenum, target, GLenum, internalformat, GLenum, pname, GLsizei, bufSize, GLint64 *, params); \
    HookWrapper8(void, glInvalidateTexSubImage, GLuint, texture, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth); \
    HookWrapper2(void, glInvalidateTexImage, GLuint, texture, GLint, level); \
    HookWrapper3(void, glInvalidateBufferSubData, GLuint, buffer, GLintptr, offset, GLsizeiptr, length); \
    HookWrapper1(void, glInvalidateBufferData, GLuint, buffer); \
    HookWrapper3(void, glInvalidateFramebuffer, GLenum, target, GLsizei, numAttachments, const GLenum *, attachments); \
    HookWrapper7(void, glInvalidateSubFramebuffer, GLenum, target, GLsizei, numAttachments, const GLenum *, attachments, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper4(void, glMultiDrawArraysIndirect, GLenum, mode, const void *, indirect, GLsizei, drawcount, GLsizei, stride); \
    HookWrapper5(void, glMultiDrawElementsIndirect, GLenum, mode, GLenum, type, const void *, indirect, GLsizei, drawcount, GLsizei, stride); \
    HookWrapper4(void, glGetProgramInterfaceiv, GLuint, program, GLenum, programInterface, GLenum, pname, GLint *, params); \
    HookWrapper3(GLuint, glGetProgramResourceIndex, GLuint, program, GLenum, programInterface, const GLchar *, name); \
    HookWrapper6(void, glGetProgramResourceName, GLuint, program, GLenum, programInterface, GLuint, index, GLsizei, bufSize, GLsizei *, length, GLchar *, name); \
    HookWrapper8(void, glGetProgramResourceiv, GLuint, program, GLenum, programInterface, GLuint, index, GLsizei, propCount, const GLenum *, props, GLsizei, bufSize, GLsizei *, length, GLint *, params); \
    HookWrapper3(GLint, glGetProgramResourceLocation, GLuint, program, GLenum, programInterface, const GLchar *, name); \
    HookWrapper3(GLint, glGetProgramResourceLocationIndex, GLuint, program, GLenum, programInterface, const GLchar *, name); \
    HookWrapper3(void, glShaderStorageBlockBinding, GLuint, program, GLuint, storageBlockIndex, GLuint, storageBlockBinding); \
    HookAliasWrapper5(void, glTexBufferRangeEXT, glTexBufferRange, GLenum, target, GLenum, internalformat, GLuint, buffer, GLintptr, offset, GLsizeiptr, size); \
    HookAliasWrapper5(void, glTexBufferRangeOES, glTexBufferRange, GLenum, target, GLenum, internalformat, GLuint, buffer, GLintptr, offset, GLsizeiptr, size); \
    HookWrapper5(void, glTexBufferRange, GLenum, target, GLenum, internalformat, GLuint, buffer, GLintptr, offset, GLsizeiptr, size); \
    HookWrapper6(void, glTexStorage2DMultisample, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height, GLboolean, fixedsamplelocations); \
    HookAliasWrapper7(void, glTexStorage3DMultisampleOES, glTexStorage3DMultisample, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, fixedsamplelocations); \
    HookWrapper7(void, glTexStorage3DMultisample, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, fixedsamplelocations); \
    HookAliasWrapper8(void, glTextureViewEXT, glTextureView, GLuint, texture, GLenum, target, GLuint, origtexture, GLenum, internalformat, GLuint, minlevel, GLuint, numlevels, GLuint, minlayer, GLuint, numlayers); \
    HookAliasWrapper8(void, glTextureViewOES, glTextureView, GLuint, texture, GLenum, target, GLuint, origtexture, GLenum, internalformat, GLuint, minlevel, GLuint, numlevels, GLuint, minlayer, GLuint, numlayers); \
    HookWrapper8(void, glTextureView, GLuint, texture, GLenum, target, GLuint, origtexture, GLenum, internalformat, GLuint, minlevel, GLuint, numlevels, GLuint, minlayer, GLuint, numlayers); \
    HookWrapper4(void, glBindVertexBuffer, GLuint, bindingindex, GLuint, buffer, GLintptr, offset, GLsizei, stride); \
    HookWrapper5(void, glVertexAttribFormat, GLuint, attribindex, GLint, size, GLenum, type, GLboolean, normalized, GLuint, relativeoffset); \
    HookWrapper4(void, glVertexAttribIFormat, GLuint, attribindex, GLint, size, GLenum, type, GLuint, relativeoffset); \
    HookWrapper4(void, glVertexAttribLFormat, GLuint, attribindex, GLint, size, GLenum, type, GLuint, relativeoffset); \
    HookWrapper2(void, glVertexAttribBinding, GLuint, attribindex, GLuint, bindingindex); \
    HookWrapper2(void, glVertexBindingDivisor, GLuint, bindingindex, GLuint, divisor); \
    HookAliasWrapper6(void, glDebugMessageControlARB, glDebugMessageControl, GLenum, source, GLenum, type, GLenum, severity, GLsizei, count, const GLuint *, ids, GLboolean, enabled); \
    HookAliasWrapper6(void, glDebugMessageControlKHR, glDebugMessageControl, GLenum, source, GLenum, type, GLenum, severity, GLsizei, count, const GLuint *, ids, GLboolean, enabled); \
    HookWrapper6(void, glDebugMessageControl, GLenum, source, GLenum, type, GLenum, severity, GLsizei, count, const GLuint *, ids, GLboolean, enabled); \
    HookAliasWrapper6(void, glDebugMessageInsertARB, glDebugMessageInsert, GLenum, source, GLenum, type, GLuint, id, GLenum, severity, GLsizei, length, const GLchar *, buf); \
    HookAliasWrapper6(void, glDebugMessageInsertKHR, glDebugMessageInsert, GLenum, source, GLenum, type, GLuint, id, GLenum, severity, GLsizei, length, const GLchar *, buf); \
    HookWrapper6(void, glDebugMessageInsert, GLenum, source, GLenum, type, GLuint, id, GLenum, severity, GLsizei, length, const GLchar *, buf); \
    HookAliasWrapper2(void, glDebugMessageCallbackARB, glDebugMessageCallback, GLDEBUGPROC, callback, const void *, userParam); \
    HookAliasWrapper2(void, glDebugMessageCallbackKHR, glDebugMessageCallback, GLDEBUGPROC, callback, const void *, userParam); \
    HookWrapper2(void, glDebugMessageCallback, GLDEBUGPROC, callback, const void *, userParam); \
    HookAliasWrapper8(GLuint, glGetDebugMessageLogARB, glGetDebugMessageLog, GLuint, count, GLsizei, bufSize, GLenum *, sources, GLenum *, types, GLuint *, ids, GLenum *, severities, GLsizei *, lengths, GLchar *, messageLog); \
    HookAliasWrapper8(GLuint, glGetDebugMessageLogKHR, glGetDebugMessageLog, GLuint, count, GLsizei, bufSize, GLenum *, sources, GLenum *, types, GLuint *, ids, GLenum *, severities, GLsizei *, lengths, GLchar *, messageLog); \
    HookWrapper8(GLuint, glGetDebugMessageLog, GLuint, count, GLsizei, bufSize, GLenum *, sources, GLenum *, types, GLuint *, ids, GLenum *, severities, GLsizei *, lengths, GLchar *, messageLog); \
    HookAliasWrapper4(void, glPushDebugGroupKHR, glPushDebugGroup, GLenum, source, GLuint, id, GLsizei, length, const GLchar *, message); \
    HookWrapper4(void, glPushDebugGroup, GLenum, source, GLuint, id, GLsizei, length, const GLchar *, message); \
    HookAliasWrapper0(void, glPopDebugGroupKHR, glPopDebugGroup); \
    HookWrapper0(void, glPopDebugGroup); \
    HookAliasWrapper4(void, glObjectLabelKHR, glObjectLabel, GLenum, identifier, GLuint, name, GLsizei, length, const GLchar *, label); \
    HookWrapper4(void, glObjectLabel, GLenum, identifier, GLuint, name, GLsizei, length, const GLchar *, label); \
    HookAliasWrapper5(void, glGetObjectLabelKHR, glGetObjectLabel, GLenum, identifier, GLuint, name, GLsizei, bufSize, GLsizei *, length, GLchar *, label); \
    HookWrapper5(void, glGetObjectLabel, GLenum, identifier, GLuint, name, GLsizei, bufSize, GLsizei *, length, GLchar *, label); \
    HookAliasWrapper3(void, glObjectPtrLabelKHR, glObjectPtrLabel, const void *, ptr, GLsizei, length, const GLchar *, label); \
    HookWrapper3(void, glObjectPtrLabel, const void *, ptr, GLsizei, length, const GLchar *, label); \
    HookAliasWrapper4(void, glGetObjectPtrLabelKHR, glGetObjectPtrLabel, const void *, ptr, GLsizei, bufSize, GLsizei *, length, GLchar *, label); \
    HookWrapper4(void, glGetObjectPtrLabel, const void *, ptr, GLsizei, bufSize, GLsizei *, length, GLchar *, label); \
    HookWrapper4(void, glBufferStorage, GLenum, target, GLsizeiptr, size, const void *, data, GLbitfield, flags); \
    HookWrapper5(void, glClearTexImage, GLuint, texture, GLint, level, GLenum, format, GLenum, type, const void *, data); \
    HookWrapper11(void, glClearTexSubImage, GLuint, texture, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLenum, type, const void *, data); \
    HookWrapper4(void, glBindBuffersBase, GLenum, target, GLuint, first, GLsizei, count, const GLuint *, buffers); \
    HookWrapper6(void, glBindBuffersRange, GLenum, target, GLuint, first, GLsizei, count, const GLuint *, buffers, const GLintptr *, offsets, const GLsizeiptr *, sizes); \
    HookWrapper3(void, glBindTextures, GLuint, first, GLsizei, count, const GLuint *, textures); \
    HookWrapper3(void, glBindSamplers, GLuint, first, GLsizei, count, const GLuint *, samplers); \
    HookWrapper3(void, glBindImageTextures, GLuint, first, GLsizei, count, const GLuint *, textures); \
    HookWrapper5(void, glBindVertexBuffers, GLuint, first, GLsizei, count, const GLuint *, buffers, const GLintptr *, offsets, const GLsizei *, strides); \
    HookWrapper2(void, glClipControl, GLenum, origin, GLenum, depth); \
    HookWrapper2(void, glCreateTransformFeedbacks, GLsizei, n, GLuint *, ids); \
    HookWrapper3(void, glTransformFeedbackBufferBase, GLuint, xfb, GLuint, index, GLuint, buffer); \
    HookWrapper5(void, glTransformFeedbackBufferRange, GLuint, xfb, GLuint, index, GLuint, buffer, GLintptr, offset, GLsizeiptr, size); \
    HookWrapper3(void, glGetTransformFeedbackiv, GLuint, xfb, GLenum, pname, GLint *, param); \
    HookWrapper4(void, glGetTransformFeedbacki_v, GLuint, xfb, GLenum, pname, GLuint, index, GLint *, param); \
    HookWrapper4(void, glGetTransformFeedbacki64_v, GLuint, xfb, GLenum, pname, GLuint, index, GLint64 *, param); \
    HookWrapper2(void, glCreateBuffers, GLsizei, n, GLuint *, buffers); \
    HookWrapper4(void, glNamedBufferStorage, GLuint, buffer, GLsizeiptr, size, const void *, data, GLbitfield, flags); \
    HookWrapper4(void, glNamedBufferData, GLuint, buffer, GLsizeiptr, size, const void *, data, GLenum, usage); \
    HookWrapper4(void, glNamedBufferSubData, GLuint, buffer, GLintptr, offset, GLsizeiptr, size, const void *, data); \
    HookWrapper5(void, glCopyNamedBufferSubData, GLuint, readBuffer, GLuint, writeBuffer, GLintptr, readOffset, GLintptr, writeOffset, GLsizeiptr, size); \
    HookAliasWrapper5(void, glClearNamedBufferData, glClearNamedBufferDataEXT, GLuint, buffer, GLenum, internalformat, GLenum, format, GLenum, type, const void *, data); \
    HookWrapper5(void, glClearNamedBufferDataEXT, GLuint, buffer, GLenum, internalformat, GLenum, format, GLenum, type, const void *, data); \
    HookWrapper7(void, glClearNamedBufferSubData, GLuint, buffer, GLenum, internalformat, GLintptr, offset, GLsizeiptr, size, GLenum, format, GLenum, type, const void *, data); \
    HookAliasWrapper2(void *, glMapNamedBuffer, glMapNamedBufferEXT, GLuint, buffer, GLenum, access); \
    HookWrapper2(void *, glMapNamedBufferEXT, GLuint, buffer, GLenum, access); \
    HookWrapper4(void *, glMapNamedBufferRange, GLuint, buffer, GLintptr, offset, GLsizeiptr, length, GLbitfield, access); \
    HookAliasWrapper1(GLboolean, glUnmapNamedBuffer, glUnmapNamedBufferEXT, GLuint, buffer); \
    HookWrapper1(GLboolean, glUnmapNamedBufferEXT, GLuint, buffer); \
    HookWrapper3(void, glFlushMappedNamedBufferRange, GLuint, buffer, GLintptr, offset, GLsizeiptr, length); \
    HookAliasWrapper3(void, glGetNamedBufferParameteriv, glGetNamedBufferParameterivEXT, GLuint, buffer, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetNamedBufferParameterivEXT, GLuint, buffer, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetNamedBufferParameteri64v, GLuint, buffer, GLenum, pname, GLint64 *, params); \
    HookAliasWrapper3(void, glGetNamedBufferPointerv, glGetNamedBufferPointervEXT, GLuint, buffer, GLenum, pname, void **, params); \
    HookWrapper3(void, glGetNamedBufferPointervEXT, GLuint, buffer, GLenum, pname, void **, params); \
    HookWrapper4(void, glGetNamedBufferSubData, GLuint, buffer, GLintptr, offset, GLsizeiptr, size, void *, data); \
    HookWrapper2(void, glCreateFramebuffers, GLsizei, n, GLuint *, framebuffers); \
    HookAliasWrapper4(void, glNamedFramebufferRenderbuffer, glNamedFramebufferRenderbufferEXT, GLuint, framebuffer, GLenum, attachment, GLenum, renderbuffertarget, GLuint, renderbuffer); \
    HookWrapper4(void, glNamedFramebufferRenderbufferEXT, GLuint, framebuffer, GLenum, attachment, GLenum, renderbuffertarget, GLuint, renderbuffer); \
    HookAliasWrapper3(void, glNamedFramebufferParameteri, glNamedFramebufferParameteriEXT, GLuint, framebuffer, GLenum, pname, GLint, param); \
    HookWrapper3(void, glNamedFramebufferParameteriEXT, GLuint, framebuffer, GLenum, pname, GLint, param); \
    HookAliasWrapper4(void, glNamedFramebufferTexture, glNamedFramebufferTextureEXT, GLuint, framebuffer, GLenum, attachment, GLuint, texture, GLint, level); \
    HookWrapper4(void, glNamedFramebufferTextureEXT, GLuint, framebuffer, GLenum, attachment, GLuint, texture, GLint, level); \
    HookAliasWrapper5(void, glNamedFramebufferTextureLayer, glNamedFramebufferTextureLayerEXT, GLuint, framebuffer, GLenum, attachment, GLuint, texture, GLint, level, GLint, layer); \
    HookWrapper5(void, glNamedFramebufferTextureLayerEXT, GLuint, framebuffer, GLenum, attachment, GLuint, texture, GLint, level, GLint, layer); \
    HookAliasWrapper2(void, glNamedFramebufferDrawBuffer, glFramebufferDrawBufferEXT, GLuint, framebuffer, GLenum, buf); \
    HookWrapper2(void, glFramebufferDrawBufferEXT, GLuint, framebuffer, GLenum, buf); \
    HookAliasWrapper3(void, glNamedFramebufferDrawBuffers, glFramebufferDrawBuffersEXT, GLuint, framebuffer, GLsizei, n, const GLenum *, bufs); \
    HookWrapper3(void, glFramebufferDrawBuffersEXT, GLuint, framebuffer, GLsizei, n, const GLenum *, bufs); \
    HookAliasWrapper2(void, glNamedFramebufferReadBuffer, glFramebufferReadBufferEXT, GLuint, framebuffer, GLenum, src); \
    HookWrapper2(void, glFramebufferReadBufferEXT, GLuint, framebuffer, GLenum, src); \
    HookWrapper3(void, glInvalidateNamedFramebufferData, GLuint, framebuffer, GLsizei, numAttachments, const GLenum *, attachments); \
    HookWrapper7(void, glInvalidateNamedFramebufferSubData, GLuint, framebuffer, GLsizei, numAttachments, const GLenum *, attachments, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper4(void, glClearNamedFramebufferiv, GLuint, framebuffer, GLenum, buffer, GLint, drawbuffer, const GLint *, value); \
    HookWrapper4(void, glClearNamedFramebufferuiv, GLuint, framebuffer, GLenum, buffer, GLint, drawbuffer, const GLuint *, value); \
    HookWrapper4(void, glClearNamedFramebufferfv, GLuint, framebuffer, GLenum, buffer, GLint, drawbuffer, const GLfloat *, value); \
    HookWrapper5(void, glClearNamedFramebufferfi, GLuint, framebuffer, GLenum, buffer, GLint, drawbuffer, GLfloat, depth, GLint, stencil); \
    HookWrapper12(void, glBlitNamedFramebuffer, GLuint, readFramebuffer, GLuint, drawFramebuffer, GLint, srcX0, GLint, srcY0, GLint, srcX1, GLint, srcY1, GLint, dstX0, GLint, dstY0, GLint, dstX1, GLint, dstY1, GLbitfield, mask, GLenum, filter); \
    HookAliasWrapper2(GLenum, glCheckNamedFramebufferStatus, glCheckNamedFramebufferStatusEXT, GLuint, framebuffer, GLenum, target); \
    HookWrapper2(GLenum, glCheckNamedFramebufferStatusEXT, GLuint, framebuffer, GLenum, target); \
    HookAliasWrapper3(void, glGetFramebufferParameterivEXT, glGetNamedFramebufferParameterivEXT, GLuint, framebuffer, GLenum, pname, GLint *, param); \
    HookAliasWrapper3(void, glGetNamedFramebufferParameteriv, glGetNamedFramebufferParameterivEXT, GLuint, framebuffer, GLenum, pname, GLint *, param); \
    HookWrapper3(void, glGetNamedFramebufferParameterivEXT, GLuint, framebuffer, GLenum, pname, GLint *, param); \
    HookAliasWrapper4(void, glGetNamedFramebufferAttachmentParameteriv, glGetNamedFramebufferAttachmentParameterivEXT, GLuint, framebuffer, GLenum, attachment, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetNamedFramebufferAttachmentParameterivEXT, GLuint, framebuffer, GLenum, attachment, GLenum, pname, GLint *, params); \
    HookWrapper2(void, glCreateRenderbuffers, GLsizei, n, GLuint *, renderbuffers); \
    HookAliasWrapper4(void, glNamedRenderbufferStorage, glNamedRenderbufferStorageEXT, GLuint, renderbuffer, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper4(void, glNamedRenderbufferStorageEXT, GLuint, renderbuffer, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookAliasWrapper5(void, glNamedRenderbufferStorageMultisample, glNamedRenderbufferStorageMultisampleEXT, GLuint, renderbuffer, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper5(void, glNamedRenderbufferStorageMultisampleEXT, GLuint, renderbuffer, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookAliasWrapper3(void, glGetNamedRenderbufferParameteriv, glGetNamedRenderbufferParameterivEXT, GLuint, renderbuffer, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetNamedRenderbufferParameterivEXT, GLuint, renderbuffer, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glCreateTextures, GLenum, target, GLsizei, n, GLuint *, textures); \
    HookWrapper3(void, glTextureBuffer, GLuint, texture, GLenum, internalformat, GLuint, buffer); \
    HookWrapper5(void, glTextureBufferRange, GLuint, texture, GLenum, internalformat, GLuint, buffer, GLintptr, offset, GLsizeiptr, size); \
    HookWrapper4(void, glTextureStorage1D, GLuint, texture, GLsizei, levels, GLenum, internalformat, GLsizei, width); \
    HookWrapper5(void, glTextureStorage2D, GLuint, texture, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper6(void, glTextureStorage3D, GLuint, texture, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth); \
    HookWrapper6(void, glTextureStorage2DMultisample, GLuint, texture, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height, GLboolean, fixedsamplelocations); \
    HookWrapper7(void, glTextureStorage3DMultisample, GLuint, texture, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, fixedsamplelocations); \
    HookWrapper7(void, glTextureSubImage1D, GLuint, texture, GLint, level, GLint, xoffset, GLsizei, width, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper9(void, glTextureSubImage2D, GLuint, texture, GLint, level, GLint, xoffset, GLint, yoffset, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper11(void, glTextureSubImage3D, GLuint, texture, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper7(void, glCompressedTextureSubImage1D, GLuint, texture, GLint, level, GLint, xoffset, GLsizei, width, GLenum, format, GLsizei, imageSize, const void *, data); \
    HookWrapper9(void, glCompressedTextureSubImage2D, GLuint, texture, GLint, level, GLint, xoffset, GLint, yoffset, GLsizei, width, GLsizei, height, GLenum, format, GLsizei, imageSize, const void *, data); \
    HookWrapper11(void, glCompressedTextureSubImage3D, GLuint, texture, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLsizei, imageSize, const void *, data); \
    HookWrapper6(void, glCopyTextureSubImage1D, GLuint, texture, GLint, level, GLint, xoffset, GLint, x, GLint, y, GLsizei, width); \
    HookWrapper8(void, glCopyTextureSubImage2D, GLuint, texture, GLint, level, GLint, xoffset, GLint, yoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper9(void, glCopyTextureSubImage3D, GLuint, texture, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper3(void, glTextureParameterf, GLuint, texture, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, glTextureParameterfv, GLuint, texture, GLenum, pname, const GLfloat *, param); \
    HookWrapper3(void, glTextureParameteri, GLuint, texture, GLenum, pname, GLint, param); \
    HookWrapper3(void, glTextureParameterIiv, GLuint, texture, GLenum, pname, const GLint *, params); \
    HookWrapper3(void, glTextureParameterIuiv, GLuint, texture, GLenum, pname, const GLuint *, params); \
    HookWrapper3(void, glTextureParameteriv, GLuint, texture, GLenum, pname, const GLint *, param); \
    HookWrapper1(void, glGenerateTextureMipmap, GLuint, texture); \
    HookWrapper2(void, glBindTextureUnit, GLuint, unit, GLuint, texture); \
    HookWrapper6(void, glGetTextureImage, GLuint, texture, GLint, level, GLenum, format, GLenum, type, GLsizei, bufSize, void *, pixels); \
    HookWrapper4(void, glGetCompressedTextureImage, GLuint, texture, GLint, level, GLsizei, bufSize, void *, pixels); \
    HookWrapper4(void, glGetTextureLevelParameterfv, GLuint, texture, GLint, level, GLenum, pname, GLfloat *, params); \
    HookWrapper4(void, glGetTextureLevelParameteriv, GLuint, texture, GLint, level, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetTextureParameterfv, GLuint, texture, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetTextureParameterIiv, GLuint, texture, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetTextureParameterIuiv, GLuint, texture, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, glGetTextureParameteriv, GLuint, texture, GLenum, pname, GLint *, params); \
    HookWrapper2(void, glCreateVertexArrays, GLsizei, n, GLuint *, arrays); \
    HookAliasWrapper2(void, glDisableVertexArrayAttrib, glDisableVertexArrayAttribEXT, GLuint, vaobj, GLuint, index); \
    HookWrapper2(void, glDisableVertexArrayAttribEXT, GLuint, vaobj, GLuint, index); \
    HookAliasWrapper2(void, glEnableVertexArrayAttrib, glEnableVertexArrayAttribEXT, GLuint, vaobj, GLuint, index); \
    HookWrapper2(void, glEnableVertexArrayAttribEXT, GLuint, vaobj, GLuint, index); \
    HookWrapper2(void, glVertexArrayElementBuffer, GLuint, vaobj, GLuint, buffer); \
    HookAliasWrapper5(void, glVertexArrayVertexBuffer, glVertexArrayBindVertexBufferEXT, GLuint, vaobj, GLuint, bindingindex, GLuint, buffer, GLintptr, offset, GLsizei, stride); \
    HookWrapper5(void, glVertexArrayBindVertexBufferEXT, GLuint, vaobj, GLuint, bindingindex, GLuint, buffer, GLintptr, offset, GLsizei, stride); \
    HookWrapper6(void, glVertexArrayVertexBuffers, GLuint, vaobj, GLuint, first, GLsizei, count, const GLuint *, buffers, const GLintptr *, offsets, const GLsizei *, strides); \
    HookAliasWrapper3(void, glVertexArrayAttribBinding, glVertexArrayVertexAttribBindingEXT, GLuint, vaobj, GLuint, attribindex, GLuint, bindingindex); \
    HookWrapper3(void, glVertexArrayVertexAttribBindingEXT, GLuint, vaobj, GLuint, attribindex, GLuint, bindingindex); \
    HookAliasWrapper6(void, glVertexArrayAttribFormat, glVertexArrayVertexAttribFormatEXT, GLuint, vaobj, GLuint, attribindex, GLint, size, GLenum, type, GLboolean, normalized, GLuint, relativeoffset); \
    HookWrapper6(void, glVertexArrayVertexAttribFormatEXT, GLuint, vaobj, GLuint, attribindex, GLint, size, GLenum, type, GLboolean, normalized, GLuint, relativeoffset); \
    HookAliasWrapper5(void, glVertexArrayAttribIFormat, glVertexArrayVertexAttribIFormatEXT, GLuint, vaobj, GLuint, attribindex, GLint, size, GLenum, type, GLuint, relativeoffset); \
    HookWrapper5(void, glVertexArrayVertexAttribIFormatEXT, GLuint, vaobj, GLuint, attribindex, GLint, size, GLenum, type, GLuint, relativeoffset); \
    HookAliasWrapper5(void, glVertexArrayAttribLFormat, glVertexArrayVertexAttribLFormatEXT, GLuint, vaobj, GLuint, attribindex, GLint, size, GLenum, type, GLuint, relativeoffset); \
    HookWrapper5(void, glVertexArrayVertexAttribLFormatEXT, GLuint, vaobj, GLuint, attribindex, GLint, size, GLenum, type, GLuint, relativeoffset); \
    HookAliasWrapper3(void, glVertexArrayBindingDivisor, glVertexArrayVertexBindingDivisorEXT, GLuint, vaobj, GLuint, bindingindex, GLuint, divisor); \
    HookWrapper3(void, glVertexArrayVertexBindingDivisorEXT, GLuint, vaobj, GLuint, bindingindex, GLuint, divisor); \
    HookWrapper3(void, glGetVertexArrayiv, GLuint, vaobj, GLenum, pname, GLint *, param); \
    HookWrapper4(void, glGetVertexArrayIndexediv, GLuint, vaobj, GLuint, index, GLenum, pname, GLint *, param); \
    HookWrapper4(void, glGetVertexArrayIndexed64iv, GLuint, vaobj, GLuint, index, GLenum, pname, GLint64 *, param); \
    HookWrapper2(void, glCreateSamplers, GLsizei, n, GLuint *, samplers); \
    HookWrapper2(void, glCreateProgramPipelines, GLsizei, n, GLuint *, pipelines); \
    HookWrapper3(void, glCreateQueries, GLenum, target, GLsizei, n, GLuint *, ids); \
    HookWrapper4(void, glGetQueryBufferObjecti64v, GLuint, id, GLuint, buffer, GLenum, pname, GLintptr, offset); \
    HookWrapper4(void, glGetQueryBufferObjectiv, GLuint, id, GLuint, buffer, GLenum, pname, GLintptr, offset); \
    HookWrapper4(void, glGetQueryBufferObjectui64v, GLuint, id, GLuint, buffer, GLenum, pname, GLintptr, offset); \
    HookWrapper4(void, glGetQueryBufferObjectuiv, GLuint, id, GLuint, buffer, GLenum, pname, GLintptr, offset); \
    HookWrapper1(void, glMemoryBarrierByRegion, GLbitfield, barriers); \
    HookWrapper12(void, glGetTextureSubImage, GLuint, texture, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLenum, type, GLsizei, bufSize, void *, pixels); \
    HookWrapper10(void, glGetCompressedTextureSubImage, GLuint, texture, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLsizei, bufSize, void *, pixels); \
    HookAliasWrapper0(GLenum, glGetGraphicsResetStatusARB, glGetGraphicsResetStatus); \
    HookAliasWrapper0(GLenum, glGetGraphicsResetStatusEXT, glGetGraphicsResetStatus); \
    HookWrapper0(GLenum, glGetGraphicsResetStatus); \
    HookAliasWrapper4(void, glGetnCompressedTexImageARB, glGetnCompressedTexImage, GLenum, target, GLint, lod, GLsizei, bufSize, void *, pixels); \
    HookWrapper4(void, glGetnCompressedTexImage, GLenum, target, GLint, lod, GLsizei, bufSize, void *, pixels); \
    HookAliasWrapper6(void, glGetnTexImageARB, glGetnTexImage, GLenum, target, GLint, level, GLenum, format, GLenum, type, GLsizei, bufSize, void *, pixels); \
    HookWrapper6(void, glGetnTexImage, GLenum, target, GLint, level, GLenum, format, GLenum, type, GLsizei, bufSize, void *, pixels); \
    HookAliasWrapper4(void, glGetnUniformdvARB, glGetnUniformdv, GLuint, program, GLint, location, GLsizei, bufSize, GLdouble *, params); \
    HookWrapper4(void, glGetnUniformdv, GLuint, program, GLint, location, GLsizei, bufSize, GLdouble *, params); \
    HookAliasWrapper4(void, glGetnUniformfvARB, glGetnUniformfv, GLuint, program, GLint, location, GLsizei, bufSize, GLfloat *, params); \
    HookAliasWrapper4(void, glGetnUniformfvEXT, glGetnUniformfv, GLuint, program, GLint, location, GLsizei, bufSize, GLfloat *, params); \
    HookWrapper4(void, glGetnUniformfv, GLuint, program, GLint, location, GLsizei, bufSize, GLfloat *, params); \
    HookAliasWrapper4(void, glGetnUniformivARB, glGetnUniformiv, GLuint, program, GLint, location, GLsizei, bufSize, GLint *, params); \
    HookAliasWrapper4(void, glGetnUniformivEXT, glGetnUniformiv, GLuint, program, GLint, location, GLsizei, bufSize, GLint *, params); \
    HookWrapper4(void, glGetnUniformiv, GLuint, program, GLint, location, GLsizei, bufSize, GLint *, params); \
    HookAliasWrapper4(void, glGetnUniformuivARB, glGetnUniformuiv, GLuint, program, GLint, location, GLsizei, bufSize, GLuint *, params); \
    HookWrapper4(void, glGetnUniformuiv, GLuint, program, GLint, location, GLsizei, bufSize, GLuint *, params); \
    HookAliasWrapper8(void, glReadnPixelsARB, glReadnPixels, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, GLsizei, bufSize, void *, data); \
    HookAliasWrapper8(void, glReadnPixelsEXT, glReadnPixels, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, GLsizei, bufSize, void *, data); \
    HookWrapper8(void, glReadnPixels, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, GLsizei, bufSize, void *, data); \
    HookWrapper0(void, glTextureBarrier); \
    HookWrapper6(void, glDispatchComputeGroupSizeARB, GLuint, num_groups_x, GLuint, num_groups_y, GLuint, num_groups_z, GLuint, group_size_x, GLuint, group_size_y, GLuint, group_size_z); \
    HookWrapper5(void, glMultiDrawArraysIndirectCountARB, GLenum, mode, const void *, indirect, GLintptr, drawcount, GLsizei, maxdrawcount, GLsizei, stride); \
    HookWrapper6(void, glMultiDrawElementsIndirectCountARB, GLenum, mode, GLenum, type, const void *, indirect, GLintptr, drawcount, GLsizei, maxdrawcount, GLsizei, stride); \
    HookWrapper5(void, glNamedStringARB, GLenum, type, GLint, namelen, const GLchar *, name, GLint, stringlen, const GLchar *, string); \
    HookWrapper2(void, glDeleteNamedStringARB, GLint, namelen, const GLchar *, name); \
    HookWrapper4(void, glCompileShaderIncludeARB, GLuint, shader, GLsizei, count, const GLchar *const*, path, const GLint *, length); \
    HookWrapper2(GLboolean, glIsNamedStringARB, GLint, namelen, const GLchar *, name); \
    HookWrapper5(void, glGetNamedStringARB, GLint, namelen, const GLchar *, name, GLsizei, bufSize, GLint *, stringlen, GLchar *, string); \
    HookWrapper4(void, glGetNamedStringivARB, GLint, namelen, const GLchar *, name, GLenum, pname, GLint *, params); \
    HookWrapper0(void, glBlendBarrierKHR); \
    HookWrapper4(void, glLabelObjectEXT, GLenum, type, GLuint, object, GLsizei, length, const GLchar *, label); \
    HookWrapper5(void, glGetObjectLabelEXT, GLenum, type, GLuint, object, GLsizei, bufSize, GLsizei *, length, GLchar *, label); \
    HookWrapper2(void, glInsertEventMarkerEXT, GLsizei, length, const GLchar *, marker); \
    HookWrapper2(void, glPushGroupMarkerEXT, GLsizei, length, const GLchar *, marker); \
    HookWrapper0(void, glPopGroupMarkerEXT); \
    HookWrapper4(void, glTextureParameterfEXT, GLuint, texture, GLenum, target, GLenum, pname, GLfloat, param); \
    HookWrapper4(void, glTextureParameterfvEXT, GLuint, texture, GLenum, target, GLenum, pname, const GLfloat *, params); \
    HookWrapper4(void, glTextureParameteriEXT, GLuint, texture, GLenum, target, GLenum, pname, GLint, param); \
    HookWrapper4(void, glTextureParameterivEXT, GLuint, texture, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper9(void, glTextureImage1DEXT, GLuint, texture, GLenum, target, GLint, level, GLint, internalformat, GLsizei, width, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper10(void, glTextureImage2DEXT, GLuint, texture, GLenum, target, GLint, level, GLint, internalformat, GLsizei, width, GLsizei, height, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper8(void, glTextureSubImage1DEXT, GLuint, texture, GLenum, target, GLint, level, GLint, xoffset, GLsizei, width, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper10(void, glTextureSubImage2DEXT, GLuint, texture, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper8(void, glCopyTextureImage1DEXT, GLuint, texture, GLenum, target, GLint, level, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width, GLint, border); \
    HookWrapper9(void, glCopyTextureImage2DEXT, GLuint, texture, GLenum, target, GLint, level, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLint, border); \
    HookWrapper7(void, glCopyTextureSubImage1DEXT, GLuint, texture, GLenum, target, GLint, level, GLint, xoffset, GLint, x, GLint, y, GLsizei, width); \
    HookWrapper9(void, glCopyTextureSubImage2DEXT, GLuint, texture, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper6(void, glGetTextureImageEXT, GLuint, texture, GLenum, target, GLint, level, GLenum, format, GLenum, type, void *, pixels); \
    HookWrapper4(void, glGetTextureParameterfvEXT, GLuint, texture, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper4(void, glGetTextureParameterivEXT, GLuint, texture, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper5(void, glGetTextureLevelParameterfvEXT, GLuint, texture, GLenum, target, GLint, level, GLenum, pname, GLfloat *, params); \
    HookWrapper5(void, glGetTextureLevelParameterivEXT, GLuint, texture, GLenum, target, GLint, level, GLenum, pname, GLint *, params); \
    HookWrapper11(void, glTextureImage3DEXT, GLuint, texture, GLenum, target, GLint, level, GLint, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper12(void, glTextureSubImage3DEXT, GLuint, texture, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper10(void, glCopyTextureSubImage3DEXT, GLuint, texture, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper3(void, glBindMultiTextureEXT, GLenum, texunit, GLenum, target, GLuint, texture); \
    HookWrapper4(void, glMultiTexParameteriEXT, GLenum, texunit, GLenum, target, GLenum, pname, GLint, param); \
    HookWrapper4(void, glMultiTexParameterivEXT, GLenum, texunit, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper4(void, glMultiTexParameterfEXT, GLenum, texunit, GLenum, target, GLenum, pname, GLfloat, param); \
    HookWrapper4(void, glMultiTexParameterfvEXT, GLenum, texunit, GLenum, target, GLenum, pname, const GLfloat *, params); \
    HookWrapper9(void, glMultiTexImage1DEXT, GLenum, texunit, GLenum, target, GLint, level, GLint, internalformat, GLsizei, width, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper10(void, glMultiTexImage2DEXT, GLenum, texunit, GLenum, target, GLint, level, GLint, internalformat, GLsizei, width, GLsizei, height, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper8(void, glMultiTexSubImage1DEXT, GLenum, texunit, GLenum, target, GLint, level, GLint, xoffset, GLsizei, width, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper10(void, glMultiTexSubImage2DEXT, GLenum, texunit, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper8(void, glCopyMultiTexImage1DEXT, GLenum, texunit, GLenum, target, GLint, level, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width, GLint, border); \
    HookWrapper9(void, glCopyMultiTexImage2DEXT, GLenum, texunit, GLenum, target, GLint, level, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLint, border); \
    HookWrapper7(void, glCopyMultiTexSubImage1DEXT, GLenum, texunit, GLenum, target, GLint, level, GLint, xoffset, GLint, x, GLint, y, GLsizei, width); \
    HookWrapper9(void, glCopyMultiTexSubImage2DEXT, GLenum, texunit, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper6(void, glGetMultiTexImageEXT, GLenum, texunit, GLenum, target, GLint, level, GLenum, format, GLenum, type, void *, pixels); \
    HookWrapper4(void, glGetMultiTexParameterfvEXT, GLenum, texunit, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper4(void, glGetMultiTexParameterivEXT, GLenum, texunit, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper5(void, glGetMultiTexLevelParameterfvEXT, GLenum, texunit, GLenum, target, GLint, level, GLenum, pname, GLfloat *, params); \
    HookWrapper5(void, glGetMultiTexLevelParameterivEXT, GLenum, texunit, GLenum, target, GLint, level, GLenum, pname, GLint *, params); \
    HookWrapper11(void, glMultiTexImage3DEXT, GLenum, texunit, GLenum, target, GLint, level, GLint, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper12(void, glMultiTexSubImage3DEXT, GLenum, texunit, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper10(void, glCopyMultiTexSubImage3DEXT, GLenum, texunit, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper3(void, glGetFloatIndexedvEXT, GLenum, target, GLuint, index, GLfloat *, data); \
    HookWrapper3(void, glGetDoubleIndexedvEXT, GLenum, target, GLuint, index, GLdouble *, data); \
    HookWrapper3(void, glGetPointerIndexedvEXT, GLenum, target, GLuint, index, void **, data); \
    HookWrapper3(void, glGetIntegerIndexedvEXT, GLenum, target, GLuint, index, GLint *, data); \
    HookWrapper3(void, glGetBooleanIndexedvEXT, GLenum, target, GLuint, index, GLboolean *, data); \
    HookWrapper10(void, glCompressedTextureImage3DEXT, GLuint, texture, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLsizei, imageSize, const void *, bits); \
    HookWrapper9(void, glCompressedTextureImage2DEXT, GLuint, texture, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLint, border, GLsizei, imageSize, const void *, bits); \
    HookWrapper8(void, glCompressedTextureImage1DEXT, GLuint, texture, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLint, border, GLsizei, imageSize, const void *, bits); \
    HookWrapper12(void, glCompressedTextureSubImage3DEXT, GLuint, texture, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLsizei, imageSize, const void *, bits); \
    HookWrapper10(void, glCompressedTextureSubImage2DEXT, GLuint, texture, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLsizei, width, GLsizei, height, GLenum, format, GLsizei, imageSize, const void *, bits); \
    HookWrapper8(void, glCompressedTextureSubImage1DEXT, GLuint, texture, GLenum, target, GLint, level, GLint, xoffset, GLsizei, width, GLenum, format, GLsizei, imageSize, const void *, bits); \
    HookWrapper4(void, glGetCompressedTextureImageEXT, GLuint, texture, GLenum, target, GLint, lod, void *, img); \
    HookWrapper10(void, glCompressedMultiTexImage3DEXT, GLenum, texunit, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLint, border, GLsizei, imageSize, const void *, bits); \
    HookWrapper9(void, glCompressedMultiTexImage2DEXT, GLenum, texunit, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLint, border, GLsizei, imageSize, const void *, bits); \
    HookWrapper8(void, glCompressedMultiTexImage1DEXT, GLenum, texunit, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLint, border, GLsizei, imageSize, const void *, bits); \
    HookWrapper12(void, glCompressedMultiTexSubImage3DEXT, GLenum, texunit, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLsizei, imageSize, const void *, bits); \
    HookWrapper10(void, glCompressedMultiTexSubImage2DEXT, GLenum, texunit, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLsizei, width, GLsizei, height, GLenum, format, GLsizei, imageSize, const void *, bits); \
    HookWrapper8(void, glCompressedMultiTexSubImage1DEXT, GLenum, texunit, GLenum, target, GLint, level, GLint, xoffset, GLsizei, width, GLenum, format, GLsizei, imageSize, const void *, bits); \
    HookWrapper4(void, glGetCompressedMultiTexImageEXT, GLenum, texunit, GLenum, target, GLint, lod, void *, img); \
    HookWrapper4(void, glNamedBufferDataEXT, GLuint, buffer, GLsizeiptr, size, const void *, data, GLenum, usage); \
    HookWrapper4(void, glNamedBufferSubDataEXT, GLuint, buffer, GLintptr, offset, GLsizeiptr, size, const void *, data); \
    HookWrapper4(void, glGetNamedBufferSubDataEXT, GLuint, buffer, GLintptr, offset, GLsizeiptr, size, void *, data); \
    HookWrapper4(void, glTextureBufferEXT, GLuint, texture, GLenum, target, GLenum, internalformat, GLuint, buffer); \
    HookWrapper4(void, glMultiTexBufferEXT, GLenum, texunit, GLenum, target, GLenum, internalformat, GLuint, buffer); \
    HookWrapper4(void, glTextureParameterIivEXT, GLuint, texture, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper4(void, glTextureParameterIuivEXT, GLuint, texture, GLenum, target, GLenum, pname, const GLuint *, params); \
    HookWrapper4(void, glGetTextureParameterIivEXT, GLuint, texture, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetTextureParameterIuivEXT, GLuint, texture, GLenum, target, GLenum, pname, GLuint *, params); \
    HookWrapper4(void, glMultiTexParameterIivEXT, GLenum, texunit, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper4(void, glMultiTexParameterIuivEXT, GLenum, texunit, GLenum, target, GLenum, pname, const GLuint *, params); \
    HookWrapper4(void, glGetMultiTexParameterIivEXT, GLenum, texunit, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetMultiTexParameterIuivEXT, GLenum, texunit, GLenum, target, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, glGetPointeri_vEXT, GLenum, pname, GLuint, index, void **, params); \
    HookWrapper4(void, glGetNamedProgramivEXT, GLuint, program, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper5(void, glNamedFramebufferTexture1DEXT, GLuint, framebuffer, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level); \
    HookWrapper5(void, glNamedFramebufferTexture2DEXT, GLuint, framebuffer, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level); \
    HookWrapper6(void, glNamedFramebufferTexture3DEXT, GLuint, framebuffer, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level, GLint, zoffset); \
    HookWrapper2(void, glGenerateTextureMipmapEXT, GLuint, texture, GLenum, target); \
    HookWrapper2(void, glGenerateMultiTexMipmapEXT, GLenum, texunit, GLenum, target); \
    HookWrapper5(void, glNamedCopyBufferSubDataEXT, GLuint, readBuffer, GLuint, writeBuffer, GLintptr, readOffset, GLintptr, writeOffset, GLsizeiptr, size); \
    HookWrapper8(void, glVertexArrayVertexAttribOffsetEXT, GLuint, vaobj, GLuint, buffer, GLuint, index, GLint, size, GLenum, type, GLboolean, normalized, GLsizei, stride, GLintptr, offset); \
    HookWrapper7(void, glVertexArrayVertexAttribIOffsetEXT, GLuint, vaobj, GLuint, buffer, GLuint, index, GLint, size, GLenum, type, GLsizei, stride, GLintptr, offset); \
    HookWrapper3(void, glGetVertexArrayIntegervEXT, GLuint, vaobj, GLenum, pname, GLint *, param); \
    HookWrapper3(void, glGetVertexArrayPointervEXT, GLuint, vaobj, GLenum, pname, void **, param); \
    HookWrapper4(void, glGetVertexArrayIntegeri_vEXT, GLuint, vaobj, GLuint, index, GLenum, pname, GLint *, param); \
    HookWrapper4(void, glGetVertexArrayPointeri_vEXT, GLuint, vaobj, GLuint, index, GLenum, pname, void **, param); \
    HookWrapper4(void *, glMapNamedBufferRangeEXT, GLuint, buffer, GLintptr, offset, GLsizeiptr, length, GLbitfield, access); \
    HookWrapper3(void, glFlushMappedNamedBufferRangeEXT, GLuint, buffer, GLintptr, offset, GLsizeiptr, length); \
    HookWrapper4(void, glNamedBufferStorageEXT, GLuint, buffer, GLsizeiptr, size, const void *, data, GLbitfield, flags); \
    HookWrapper7(void, glClearNamedBufferSubDataEXT, GLuint, buffer, GLenum, internalformat, GLsizeiptr, offset, GLsizeiptr, size, GLenum, format, GLenum, type, const void *, data); \
    HookWrapper6(void, glTextureBufferRangeEXT, GLuint, texture, GLenum, target, GLenum, internalformat, GLuint, buffer, GLintptr, offset, GLsizeiptr, size); \
    HookWrapper5(void, glTextureStorage1DEXT, GLuint, texture, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width); \
    HookWrapper6(void, glTextureStorage2DEXT, GLuint, texture, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper7(void, glTextureStorage3DEXT, GLuint, texture, GLenum, target, GLsizei, levels, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth); \
    HookWrapper7(void, glTextureStorage2DMultisampleEXT, GLuint, texture, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height, GLboolean, fixedsamplelocations); \
    HookWrapper8(void, glTextureStorage3DMultisampleEXT, GLuint, texture, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, fixedsamplelocations); \
    HookWrapper7(void, glVertexArrayVertexAttribLOffsetEXT, GLuint, vaobj, GLuint, buffer, GLuint, index, GLint, size, GLenum, type, GLsizei, stride, GLintptr, offset); \
    HookWrapper3(void, glVertexArrayVertexAttribDivisorEXT, GLuint, vaobj, GLuint, index, GLuint, divisor); \
    HookWrapper3(void, glPolygonOffsetClampEXT, GLfloat, factor, GLfloat, units, GLfloat, clamp); \
    HookWrapper2(void, glRasterSamplesEXT, GLuint, samples, GLboolean, fixedsamplelocations); \
    HookWrapper6(void, glFramebufferTextureMultiviewOVR, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level, GLint, baseViewIndex, GLsizei, numViews); \
    HookWrapper2(void, glDepthBoundsEXT, GLclampd, zmin, GLclampd, zmax); \
    HookWrapper0(void, glFrameTerminatorGREMEDY); \
    HookWrapper2(void, glStringMarkerGREMEDY, GLsizei, len, const void *, string); \
    HookWrapper0(void, glBlendBarrier); \
    HookAliasWrapper8(void, glPrimitiveBoundingBoxEXT, glPrimitiveBoundingBox, GLfloat, minX, GLfloat, minY, GLfloat, minZ, GLfloat, minW, GLfloat, maxX, GLfloat, maxY, GLfloat, maxZ, GLfloat, maxW); \
    HookAliasWrapper8(void, glPrimitiveBoundingBoxOES, glPrimitiveBoundingBox, GLfloat, minX, GLfloat, minY, GLfloat, minZ, GLfloat, minW, GLfloat, maxX, GLfloat, maxY, GLfloat, maxZ, GLfloat, maxW); \
    HookWrapper8(void, glPrimitiveBoundingBox, GLfloat, minX, GLfloat, minY, GLfloat, minZ, GLfloat, minW, GLfloat, maxX, GLfloat, maxY, GLfloat, maxZ, GLfloat, maxW); \
    HookAliasWrapper3(void, glDepthRangeArrayfvNV, glDepthRangeArrayfvOES, GLuint, first, GLsizei, count, const GLfloat *, v); \
    HookWrapper3(void, glDepthRangeArrayfvOES, GLuint, first, GLsizei, count, const GLfloat *, v); \
    HookAliasWrapper3(void, glDepthRangeIndexedfNV, glDepthRangeIndexedfOES, GLuint, index, GLfloat, n, GLfloat, f); \
    HookWrapper3(void, glDepthRangeIndexedfOES, GLuint, index, GLfloat, n, GLfloat, f); \
    HookWrapper3(void, glDiscardFramebufferEXT, GLenum, target, GLsizei, numAttachments, const GLenum *, attachments); \
    HookWrapper6(void, glFramebufferTexture2DMultisampleEXT, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level, GLsizei, samples); \
    HookWrapper7(void, glFramebufferTextureMultisampleMultiviewOVR, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level, GLsizei, samples, GLint, baseViewIndex, GLsizei, numViews); \
    HookWrapper2(BOOL, wglDXSetResourceShareHandleNV, void *, dxObject, HANDLE, shareHandle); \
    HookWrapper1(HANDLE, wglDXOpenDeviceNV, void *, dxDevice); \
    HookWrapper1(BOOL, wglDXCloseDeviceNV, HANDLE, hDevice); \
    HookWrapper5(HANDLE, wglDXRegisterObjectNV, HANDLE, hDevice, void *, dxObject, GLuint, name, GLenum, type, GLenum, access); \
    HookWrapper2(BOOL, wglDXUnregisterObjectNV, HANDLE, hDevice, HANDLE, hObject); \
    HookWrapper2(BOOL, wglDXObjectAccessNV, HANDLE, hObject, GLenum, access); \
    HookWrapper3(BOOL, wglDXLockObjectsNV, HANDLE, hDevice, GLint, count, HANDLE *, hObjects); \
    HookWrapper3(BOOL, wglDXUnlockObjectsNV, HANDLE, hDevice, GLint, count, HANDLE *, hObjects); \



// unsupported entry points - used for dummy functions
#define DefineUnsupportedDummies() \
    HookWrapper5(void, glSpecializeShader, GLuint, shader, const GLchar *, pEntryPoint, GLuint, numSpecializationConstants, const GLuint *, pConstantIndex, const GLuint *, pConstantValue); \
    HookWrapper5(void, glMultiDrawArraysIndirectCount, GLenum, mode, const void *, indirect, GLintptr, drawcount, GLsizei, maxdrawcount, GLsizei, stride); \
    HookWrapper6(void, glMultiDrawElementsIndirectCount, GLenum, mode, GLenum, type, const void *, indirect, GLintptr, drawcount, GLsizei, maxdrawcount, GLsizei, stride); \
    HookWrapper3(void, glPolygonOffsetClamp, GLfloat, factor, GLfloat, units, GLfloat, clamp); \
    HookWrapper8(void, glPrimitiveBoundingBoxARB, GLfloat, minX, GLfloat, minY, GLfloat, minZ, GLfloat, minW, GLfloat, maxX, GLfloat, maxY, GLfloat, maxZ, GLfloat, maxW); \
    HookWrapper1(GLuint64, glGetTextureHandleARB, GLuint, texture); \
    HookWrapper2(GLuint64, glGetTextureSamplerHandleARB, GLuint, texture, GLuint, sampler); \
    HookWrapper1(void, glMakeTextureHandleResidentARB, GLuint64, handle); \
    HookWrapper1(void, glMakeTextureHandleNonResidentARB, GLuint64, handle); \
    HookWrapper5(GLuint64, glGetImageHandleARB, GLuint, texture, GLint, level, GLboolean, layered, GLint, layer, GLenum, format); \
    HookWrapper2(void, glMakeImageHandleResidentARB, GLuint64, handle, GLenum, access); \
    HookWrapper1(void, glMakeImageHandleNonResidentARB, GLuint64, handle); \
    HookWrapper2(void, glUniformHandleui64ARB, GLint, location, GLuint64, value); \
    HookWrapper3(void, glUniformHandleui64vARB, GLint, location, GLsizei, count, const GLuint64 *, value); \
    HookWrapper3(void, glProgramUniformHandleui64ARB, GLuint, program, GLint, location, GLuint64, value); \
    HookWrapper4(void, glProgramUniformHandleui64vARB, GLuint, program, GLint, location, GLsizei, count, const GLuint64 *, values); \
    HookWrapper1(GLboolean, glIsTextureHandleResidentARB, GLuint64, handle); \
    HookWrapper1(GLboolean, glIsImageHandleResidentARB, GLuint64, handle); \
    HookWrapper2(void, glVertexAttribL1ui64ARB, GLuint, index, GLuint64EXT, x); \
    HookWrapper2(void, glVertexAttribL1ui64vARB, GLuint, index, const GLuint64EXT *, v); \
    HookWrapper3(void, glGetVertexAttribLui64vARB, GLuint, index, GLenum, pname, GLuint64EXT *, params); \
    HookWrapper3(GLsync, glCreateSyncFromCLeventARB, struct _cl_context *, context, struct _cl_event *, event, GLbitfield, flags); \
    HookWrapper5(void, glFramebufferTextureFaceARB, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level, GLenum, face); \
    HookWrapper5(void, glSpecializeShaderARB, GLuint, shader, const GLchar *, pEntryPoint, GLuint, numSpecializationConstants, const GLuint *, pConstantIndex, const GLuint *, pConstantValue); \
    HookWrapper2(void, glUniform1i64ARB, GLint, location, GLint64, x); \
    HookWrapper3(void, glUniform2i64ARB, GLint, location, GLint64, x, GLint64, y); \
    HookWrapper4(void, glUniform3i64ARB, GLint, location, GLint64, x, GLint64, y, GLint64, z); \
    HookWrapper5(void, glUniform4i64ARB, GLint, location, GLint64, x, GLint64, y, GLint64, z, GLint64, w); \
    HookWrapper3(void, glUniform1i64vARB, GLint, location, GLsizei, count, const GLint64 *, value); \
    HookWrapper3(void, glUniform2i64vARB, GLint, location, GLsizei, count, const GLint64 *, value); \
    HookWrapper3(void, glUniform3i64vARB, GLint, location, GLsizei, count, const GLint64 *, value); \
    HookWrapper3(void, glUniform4i64vARB, GLint, location, GLsizei, count, const GLint64 *, value); \
    HookWrapper2(void, glUniform1ui64ARB, GLint, location, GLuint64, x); \
    HookWrapper3(void, glUniform2ui64ARB, GLint, location, GLuint64, x, GLuint64, y); \
    HookWrapper4(void, glUniform3ui64ARB, GLint, location, GLuint64, x, GLuint64, y, GLuint64, z); \
    HookWrapper5(void, glUniform4ui64ARB, GLint, location, GLuint64, x, GLuint64, y, GLuint64, z, GLuint64, w); \
    HookWrapper3(void, glUniform1ui64vARB, GLint, location, GLsizei, count, const GLuint64 *, value); \
    HookWrapper3(void, glUniform2ui64vARB, GLint, location, GLsizei, count, const GLuint64 *, value); \
    HookWrapper3(void, glUniform3ui64vARB, GLint, location, GLsizei, count, const GLuint64 *, value); \
    HookWrapper3(void, glUniform4ui64vARB, GLint, location, GLsizei, count, const GLuint64 *, value); \
    HookWrapper3(void, glGetUniformi64vARB, GLuint, program, GLint, location, GLint64 *, params); \
    HookWrapper3(void, glGetUniformui64vARB, GLuint, program, GLint, location, GLuint64 *, params); \
    HookWrapper4(void, glGetnUniformi64vARB, GLuint, program, GLint, location, GLsizei, bufSize, GLint64 *, params); \
    HookWrapper4(void, glGetnUniformui64vARB, GLuint, program, GLint, location, GLsizei, bufSize, GLuint64 *, params); \
    HookWrapper3(void, glProgramUniform1i64ARB, GLuint, program, GLint, location, GLint64, x); \
    HookWrapper4(void, glProgramUniform2i64ARB, GLuint, program, GLint, location, GLint64, x, GLint64, y); \
    HookWrapper5(void, glProgramUniform3i64ARB, GLuint, program, GLint, location, GLint64, x, GLint64, y, GLint64, z); \
    HookWrapper6(void, glProgramUniform4i64ARB, GLuint, program, GLint, location, GLint64, x, GLint64, y, GLint64, z, GLint64, w); \
    HookWrapper4(void, glProgramUniform1i64vARB, GLuint, program, GLint, location, GLsizei, count, const GLint64 *, value); \
    HookWrapper4(void, glProgramUniform2i64vARB, GLuint, program, GLint, location, GLsizei, count, const GLint64 *, value); \
    HookWrapper4(void, glProgramUniform3i64vARB, GLuint, program, GLint, location, GLsizei, count, const GLint64 *, value); \
    HookWrapper4(void, glProgramUniform4i64vARB, GLuint, program, GLint, location, GLsizei, count, const GLint64 *, value); \
    HookWrapper3(void, glProgramUniform1ui64ARB, GLuint, program, GLint, location, GLuint64, x); \
    HookWrapper4(void, glProgramUniform2ui64ARB, GLuint, program, GLint, location, GLuint64, x, GLuint64, y); \
    HookWrapper5(void, glProgramUniform3ui64ARB, GLuint, program, GLint, location, GLuint64, x, GLuint64, y, GLuint64, z); \
    HookWrapper6(void, glProgramUniform4ui64ARB, GLuint, program, GLint, location, GLuint64, x, GLuint64, y, GLuint64, z, GLuint64, w); \
    HookWrapper4(void, glProgramUniform1ui64vARB, GLuint, program, GLint, location, GLsizei, count, const GLuint64 *, value); \
    HookWrapper4(void, glProgramUniform2ui64vARB, GLuint, program, GLint, location, GLsizei, count, const GLuint64 *, value); \
    HookWrapper4(void, glProgramUniform3ui64vARB, GLuint, program, GLint, location, GLsizei, count, const GLuint64 *, value); \
    HookWrapper4(void, glProgramUniform4ui64vARB, GLuint, program, GLint, location, GLsizei, count, const GLuint64 *, value); \
    HookWrapper1(void, glMaxShaderCompilerThreadsARB, GLuint, count); \
    HookWrapper4(void, glFramebufferSampleLocationsfvARB, GLenum, target, GLuint, start, GLsizei, count, const GLfloat *, v); \
    HookWrapper4(void, glNamedFramebufferSampleLocationsfvARB, GLuint, framebuffer, GLuint, start, GLsizei, count, const GLfloat *, v); \
    HookWrapper0(void, glEvaluateDepthValuesARB); \
    HookWrapper4(void, glBufferPageCommitmentARB, GLenum, target, GLintptr, offset, GLsizeiptr, size, GLboolean, commit); \
    HookWrapper4(void, glNamedBufferPageCommitmentEXT, GLuint, buffer, GLintptr, offset, GLsizeiptr, size, GLboolean, commit); \
    HookWrapper4(void, glNamedBufferPageCommitmentARB, GLuint, buffer, GLintptr, offset, GLsizeiptr, size, GLboolean, commit); \
    HookWrapper9(void, glTexPageCommitmentARB, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, commit); \
    HookWrapper1(void, glMaxShaderCompilerThreadsKHR, GLuint, count); \
    HookWrapper3(void, glGetPerfMonitorGroupsAMD, GLint *, numGroups, GLsizei, groupsSize, GLuint *, groups); \
    HookWrapper5(void, glGetPerfMonitorCountersAMD, GLuint, group, GLint *, numCounters, GLint *, maxActiveCounters, GLsizei, counterSize, GLuint *, counters); \
    HookWrapper4(void, glGetPerfMonitorGroupStringAMD, GLuint, group, GLsizei, bufSize, GLsizei *, length, GLchar *, groupString); \
    HookWrapper5(void, glGetPerfMonitorCounterStringAMD, GLuint, group, GLuint, counter, GLsizei, bufSize, GLsizei *, length, GLchar *, counterString); \
    HookWrapper4(void, glGetPerfMonitorCounterInfoAMD, GLuint, group, GLuint, counter, GLenum, pname, void *, data); \
    HookWrapper2(void, glGenPerfMonitorsAMD, GLsizei, n, GLuint *, monitors); \
    HookWrapper2(void, glDeletePerfMonitorsAMD, GLsizei, n, GLuint *, monitors); \
    HookWrapper5(void, glSelectPerfMonitorCountersAMD, GLuint, monitor, GLboolean, enable, GLuint, group, GLint, numCounters, GLuint *, counterList); \
    HookWrapper1(void, glBeginPerfMonitorAMD, GLuint, monitor); \
    HookWrapper1(void, glEndPerfMonitorAMD, GLuint, monitor); \
    HookWrapper5(void, glGetPerfMonitorCounterDataAMD, GLuint, monitor, GLenum, pname, GLsizei, dataSize, GLuint *, data, GLint *, bytesWritten); \
    HookWrapper2(void, glMatrixLoadfEXT, GLenum, mode, const GLfloat *, m); \
    HookWrapper2(void, glMatrixLoaddEXT, GLenum, mode, const GLdouble *, m); \
    HookWrapper2(void, glMatrixMultfEXT, GLenum, mode, const GLfloat *, m); \
    HookWrapper2(void, glMatrixMultdEXT, GLenum, mode, const GLdouble *, m); \
    HookWrapper1(void, glMatrixLoadIdentityEXT, GLenum, mode); \
    HookWrapper5(void, glMatrixRotatefEXT, GLenum, mode, GLfloat, angle, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper5(void, glMatrixRotatedEXT, GLenum, mode, GLdouble, angle, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper4(void, glMatrixScalefEXT, GLenum, mode, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper4(void, glMatrixScaledEXT, GLenum, mode, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper4(void, glMatrixTranslatefEXT, GLenum, mode, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper4(void, glMatrixTranslatedEXT, GLenum, mode, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper7(void, glMatrixFrustumEXT, GLenum, mode, GLdouble, left, GLdouble, right, GLdouble, bottom, GLdouble, top, GLdouble, zNear, GLdouble, zFar); \
    HookWrapper7(void, glMatrixOrthoEXT, GLenum, mode, GLdouble, left, GLdouble, right, GLdouble, bottom, GLdouble, top, GLdouble, zNear, GLdouble, zFar); \
    HookWrapper1(void, glMatrixPopEXT, GLenum, mode); \
    HookWrapper1(void, glMatrixPushEXT, GLenum, mode); \
    HookWrapper1(void, glClientAttribDefaultEXT, GLbitfield, mask); \
    HookWrapper1(void, glPushClientAttribDefaultEXT, GLbitfield, mask); \
    HookWrapper5(void, glMultiTexCoordPointerEXT, GLenum, texunit, GLint, size, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper4(void, glMultiTexEnvfEXT, GLenum, texunit, GLenum, target, GLenum, pname, GLfloat, param); \
    HookWrapper4(void, glMultiTexEnvfvEXT, GLenum, texunit, GLenum, target, GLenum, pname, const GLfloat *, params); \
    HookWrapper4(void, glMultiTexEnviEXT, GLenum, texunit, GLenum, target, GLenum, pname, GLint, param); \
    HookWrapper4(void, glMultiTexEnvivEXT, GLenum, texunit, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper4(void, glMultiTexGendEXT, GLenum, texunit, GLenum, coord, GLenum, pname, GLdouble, param); \
    HookWrapper4(void, glMultiTexGendvEXT, GLenum, texunit, GLenum, coord, GLenum, pname, const GLdouble *, params); \
    HookWrapper4(void, glMultiTexGenfEXT, GLenum, texunit, GLenum, coord, GLenum, pname, GLfloat, param); \
    HookWrapper4(void, glMultiTexGenfvEXT, GLenum, texunit, GLenum, coord, GLenum, pname, const GLfloat *, params); \
    HookWrapper4(void, glMultiTexGeniEXT, GLenum, texunit, GLenum, coord, GLenum, pname, GLint, param); \
    HookWrapper4(void, glMultiTexGenivEXT, GLenum, texunit, GLenum, coord, GLenum, pname, const GLint *, params); \
    HookWrapper4(void, glGetMultiTexEnvfvEXT, GLenum, texunit, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper4(void, glGetMultiTexEnvivEXT, GLenum, texunit, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetMultiTexGendvEXT, GLenum, texunit, GLenum, coord, GLenum, pname, GLdouble *, params); \
    HookWrapper4(void, glGetMultiTexGenfvEXT, GLenum, texunit, GLenum, coord, GLenum, pname, GLfloat *, params); \
    HookWrapper4(void, glGetMultiTexGenivEXT, GLenum, texunit, GLenum, coord, GLenum, pname, GLint *, params); \
    HookWrapper2(void, glEnableClientStateIndexedEXT, GLenum, array, GLuint, index); \
    HookWrapper2(void, glDisableClientStateIndexedEXT, GLenum, array, GLuint, index); \
    HookWrapper2(void, glMatrixLoadTransposefEXT, GLenum, mode, const GLfloat *, m); \
    HookWrapper2(void, glMatrixLoadTransposedEXT, GLenum, mode, const GLdouble *, m); \
    HookWrapper2(void, glMatrixMultTransposefEXT, GLenum, mode, const GLfloat *, m); \
    HookWrapper2(void, glMatrixMultTransposedEXT, GLenum, mode, const GLdouble *, m); \
    HookWrapper5(void, glNamedProgramLocalParameters4fvEXT, GLuint, program, GLenum, target, GLuint, index, GLsizei, count, const GLfloat *, params); \
    HookWrapper7(void, glNamedProgramLocalParameterI4iEXT, GLuint, program, GLenum, target, GLuint, index, GLint, x, GLint, y, GLint, z, GLint, w); \
    HookWrapper4(void, glNamedProgramLocalParameterI4ivEXT, GLuint, program, GLenum, target, GLuint, index, const GLint *, params); \
    HookWrapper5(void, glNamedProgramLocalParametersI4ivEXT, GLuint, program, GLenum, target, GLuint, index, GLsizei, count, const GLint *, params); \
    HookWrapper7(void, glNamedProgramLocalParameterI4uiEXT, GLuint, program, GLenum, target, GLuint, index, GLuint, x, GLuint, y, GLuint, z, GLuint, w); \
    HookWrapper4(void, glNamedProgramLocalParameterI4uivEXT, GLuint, program, GLenum, target, GLuint, index, const GLuint *, params); \
    HookWrapper5(void, glNamedProgramLocalParametersI4uivEXT, GLuint, program, GLenum, target, GLuint, index, GLsizei, count, const GLuint *, params); \
    HookWrapper4(void, glGetNamedProgramLocalParameterIivEXT, GLuint, program, GLenum, target, GLuint, index, GLint *, params); \
    HookWrapper4(void, glGetNamedProgramLocalParameterIuivEXT, GLuint, program, GLenum, target, GLuint, index, GLuint *, params); \
    HookWrapper2(void, glEnableClientStateiEXT, GLenum, array, GLuint, index); \
    HookWrapper2(void, glDisableClientStateiEXT, GLenum, array, GLuint, index); \
    HookWrapper5(void, glNamedProgramStringEXT, GLuint, program, GLenum, target, GLenum, format, GLsizei, len, const void *, string); \
    HookWrapper7(void, glNamedProgramLocalParameter4dEXT, GLuint, program, GLenum, target, GLuint, index, GLdouble, x, GLdouble, y, GLdouble, z, GLdouble, w); \
    HookWrapper4(void, glNamedProgramLocalParameter4dvEXT, GLuint, program, GLenum, target, GLuint, index, const GLdouble *, params); \
    HookWrapper7(void, glNamedProgramLocalParameter4fEXT, GLuint, program, GLenum, target, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookWrapper4(void, glNamedProgramLocalParameter4fvEXT, GLuint, program, GLenum, target, GLuint, index, const GLfloat *, params); \
    HookWrapper4(void, glGetNamedProgramLocalParameterdvEXT, GLuint, program, GLenum, target, GLuint, index, GLdouble *, params); \
    HookWrapper4(void, glGetNamedProgramLocalParameterfvEXT, GLuint, program, GLenum, target, GLuint, index, GLfloat *, params); \
    HookWrapper4(void, glGetNamedProgramStringEXT, GLuint, program, GLenum, target, GLenum, pname, void *, string); \
    HookWrapper6(void, glNamedRenderbufferStorageMultisampleCoverageEXT, GLuint, renderbuffer, GLsizei, coverageSamples, GLsizei, colorSamples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper5(void, glNamedFramebufferTextureFaceEXT, GLuint, framebuffer, GLenum, attachment, GLuint, texture, GLint, level, GLenum, face); \
    HookWrapper3(void, glTextureRenderbufferEXT, GLuint, texture, GLenum, target, GLuint, renderbuffer); \
    HookWrapper3(void, glMultiTexRenderbufferEXT, GLenum, texunit, GLenum, target, GLuint, renderbuffer); \
    HookWrapper6(void, glVertexArrayVertexOffsetEXT, GLuint, vaobj, GLuint, buffer, GLint, size, GLenum, type, GLsizei, stride, GLintptr, offset); \
    HookWrapper6(void, glVertexArrayColorOffsetEXT, GLuint, vaobj, GLuint, buffer, GLint, size, GLenum, type, GLsizei, stride, GLintptr, offset); \
    HookWrapper4(void, glVertexArrayEdgeFlagOffsetEXT, GLuint, vaobj, GLuint, buffer, GLsizei, stride, GLintptr, offset); \
    HookWrapper5(void, glVertexArrayIndexOffsetEXT, GLuint, vaobj, GLuint, buffer, GLenum, type, GLsizei, stride, GLintptr, offset); \
    HookWrapper5(void, glVertexArrayNormalOffsetEXT, GLuint, vaobj, GLuint, buffer, GLenum, type, GLsizei, stride, GLintptr, offset); \
    HookWrapper6(void, glVertexArrayTexCoordOffsetEXT, GLuint, vaobj, GLuint, buffer, GLint, size, GLenum, type, GLsizei, stride, GLintptr, offset); \
    HookWrapper7(void, glVertexArrayMultiTexCoordOffsetEXT, GLuint, vaobj, GLuint, buffer, GLenum, texunit, GLint, size, GLenum, type, GLsizei, stride, GLintptr, offset); \
    HookWrapper5(void, glVertexArrayFogCoordOffsetEXT, GLuint, vaobj, GLuint, buffer, GLenum, type, GLsizei, stride, GLintptr, offset); \
    HookWrapper6(void, glVertexArraySecondaryColorOffsetEXT, GLuint, vaobj, GLuint, buffer, GLint, size, GLenum, type, GLsizei, stride, GLintptr, offset); \
    HookWrapper2(void, glEnableVertexArrayEXT, GLuint, vaobj, GLenum, array); \
    HookWrapper2(void, glDisableVertexArrayEXT, GLuint, vaobj, GLenum, array); \
    HookWrapper9(void, glTexturePageCommitmentEXT, GLuint, texture, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, commit); \
    HookWrapper2(void, glUseShaderProgramEXT, GLenum, type, GLuint, program); \
    HookWrapper1(void, glActiveProgramEXT, GLuint, program); \
    HookWrapper2(GLuint, glCreateShaderProgramEXT, GLenum, type, const GLchar *, string); \
    HookWrapper3(void, glWindowRectanglesEXT, GLenum, mode, GLsizei, count, const GLint *, box); \
    HookWrapper0(void, glApplyFramebufferAttachmentCMAAINTEL); \
    HookWrapper1(void, glBeginPerfQueryINTEL, GLuint, queryHandle); \
    HookWrapper2(void, glCreatePerfQueryINTEL, GLuint, queryId, GLuint *, queryHandle); \
    HookWrapper1(void, glDeletePerfQueryINTEL, GLuint, queryHandle); \
    HookWrapper1(void, glEndPerfQueryINTEL, GLuint, queryHandle); \
    HookWrapper1(void, glGetFirstPerfQueryIdINTEL, GLuint *, queryId); \
    HookWrapper2(void, glGetNextPerfQueryIdINTEL, GLuint, queryId, GLuint *, nextQueryId); \
    HookWrapper11(void, glGetPerfCounterInfoINTEL, GLuint, queryId, GLuint, counterId, GLuint, counterNameLength, GLchar *, counterName, GLuint, counterDescLength, GLchar *, counterDesc, GLuint *, counterOffset, GLuint *, counterDataSize, GLuint *, counterTypeEnum, GLuint *, counterDataTypeEnum, GLuint64 *, rawCounterMaxValue); \
    HookWrapper5(void, glGetPerfQueryDataINTEL, GLuint, queryHandle, GLuint, flags, GLsizei, dataSize, void *, data, GLuint *, bytesWritten); \
    HookWrapper2(void, glGetPerfQueryIdByNameINTEL, GLchar *, queryName, GLuint *, queryId); \
    HookWrapper7(void, glGetPerfQueryInfoINTEL, GLuint, queryId, GLuint, queryNameLength, GLchar *, queryName, GLuint *, dataSize, GLuint *, noCounters, GLuint *, noInstances, GLuint *, capsMask); \
    HookWrapper5(void, glMultiDrawArraysIndirectBindlessNV, GLenum, mode, const void *, indirect, GLsizei, drawCount, GLsizei, stride, GLint, vertexBufferCount); \
    HookWrapper6(void, glMultiDrawElementsIndirectBindlessNV, GLenum, mode, GLenum, type, const void *, indirect, GLsizei, drawCount, GLsizei, stride, GLint, vertexBufferCount); \
    HookWrapper6(void, glMultiDrawArraysIndirectBindlessCountNV, GLenum, mode, const void *, indirect, GLsizei, drawCount, GLsizei, maxDrawCount, GLsizei, stride, GLint, vertexBufferCount); \
    HookWrapper7(void, glMultiDrawElementsIndirectBindlessCountNV, GLenum, mode, GLenum, type, const void *, indirect, GLsizei, drawCount, GLsizei, maxDrawCount, GLsizei, stride, GLint, vertexBufferCount); \
    HookWrapper1(GLuint64, glGetTextureHandleNV, GLuint, texture); \
    HookWrapper2(GLuint64, glGetTextureSamplerHandleNV, GLuint, texture, GLuint, sampler); \
    HookWrapper1(void, glMakeTextureHandleResidentNV, GLuint64, handle); \
    HookWrapper1(void, glMakeTextureHandleNonResidentNV, GLuint64, handle); \
    HookWrapper5(GLuint64, glGetImageHandleNV, GLuint, texture, GLint, level, GLboolean, layered, GLint, layer, GLenum, format); \
    HookWrapper2(void, glMakeImageHandleResidentNV, GLuint64, handle, GLenum, access); \
    HookWrapper1(void, glMakeImageHandleNonResidentNV, GLuint64, handle); \
    HookWrapper2(void, glUniformHandleui64NV, GLint, location, GLuint64, value); \
    HookWrapper3(void, glUniformHandleui64vNV, GLint, location, GLsizei, count, const GLuint64 *, value); \
    HookWrapper3(void, glProgramUniformHandleui64NV, GLuint, program, GLint, location, GLuint64, value); \
    HookWrapper4(void, glProgramUniformHandleui64vNV, GLuint, program, GLint, location, GLsizei, count, const GLuint64 *, values); \
    HookWrapper1(GLboolean, glIsTextureHandleResidentNV, GLuint64, handle); \
    HookWrapper1(GLboolean, glIsImageHandleResidentNV, GLuint64, handle); \
    HookWrapper2(void, glBlendParameteriNV, GLenum, pname, GLint, value); \
    HookWrapper0(void, glBlendBarrierNV); \
    HookWrapper3(void, glViewportPositionWScaleNV, GLuint, index, GLfloat, xcoeff, GLfloat, ycoeff); \
    HookWrapper2(void, glCreateStatesNV, GLsizei, n, GLuint *, states); \
    HookWrapper2(void, glDeleteStatesNV, GLsizei, n, const GLuint *, states); \
    HookWrapper1(GLboolean, glIsStateNV, GLuint, state); \
    HookWrapper2(void, glStateCaptureNV, GLuint, state, GLenum, mode); \
    HookWrapper2(GLuint, glGetCommandHeaderNV, GLenum, tokenID, GLuint, size); \
    HookWrapper1(GLushort, glGetStageIndexNV, GLenum, shadertype); \
    HookWrapper5(void, glDrawCommandsNV, GLenum, primitiveMode, GLuint, buffer, const GLintptr *, indirects, const GLsizei *, sizes, GLuint, count); \
    HookWrapper4(void, glDrawCommandsAddressNV, GLenum, primitiveMode, const GLuint64 *, indirects, const GLsizei *, sizes, GLuint, count); \
    HookWrapper6(void, glDrawCommandsStatesNV, GLuint, buffer, const GLintptr *, indirects, const GLsizei *, sizes, const GLuint *, states, const GLuint *, fbos, GLuint, count); \
    HookWrapper5(void, glDrawCommandsStatesAddressNV, const GLuint64 *, indirects, const GLsizei *, sizes, const GLuint *, states, const GLuint *, fbos, GLuint, count); \
    HookWrapper2(void, glCreateCommandListsNV, GLsizei, n, GLuint *, lists); \
    HookWrapper2(void, glDeleteCommandListsNV, GLsizei, n, const GLuint *, lists); \
    HookWrapper1(GLboolean, glIsCommandListNV, GLuint, list); \
    HookWrapper7(void, glListDrawCommandsStatesClientNV, GLuint, list, GLuint, segment, const void **, indirects, const GLsizei *, sizes, const GLuint *, states, const GLuint *, fbos, GLuint, count); \
    HookWrapper2(void, glCommandListSegmentsNV, GLuint, list, GLuint, segments); \
    HookWrapper1(void, glCompileCommandListNV, GLuint, list); \
    HookWrapper1(void, glCallCommandListNV, GLuint, list); \
    HookWrapper2(void, glBeginConditionalRenderNV, GLuint, id, GLenum, mode); \
    HookWrapper0(void, glEndConditionalRenderNV); \
    HookWrapper2(void, glSubpixelPrecisionBiasNV, GLuint, xbits, GLuint, ybits); \
    HookWrapper2(void, glConservativeRasterParameterfNV, GLenum, pname, GLfloat, value); \
    HookWrapper2(void, glConservativeRasterParameteriNV, GLenum, pname, GLint, param); \
    HookWrapper11(void, glDrawVkImageNV, GLuint64, vkImage, GLuint, sampler, GLfloat, x0, GLfloat, y0, GLfloat, x1, GLfloat, y1, GLfloat, z, GLfloat, s0, GLfloat, t0, GLfloat, s1, GLfloat, t1); \
    HookWrapper1(GLVULKANPROCNV, glGetVkProcAddrNV, const GLchar *, name); \
    HookWrapper1(void, glWaitVkSemaphoreNV, GLuint64, vkSemaphore); \
    HookWrapper1(void, glSignalVkSemaphoreNV, GLuint64, vkSemaphore); \
    HookWrapper1(void, glSignalVkFenceNV, GLuint64, vkFence); \
    HookWrapper1(void, glFragmentCoverageColorNV, GLuint, color); \
    HookWrapper2(void, glCoverageModulationTableNV, GLsizei, n, const GLfloat *, v); \
    HookWrapper2(void, glGetCoverageModulationTableNV, GLsizei, bufsize, GLfloat *, v); \
    HookWrapper1(void, glCoverageModulationNV, GLenum, components); \
    HookWrapper6(void, glRenderbufferStorageMultisampleCoverageNV, GLenum, target, GLsizei, coverageSamples, GLsizei, colorSamples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper2(void, glUniform1i64NV, GLint, location, GLint64EXT, x); \
    HookWrapper3(void, glUniform2i64NV, GLint, location, GLint64EXT, x, GLint64EXT, y); \
    HookWrapper4(void, glUniform3i64NV, GLint, location, GLint64EXT, x, GLint64EXT, y, GLint64EXT, z); \
    HookWrapper5(void, glUniform4i64NV, GLint, location, GLint64EXT, x, GLint64EXT, y, GLint64EXT, z, GLint64EXT, w); \
    HookWrapper3(void, glUniform1i64vNV, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper3(void, glUniform2i64vNV, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper3(void, glUniform3i64vNV, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper3(void, glUniform4i64vNV, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper2(void, glUniform1ui64NV, GLint, location, GLuint64EXT, x); \
    HookWrapper3(void, glUniform2ui64NV, GLint, location, GLuint64EXT, x, GLuint64EXT, y); \
    HookWrapper4(void, glUniform3ui64NV, GLint, location, GLuint64EXT, x, GLuint64EXT, y, GLuint64EXT, z); \
    HookWrapper5(void, glUniform4ui64NV, GLint, location, GLuint64EXT, x, GLuint64EXT, y, GLuint64EXT, z, GLuint64EXT, w); \
    HookWrapper3(void, glUniform1ui64vNV, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper3(void, glUniform2ui64vNV, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper3(void, glUniform3ui64vNV, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper3(void, glUniform4ui64vNV, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper3(void, glGetUniformi64vNV, GLuint, program, GLint, location, GLint64EXT *, params); \
    HookWrapper3(void, glProgramUniform1i64NV, GLuint, program, GLint, location, GLint64EXT, x); \
    HookWrapper4(void, glProgramUniform2i64NV, GLuint, program, GLint, location, GLint64EXT, x, GLint64EXT, y); \
    HookWrapper5(void, glProgramUniform3i64NV, GLuint, program, GLint, location, GLint64EXT, x, GLint64EXT, y, GLint64EXT, z); \
    HookWrapper6(void, glProgramUniform4i64NV, GLuint, program, GLint, location, GLint64EXT, x, GLint64EXT, y, GLint64EXT, z, GLint64EXT, w); \
    HookWrapper4(void, glProgramUniform1i64vNV, GLuint, program, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper4(void, glProgramUniform2i64vNV, GLuint, program, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper4(void, glProgramUniform3i64vNV, GLuint, program, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper4(void, glProgramUniform4i64vNV, GLuint, program, GLint, location, GLsizei, count, const GLint64EXT *, value); \
    HookWrapper3(void, glProgramUniform1ui64NV, GLuint, program, GLint, location, GLuint64EXT, x); \
    HookWrapper4(void, glProgramUniform2ui64NV, GLuint, program, GLint, location, GLuint64EXT, x, GLuint64EXT, y); \
    HookWrapper5(void, glProgramUniform3ui64NV, GLuint, program, GLint, location, GLuint64EXT, x, GLuint64EXT, y, GLuint64EXT, z); \
    HookWrapper6(void, glProgramUniform4ui64NV, GLuint, program, GLint, location, GLuint64EXT, x, GLuint64EXT, y, GLuint64EXT, z, GLuint64EXT, w); \
    HookWrapper4(void, glProgramUniform1ui64vNV, GLuint, program, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper4(void, glProgramUniform2ui64vNV, GLuint, program, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper4(void, glProgramUniform3ui64vNV, GLuint, program, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper4(void, glProgramUniform4ui64vNV, GLuint, program, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper6(void, glGetInternalformatSampleivNV, GLenum, target, GLenum, internalformat, GLsizei, samples, GLenum, pname, GLsizei, bufSize, GLint *, params); \
    HookWrapper1(GLuint, glGenPathsNV, GLsizei, range); \
    HookWrapper2(void, glDeletePathsNV, GLuint, path, GLsizei, range); \
    HookWrapper1(GLboolean, glIsPathNV, GLuint, path); \
    HookWrapper6(void, glPathCommandsNV, GLuint, path, GLsizei, numCommands, const GLubyte *, commands, GLsizei, numCoords, GLenum, coordType, const void *, coords); \
    HookWrapper4(void, glPathCoordsNV, GLuint, path, GLsizei, numCoords, GLenum, coordType, const void *, coords); \
    HookWrapper8(void, glPathSubCommandsNV, GLuint, path, GLsizei, commandStart, GLsizei, commandsToDelete, GLsizei, numCommands, const GLubyte *, commands, GLsizei, numCoords, GLenum, coordType, const void *, coords); \
    HookWrapper5(void, glPathSubCoordsNV, GLuint, path, GLsizei, coordStart, GLsizei, numCoords, GLenum, coordType, const void *, coords); \
    HookWrapper4(void, glPathStringNV, GLuint, path, GLenum, format, GLsizei, length, const void *, pathString); \
    HookWrapper10(void, glPathGlyphsNV, GLuint, firstPathName, GLenum, fontTarget, const void *, fontName, GLbitfield, fontStyle, GLsizei, numGlyphs, GLenum, type, const void *, charcodes, GLenum, handleMissingGlyphs, GLuint, pathParameterTemplate, GLfloat, emScale); \
    HookWrapper9(void, glPathGlyphRangeNV, GLuint, firstPathName, GLenum, fontTarget, const void *, fontName, GLbitfield, fontStyle, GLuint, firstGlyph, GLsizei, numGlyphs, GLenum, handleMissingGlyphs, GLuint, pathParameterTemplate, GLfloat, emScale); \
    HookWrapper4(void, glWeightPathsNV, GLuint, resultPath, GLsizei, numPaths, const GLuint *, paths, const GLfloat *, weights); \
    HookWrapper2(void, glCopyPathNV, GLuint, resultPath, GLuint, srcPath); \
    HookWrapper4(void, glInterpolatePathsNV, GLuint, resultPath, GLuint, pathA, GLuint, pathB, GLfloat, weight); \
    HookWrapper4(void, glTransformPathNV, GLuint, resultPath, GLuint, srcPath, GLenum, transformType, const GLfloat *, transformValues); \
    HookWrapper3(void, glPathParameterivNV, GLuint, path, GLenum, pname, const GLint *, value); \
    HookWrapper3(void, glPathParameteriNV, GLuint, path, GLenum, pname, GLint, value); \
    HookWrapper3(void, glPathParameterfvNV, GLuint, path, GLenum, pname, const GLfloat *, value); \
    HookWrapper3(void, glPathParameterfNV, GLuint, path, GLenum, pname, GLfloat, value); \
    HookWrapper3(void, glPathDashArrayNV, GLuint, path, GLsizei, dashCount, const GLfloat *, dashArray); \
    HookWrapper3(void, glPathStencilFuncNV, GLenum, func, GLint, ref, GLuint, mask); \
    HookWrapper2(void, glPathStencilDepthOffsetNV, GLfloat, factor, GLfloat, units); \
    HookWrapper3(void, glStencilFillPathNV, GLuint, path, GLenum, fillMode, GLuint, mask); \
    HookWrapper3(void, glStencilStrokePathNV, GLuint, path, GLint, reference, GLuint, mask); \
    HookWrapper8(void, glStencilFillPathInstancedNV, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLenum, fillMode, GLuint, mask, GLenum, transformType, const GLfloat *, transformValues); \
    HookWrapper8(void, glStencilStrokePathInstancedNV, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLint, reference, GLuint, mask, GLenum, transformType, const GLfloat *, transformValues); \
    HookWrapper1(void, glPathCoverDepthFuncNV, GLenum, func); \
    HookWrapper2(void, glCoverFillPathNV, GLuint, path, GLenum, coverMode); \
    HookWrapper2(void, glCoverStrokePathNV, GLuint, path, GLenum, coverMode); \
    HookWrapper7(void, glCoverFillPathInstancedNV, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLenum, coverMode, GLenum, transformType, const GLfloat *, transformValues); \
    HookWrapper7(void, glCoverStrokePathInstancedNV, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLenum, coverMode, GLenum, transformType, const GLfloat *, transformValues); \
    HookWrapper3(void, glGetPathParameterivNV, GLuint, path, GLenum, pname, GLint *, value); \
    HookWrapper3(void, glGetPathParameterfvNV, GLuint, path, GLenum, pname, GLfloat *, value); \
    HookWrapper2(void, glGetPathCommandsNV, GLuint, path, GLubyte *, commands); \
    HookWrapper2(void, glGetPathCoordsNV, GLuint, path, GLfloat *, coords); \
    HookWrapper2(void, glGetPathDashArrayNV, GLuint, path, GLfloat *, dashArray); \
    HookWrapper7(void, glGetPathMetricsNV, GLbitfield, metricQueryMask, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLsizei, stride, GLfloat *, metrics); \
    HookWrapper5(void, glGetPathMetricRangeNV, GLbitfield, metricQueryMask, GLuint, firstPathName, GLsizei, numPaths, GLsizei, stride, GLfloat *, metrics); \
    HookWrapper9(void, glGetPathSpacingNV, GLenum, pathListMode, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLfloat, advanceScale, GLfloat, kerningScale, GLenum, transformType, GLfloat *, returnedSpacing); \
    HookWrapper4(GLboolean, glIsPointInFillPathNV, GLuint, path, GLuint, mask, GLfloat, x, GLfloat, y); \
    HookWrapper3(GLboolean, glIsPointInStrokePathNV, GLuint, path, GLfloat, x, GLfloat, y); \
    HookWrapper3(GLfloat, glGetPathLengthNV, GLuint, path, GLsizei, startSegment, GLsizei, numSegments); \
    HookWrapper8(GLboolean, glPointAlongPathNV, GLuint, path, GLsizei, startSegment, GLsizei, numSegments, GLfloat, distance, GLfloat *, x, GLfloat *, y, GLfloat *, tangentX, GLfloat *, tangentY); \
    HookWrapper2(void, glMatrixLoad3x2fNV, GLenum, matrixMode, const GLfloat *, m); \
    HookWrapper2(void, glMatrixLoad3x3fNV, GLenum, matrixMode, const GLfloat *, m); \
    HookWrapper2(void, glMatrixLoadTranspose3x3fNV, GLenum, matrixMode, const GLfloat *, m); \
    HookWrapper2(void, glMatrixMult3x2fNV, GLenum, matrixMode, const GLfloat *, m); \
    HookWrapper2(void, glMatrixMult3x3fNV, GLenum, matrixMode, const GLfloat *, m); \
    HookWrapper2(void, glMatrixMultTranspose3x3fNV, GLenum, matrixMode, const GLfloat *, m); \
    HookWrapper4(void, glStencilThenCoverFillPathNV, GLuint, path, GLenum, fillMode, GLuint, mask, GLenum, coverMode); \
    HookWrapper4(void, glStencilThenCoverStrokePathNV, GLuint, path, GLint, reference, GLuint, mask, GLenum, coverMode); \
    HookWrapper9(void, glStencilThenCoverFillPathInstancedNV, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLenum, fillMode, GLuint, mask, GLenum, coverMode, GLenum, transformType, const GLfloat *, transformValues); \
    HookWrapper9(void, glStencilThenCoverStrokePathInstancedNV, GLsizei, numPaths, GLenum, pathNameType, const void *, paths, GLuint, pathBase, GLint, reference, GLuint, mask, GLenum, coverMode, GLenum, transformType, const GLfloat *, transformValues); \
    HookWrapper6(GLenum, glPathGlyphIndexRangeNV, GLenum, fontTarget, const void *, fontName, GLbitfield, fontStyle, GLuint, pathParameterTemplate, GLfloat, emScale, GLuint *, baseAndCount); \
    HookWrapper8(GLenum, glPathGlyphIndexArrayNV, GLuint, firstPathName, GLenum, fontTarget, const void *, fontName, GLbitfield, fontStyle, GLuint, firstGlyphIndex, GLsizei, numGlyphs, GLuint, pathParameterTemplate, GLfloat, emScale); \
    HookWrapper9(GLenum, glPathMemoryGlyphIndexArrayNV, GLuint, firstPathName, GLenum, fontTarget, GLsizeiptr, fontSize, const void *, fontData, GLsizei, faceIndex, GLuint, firstGlyphIndex, GLsizei, numGlyphs, GLuint, pathParameterTemplate, GLfloat, emScale); \
    HookWrapper5(void, glProgramPathFragmentInputGenNV, GLuint, program, GLint, location, GLenum, genMode, GLint, components, const GLfloat *, coeffs); \
    HookWrapper8(void, glGetProgramResourcefvNV, GLuint, program, GLenum, programInterface, GLuint, index, GLsizei, propCount, const GLenum *, props, GLsizei, bufSize, GLsizei *, length, GLfloat *, params); \
    HookWrapper4(void, glFramebufferSampleLocationsfvNV, GLenum, target, GLuint, start, GLsizei, count, const GLfloat *, v); \
    HookWrapper4(void, glNamedFramebufferSampleLocationsfvNV, GLuint, framebuffer, GLuint, start, GLsizei, count, const GLfloat *, v); \
    HookWrapper0(void, glResolveDepthValuesNV); \
    HookWrapper2(void, glMakeBufferResidentNV, GLenum, target, GLenum, access); \
    HookWrapper1(void, glMakeBufferNonResidentNV, GLenum, target); \
    HookWrapper1(GLboolean, glIsBufferResidentNV, GLenum, target); \
    HookWrapper2(void, glMakeNamedBufferResidentNV, GLuint, buffer, GLenum, access); \
    HookWrapper1(void, glMakeNamedBufferNonResidentNV, GLuint, buffer); \
    HookWrapper1(GLboolean, glIsNamedBufferResidentNV, GLuint, buffer); \
    HookWrapper3(void, glGetBufferParameterui64vNV, GLenum, target, GLenum, pname, GLuint64EXT *, params); \
    HookWrapper3(void, glGetNamedBufferParameterui64vNV, GLuint, buffer, GLenum, pname, GLuint64EXT *, params); \
    HookWrapper2(void, glGetIntegerui64vNV, GLenum, value, GLuint64EXT *, result); \
    HookWrapper2(void, glUniformui64NV, GLint, location, GLuint64EXT, value); \
    HookWrapper3(void, glUniformui64vNV, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper3(void, glGetUniformui64vNV, GLuint, program, GLint, location, GLuint64EXT *, params); \
    HookWrapper3(void, glProgramUniformui64NV, GLuint, program, GLint, location, GLuint64EXT, value); \
    HookWrapper4(void, glProgramUniformui64vNV, GLuint, program, GLint, location, GLsizei, count, const GLuint64EXT *, value); \
    HookWrapper0(void, glTextureBarrierNV); \
    HookWrapper2(void, glVertexAttribL1i64NV, GLuint, index, GLint64EXT, x); \
    HookWrapper3(void, glVertexAttribL2i64NV, GLuint, index, GLint64EXT, x, GLint64EXT, y); \
    HookWrapper4(void, glVertexAttribL3i64NV, GLuint, index, GLint64EXT, x, GLint64EXT, y, GLint64EXT, z); \
    HookWrapper5(void, glVertexAttribL4i64NV, GLuint, index, GLint64EXT, x, GLint64EXT, y, GLint64EXT, z, GLint64EXT, w); \
    HookWrapper2(void, glVertexAttribL1i64vNV, GLuint, index, const GLint64EXT *, v); \
    HookWrapper2(void, glVertexAttribL2i64vNV, GLuint, index, const GLint64EXT *, v); \
    HookWrapper2(void, glVertexAttribL3i64vNV, GLuint, index, const GLint64EXT *, v); \
    HookWrapper2(void, glVertexAttribL4i64vNV, GLuint, index, const GLint64EXT *, v); \
    HookWrapper2(void, glVertexAttribL1ui64NV, GLuint, index, GLuint64EXT, x); \
    HookWrapper3(void, glVertexAttribL2ui64NV, GLuint, index, GLuint64EXT, x, GLuint64EXT, y); \
    HookWrapper4(void, glVertexAttribL3ui64NV, GLuint, index, GLuint64EXT, x, GLuint64EXT, y, GLuint64EXT, z); \
    HookWrapper5(void, glVertexAttribL4ui64NV, GLuint, index, GLuint64EXT, x, GLuint64EXT, y, GLuint64EXT, z, GLuint64EXT, w); \
    HookWrapper2(void, glVertexAttribL1ui64vNV, GLuint, index, const GLuint64EXT *, v); \
    HookWrapper2(void, glVertexAttribL2ui64vNV, GLuint, index, const GLuint64EXT *, v); \
    HookWrapper2(void, glVertexAttribL3ui64vNV, GLuint, index, const GLuint64EXT *, v); \
    HookWrapper2(void, glVertexAttribL4ui64vNV, GLuint, index, const GLuint64EXT *, v); \
    HookWrapper3(void, glGetVertexAttribLi64vNV, GLuint, index, GLenum, pname, GLint64EXT *, params); \
    HookWrapper3(void, glGetVertexAttribLui64vNV, GLuint, index, GLenum, pname, GLuint64EXT *, params); \
    HookWrapper4(void, glVertexAttribLFormatNV, GLuint, index, GLint, size, GLenum, type, GLsizei, stride); \
    HookWrapper4(void, glBufferAddressRangeNV, GLenum, pname, GLuint, index, GLuint64EXT, address, GLsizeiptr, length); \
    HookWrapper3(void, glVertexFormatNV, GLint, size, GLenum, type, GLsizei, stride); \
    HookWrapper2(void, glNormalFormatNV, GLenum, type, GLsizei, stride); \
    HookWrapper3(void, glColorFormatNV, GLint, size, GLenum, type, GLsizei, stride); \
    HookWrapper2(void, glIndexFormatNV, GLenum, type, GLsizei, stride); \
    HookWrapper3(void, glTexCoordFormatNV, GLint, size, GLenum, type, GLsizei, stride); \
    HookWrapper1(void, glEdgeFlagFormatNV, GLsizei, stride); \
    HookWrapper3(void, glSecondaryColorFormatNV, GLint, size, GLenum, type, GLsizei, stride); \
    HookWrapper2(void, glFogCoordFormatNV, GLenum, type, GLsizei, stride); \
    HookWrapper5(void, glVertexAttribFormatNV, GLuint, index, GLint, size, GLenum, type, GLboolean, normalized, GLsizei, stride); \
    HookWrapper4(void, glVertexAttribIFormatNV, GLuint, index, GLint, size, GLenum, type, GLsizei, stride); \
    HookWrapper3(void, glGetIntegerui64i_vNV, GLenum, value, GLuint, index, GLuint64EXT *, result); \
    HookWrapper5(void, glViewportSwizzleNV, GLuint, index, GLenum, swizzlex, GLenum, swizzley, GLenum, swizzlez, GLenum, swizzlew); \
    HookWrapper1(void, glClientActiveTexture, GLenum, texture); \
    HookWrapper2(void, glMultiTexCoord1d, GLenum, target, GLdouble, s); \
    HookWrapper2(void, glMultiTexCoord1dv, GLenum, target, const GLdouble *, v); \
    HookWrapper2(void, glMultiTexCoord1f, GLenum, target, GLfloat, s); \
    HookWrapper2(void, glMultiTexCoord1fv, GLenum, target, const GLfloat *, v); \
    HookWrapper2(void, glMultiTexCoord1i, GLenum, target, GLint, s); \
    HookWrapper2(void, glMultiTexCoord1iv, GLenum, target, const GLint *, v); \
    HookWrapper2(void, glMultiTexCoord1s, GLenum, target, GLshort, s); \
    HookWrapper2(void, glMultiTexCoord1sv, GLenum, target, const GLshort *, v); \
    HookWrapper3(void, glMultiTexCoord2d, GLenum, target, GLdouble, s, GLdouble, t); \
    HookWrapper2(void, glMultiTexCoord2dv, GLenum, target, const GLdouble *, v); \
    HookWrapper3(void, glMultiTexCoord2f, GLenum, target, GLfloat, s, GLfloat, t); \
    HookWrapper2(void, glMultiTexCoord2fv, GLenum, target, const GLfloat *, v); \
    HookWrapper3(void, glMultiTexCoord2i, GLenum, target, GLint, s, GLint, t); \
    HookWrapper2(void, glMultiTexCoord2iv, GLenum, target, const GLint *, v); \
    HookWrapper3(void, glMultiTexCoord2s, GLenum, target, GLshort, s, GLshort, t); \
    HookWrapper2(void, glMultiTexCoord2sv, GLenum, target, const GLshort *, v); \
    HookWrapper4(void, glMultiTexCoord3d, GLenum, target, GLdouble, s, GLdouble, t, GLdouble, r); \
    HookWrapper2(void, glMultiTexCoord3dv, GLenum, target, const GLdouble *, v); \
    HookWrapper4(void, glMultiTexCoord3f, GLenum, target, GLfloat, s, GLfloat, t, GLfloat, r); \
    HookWrapper2(void, glMultiTexCoord3fv, GLenum, target, const GLfloat *, v); \
    HookWrapper4(void, glMultiTexCoord3i, GLenum, target, GLint, s, GLint, t, GLint, r); \
    HookWrapper2(void, glMultiTexCoord3iv, GLenum, target, const GLint *, v); \
    HookWrapper4(void, glMultiTexCoord3s, GLenum, target, GLshort, s, GLshort, t, GLshort, r); \
    HookWrapper2(void, glMultiTexCoord3sv, GLenum, target, const GLshort *, v); \
    HookWrapper5(void, glMultiTexCoord4d, GLenum, target, GLdouble, s, GLdouble, t, GLdouble, r, GLdouble, q); \
    HookWrapper2(void, glMultiTexCoord4dv, GLenum, target, const GLdouble *, v); \
    HookWrapper5(void, glMultiTexCoord4f, GLenum, target, GLfloat, s, GLfloat, t, GLfloat, r, GLfloat, q); \
    HookWrapper2(void, glMultiTexCoord4fv, GLenum, target, const GLfloat *, v); \
    HookWrapper5(void, glMultiTexCoord4i, GLenum, target, GLint, s, GLint, t, GLint, r, GLint, q); \
    HookWrapper2(void, glMultiTexCoord4iv, GLenum, target, const GLint *, v); \
    HookWrapper5(void, glMultiTexCoord4s, GLenum, target, GLshort, s, GLshort, t, GLshort, r, GLshort, q); \
    HookWrapper2(void, glMultiTexCoord4sv, GLenum, target, const GLshort *, v); \
    HookWrapper1(void, glLoadTransposeMatrixf, const GLfloat *, m); \
    HookWrapper1(void, glLoadTransposeMatrixd, const GLdouble *, m); \
    HookWrapper1(void, glMultTransposeMatrixf, const GLfloat *, m); \
    HookWrapper1(void, glMultTransposeMatrixd, const GLdouble *, m); \
    HookWrapper1(void, glFogCoordf, GLfloat, coord); \
    HookWrapper1(void, glFogCoordfv, const GLfloat *, coord); \
    HookWrapper1(void, glFogCoordd, GLdouble, coord); \
    HookWrapper1(void, glFogCoorddv, const GLdouble *, coord); \
    HookWrapper3(void, glFogCoordPointer, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper3(void, glSecondaryColor3b, GLbyte, red, GLbyte, green, GLbyte, blue); \
    HookWrapper1(void, glSecondaryColor3bv, const GLbyte *, v); \
    HookWrapper3(void, glSecondaryColor3d, GLdouble, red, GLdouble, green, GLdouble, blue); \
    HookWrapper1(void, glSecondaryColor3dv, const GLdouble *, v); \
    HookWrapper3(void, glSecondaryColor3f, GLfloat, red, GLfloat, green, GLfloat, blue); \
    HookWrapper1(void, glSecondaryColor3fv, const GLfloat *, v); \
    HookWrapper3(void, glSecondaryColor3i, GLint, red, GLint, green, GLint, blue); \
    HookWrapper1(void, glSecondaryColor3iv, const GLint *, v); \
    HookWrapper3(void, glSecondaryColor3s, GLshort, red, GLshort, green, GLshort, blue); \
    HookWrapper1(void, glSecondaryColor3sv, const GLshort *, v); \
    HookWrapper3(void, glSecondaryColor3ub, GLubyte, red, GLubyte, green, GLubyte, blue); \
    HookWrapper1(void, glSecondaryColor3ubv, const GLubyte *, v); \
    HookWrapper3(void, glSecondaryColor3ui, GLuint, red, GLuint, green, GLuint, blue); \
    HookWrapper1(void, glSecondaryColor3uiv, const GLuint *, v); \
    HookWrapper3(void, glSecondaryColor3us, GLushort, red, GLushort, green, GLushort, blue); \
    HookWrapper1(void, glSecondaryColor3usv, const GLushort *, v); \
    HookWrapper4(void, glSecondaryColorPointer, GLint, size, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper2(void, glWindowPos2d, GLdouble, x, GLdouble, y); \
    HookWrapper1(void, glWindowPos2dv, const GLdouble *, v); \
    HookWrapper2(void, glWindowPos2f, GLfloat, x, GLfloat, y); \
    HookWrapper1(void, glWindowPos2fv, const GLfloat *, v); \
    HookWrapper2(void, glWindowPos2i, GLint, x, GLint, y); \
    HookWrapper1(void, glWindowPos2iv, const GLint *, v); \
    HookWrapper2(void, glWindowPos2s, GLshort, x, GLshort, y); \
    HookWrapper1(void, glWindowPos2sv, const GLshort *, v); \
    HookWrapper3(void, glWindowPos3d, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper1(void, glWindowPos3dv, const GLdouble *, v); \
    HookWrapper3(void, glWindowPos3f, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper1(void, glWindowPos3fv, const GLfloat *, v); \
    HookWrapper3(void, glWindowPos3i, GLint, x, GLint, y, GLint, z); \
    HookWrapper1(void, glWindowPos3iv, const GLint *, v); \
    HookWrapper3(void, glWindowPos3s, GLshort, x, GLshort, y, GLshort, z); \
    HookWrapper1(void, glWindowPos3sv, const GLshort *, v); \
    HookWrapper2(void, glVertexP2ui, GLenum, type, GLuint, value); \
    HookWrapper2(void, glVertexP2uiv, GLenum, type, const GLuint *, value); \
    HookWrapper2(void, glVertexP3ui, GLenum, type, GLuint, value); \
    HookWrapper2(void, glVertexP3uiv, GLenum, type, const GLuint *, value); \
    HookWrapper2(void, glVertexP4ui, GLenum, type, GLuint, value); \
    HookWrapper2(void, glVertexP4uiv, GLenum, type, const GLuint *, value); \
    HookWrapper2(void, glTexCoordP1ui, GLenum, type, GLuint, coords); \
    HookWrapper2(void, glTexCoordP1uiv, GLenum, type, const GLuint *, coords); \
    HookWrapper2(void, glTexCoordP2ui, GLenum, type, GLuint, coords); \
    HookWrapper2(void, glTexCoordP2uiv, GLenum, type, const GLuint *, coords); \
    HookWrapper2(void, glTexCoordP3ui, GLenum, type, GLuint, coords); \
    HookWrapper2(void, glTexCoordP3uiv, GLenum, type, const GLuint *, coords); \
    HookWrapper2(void, glTexCoordP4ui, GLenum, type, GLuint, coords); \
    HookWrapper2(void, glTexCoordP4uiv, GLenum, type, const GLuint *, coords); \
    HookWrapper3(void, glMultiTexCoordP1ui, GLenum, texture, GLenum, type, GLuint, coords); \
    HookWrapper3(void, glMultiTexCoordP1uiv, GLenum, texture, GLenum, type, const GLuint *, coords); \
    HookWrapper3(void, glMultiTexCoordP2ui, GLenum, texture, GLenum, type, GLuint, coords); \
    HookWrapper3(void, glMultiTexCoordP2uiv, GLenum, texture, GLenum, type, const GLuint *, coords); \
    HookWrapper3(void, glMultiTexCoordP3ui, GLenum, texture, GLenum, type, GLuint, coords); \
    HookWrapper3(void, glMultiTexCoordP3uiv, GLenum, texture, GLenum, type, const GLuint *, coords); \
    HookWrapper3(void, glMultiTexCoordP4ui, GLenum, texture, GLenum, type, GLuint, coords); \
    HookWrapper3(void, glMultiTexCoordP4uiv, GLenum, texture, GLenum, type, const GLuint *, coords); \
    HookWrapper2(void, glNormalP3ui, GLenum, type, GLuint, coords); \
    HookWrapper2(void, glNormalP3uiv, GLenum, type, const GLuint *, coords); \
    HookWrapper2(void, glColorP3ui, GLenum, type, GLuint, color); \
    HookWrapper2(void, glColorP3uiv, GLenum, type, const GLuint *, color); \
    HookWrapper2(void, glColorP4ui, GLenum, type, GLuint, color); \
    HookWrapper2(void, glColorP4uiv, GLenum, type, const GLuint *, color); \
    HookWrapper2(void, glSecondaryColorP3ui, GLenum, type, GLuint, color); \
    HookWrapper2(void, glSecondaryColorP3uiv, GLenum, type, const GLuint *, color); \
    HookWrapper4(void, glGetnMapdv, GLenum, target, GLenum, query, GLsizei, bufSize, GLdouble *, v); \
    HookWrapper4(void, glGetnMapfv, GLenum, target, GLenum, query, GLsizei, bufSize, GLfloat *, v); \
    HookWrapper4(void, glGetnMapiv, GLenum, target, GLenum, query, GLsizei, bufSize, GLint *, v); \
    HookWrapper3(void, glGetnPixelMapfv, GLenum, map, GLsizei, bufSize, GLfloat *, values); \
    HookWrapper3(void, glGetnPixelMapuiv, GLenum, map, GLsizei, bufSize, GLuint *, values); \
    HookWrapper3(void, glGetnPixelMapusv, GLenum, map, GLsizei, bufSize, GLushort *, values); \
    HookWrapper2(void, glGetnPolygonStipple, GLsizei, bufSize, GLubyte *, pattern); \
    HookWrapper5(void, glGetnColorTable, GLenum, target, GLenum, format, GLenum, type, GLsizei, bufSize, void *, table); \
    HookWrapper5(void, glGetnConvolutionFilter, GLenum, target, GLenum, format, GLenum, type, GLsizei, bufSize, void *, image); \
    HookWrapper8(void, glGetnSeparableFilter, GLenum, target, GLenum, format, GLenum, type, GLsizei, rowBufSize, void *, row, GLsizei, columnBufSize, void *, column, void *, span); \
    HookWrapper6(void, glGetnHistogram, GLenum, target, GLboolean, reset, GLenum, format, GLenum, type, GLsizei, bufSize, void *, values); \
    HookWrapper6(void, glGetnMinmax, GLenum, target, GLboolean, reset, GLenum, format, GLenum, type, GLsizei, bufSize, void *, values); \
    HookWrapper4(void, glProgramStringARB, GLenum, target, GLenum, format, GLsizei, len, const void *, string); \
    HookWrapper2(void, glBindProgramARB, GLenum, target, GLuint, program); \
    HookWrapper2(void, glDeleteProgramsARB, GLsizei, n, const GLuint *, programs); \
    HookWrapper2(void, glGenProgramsARB, GLsizei, n, GLuint *, programs); \
    HookWrapper6(void, glProgramEnvParameter4dARB, GLenum, target, GLuint, index, GLdouble, x, GLdouble, y, GLdouble, z, GLdouble, w); \
    HookWrapper3(void, glProgramEnvParameter4dvARB, GLenum, target, GLuint, index, const GLdouble *, params); \
    HookWrapper6(void, glProgramEnvParameter4fARB, GLenum, target, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookWrapper3(void, glProgramEnvParameter4fvARB, GLenum, target, GLuint, index, const GLfloat *, params); \
    HookWrapper6(void, glProgramLocalParameter4dARB, GLenum, target, GLuint, index, GLdouble, x, GLdouble, y, GLdouble, z, GLdouble, w); \
    HookWrapper3(void, glProgramLocalParameter4dvARB, GLenum, target, GLuint, index, const GLdouble *, params); \
    HookWrapper6(void, glProgramLocalParameter4fARB, GLenum, target, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookWrapper3(void, glProgramLocalParameter4fvARB, GLenum, target, GLuint, index, const GLfloat *, params); \
    HookWrapper3(void, glGetProgramEnvParameterdvARB, GLenum, target, GLuint, index, GLdouble *, params); \
    HookWrapper3(void, glGetProgramEnvParameterfvARB, GLenum, target, GLuint, index, GLfloat *, params); \
    HookWrapper3(void, glGetProgramLocalParameterdvARB, GLenum, target, GLuint, index, GLdouble *, params); \
    HookWrapper3(void, glGetProgramLocalParameterfvARB, GLenum, target, GLuint, index, GLfloat *, params); \
    HookWrapper3(void, glGetProgramivARB, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetProgramStringARB, GLenum, target, GLenum, pname, void *, string); \
    HookWrapper1(GLboolean, glIsProgramARB, GLuint, program); \
    HookWrapper6(void, glColorTable, GLenum, target, GLenum, internalformat, GLsizei, width, GLenum, format, GLenum, type, const void *, table); \
    HookWrapper3(void, glColorTableParameterfv, GLenum, target, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glColorTableParameteriv, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper5(void, glCopyColorTable, GLenum, target, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width); \
    HookWrapper4(void, glGetColorTable, GLenum, target, GLenum, format, GLenum, type, void *, table); \
    HookWrapper3(void, glGetColorTableParameterfv, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetColorTableParameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper6(void, glColorSubTable, GLenum, target, GLsizei, start, GLsizei, count, GLenum, format, GLenum, type, const void *, data); \
    HookWrapper5(void, glCopyColorSubTable, GLenum, target, GLsizei, start, GLint, x, GLint, y, GLsizei, width); \
    HookWrapper6(void, glConvolutionFilter1D, GLenum, target, GLenum, internalformat, GLsizei, width, GLenum, format, GLenum, type, const void *, image); \
    HookWrapper7(void, glConvolutionFilter2D, GLenum, target, GLenum, internalformat, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, const void *, image); \
    HookWrapper3(void, glConvolutionParameterf, GLenum, target, GLenum, pname, GLfloat, params); \
    HookWrapper3(void, glConvolutionParameterfv, GLenum, target, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glConvolutionParameteri, GLenum, target, GLenum, pname, GLint, params); \
    HookWrapper3(void, glConvolutionParameteriv, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper5(void, glCopyConvolutionFilter1D, GLenum, target, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width); \
    HookWrapper6(void, glCopyConvolutionFilter2D, GLenum, target, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper4(void, glGetConvolutionFilter, GLenum, target, GLenum, format, GLenum, type, void *, image); \
    HookWrapper3(void, glGetConvolutionParameterfv, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetConvolutionParameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper6(void, glGetSeparableFilter, GLenum, target, GLenum, format, GLenum, type, void *, row, void *, column, void *, span); \
    HookWrapper8(void, glSeparableFilter2D, GLenum, target, GLenum, internalformat, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, const void *, row, const void *, column); \
    HookWrapper5(void, glGetHistogram, GLenum, target, GLboolean, reset, GLenum, format, GLenum, type, void *, values); \
    HookWrapper3(void, glGetHistogramParameterfv, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetHistogramParameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper5(void, glGetMinmax, GLenum, target, GLboolean, reset, GLenum, format, GLenum, type, void *, values); \
    HookWrapper3(void, glGetMinmaxParameterfv, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetMinmaxParameteriv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glHistogram, GLenum, target, GLsizei, width, GLenum, internalformat, GLboolean, sink); \
    HookWrapper3(void, glMinmax, GLenum, target, GLenum, internalformat, GLboolean, sink); \
    HookWrapper1(void, glResetHistogram, GLenum, target); \
    HookWrapper1(void, glResetMinmax, GLenum, target); \
    HookWrapper1(void, glCurrentPaletteMatrixARB, GLint, index); \
    HookWrapper2(void, glMatrixIndexubvARB, GLint, size, const GLubyte *, indices); \
    HookWrapper2(void, glMatrixIndexusvARB, GLint, size, const GLushort *, indices); \
    HookWrapper2(void, glMatrixIndexuivARB, GLint, size, const GLuint *, indices); \
    HookWrapper4(void, glMatrixIndexPointerARB, GLint, size, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper1(void, glClientActiveTextureARB, GLenum, texture); \
    HookWrapper2(void, glMultiTexCoord1dARB, GLenum, target, GLdouble, s); \
    HookWrapper2(void, glMultiTexCoord1dvARB, GLenum, target, const GLdouble *, v); \
    HookWrapper2(void, glMultiTexCoord1fARB, GLenum, target, GLfloat, s); \
    HookWrapper2(void, glMultiTexCoord1fvARB, GLenum, target, const GLfloat *, v); \
    HookWrapper2(void, glMultiTexCoord1iARB, GLenum, target, GLint, s); \
    HookWrapper2(void, glMultiTexCoord1ivARB, GLenum, target, const GLint *, v); \
    HookWrapper2(void, glMultiTexCoord1sARB, GLenum, target, GLshort, s); \
    HookWrapper2(void, glMultiTexCoord1svARB, GLenum, target, const GLshort *, v); \
    HookWrapper3(void, glMultiTexCoord2dARB, GLenum, target, GLdouble, s, GLdouble, t); \
    HookWrapper2(void, glMultiTexCoord2dvARB, GLenum, target, const GLdouble *, v); \
    HookWrapper3(void, glMultiTexCoord2fARB, GLenum, target, GLfloat, s, GLfloat, t); \
    HookWrapper2(void, glMultiTexCoord2fvARB, GLenum, target, const GLfloat *, v); \
    HookWrapper3(void, glMultiTexCoord2iARB, GLenum, target, GLint, s, GLint, t); \
    HookWrapper2(void, glMultiTexCoord2ivARB, GLenum, target, const GLint *, v); \
    HookWrapper3(void, glMultiTexCoord2sARB, GLenum, target, GLshort, s, GLshort, t); \
    HookWrapper2(void, glMultiTexCoord2svARB, GLenum, target, const GLshort *, v); \
    HookWrapper4(void, glMultiTexCoord3dARB, GLenum, target, GLdouble, s, GLdouble, t, GLdouble, r); \
    HookWrapper2(void, glMultiTexCoord3dvARB, GLenum, target, const GLdouble *, v); \
    HookWrapper4(void, glMultiTexCoord3fARB, GLenum, target, GLfloat, s, GLfloat, t, GLfloat, r); \
    HookWrapper2(void, glMultiTexCoord3fvARB, GLenum, target, const GLfloat *, v); \
    HookWrapper4(void, glMultiTexCoord3iARB, GLenum, target, GLint, s, GLint, t, GLint, r); \
    HookWrapper2(void, glMultiTexCoord3ivARB, GLenum, target, const GLint *, v); \
    HookWrapper4(void, glMultiTexCoord3sARB, GLenum, target, GLshort, s, GLshort, t, GLshort, r); \
    HookWrapper2(void, glMultiTexCoord3svARB, GLenum, target, const GLshort *, v); \
    HookWrapper5(void, glMultiTexCoord4dARB, GLenum, target, GLdouble, s, GLdouble, t, GLdouble, r, GLdouble, q); \
    HookWrapper2(void, glMultiTexCoord4dvARB, GLenum, target, const GLdouble *, v); \
    HookWrapper5(void, glMultiTexCoord4fARB, GLenum, target, GLfloat, s, GLfloat, t, GLfloat, r, GLfloat, q); \
    HookWrapper2(void, glMultiTexCoord4fvARB, GLenum, target, const GLfloat *, v); \
    HookWrapper5(void, glMultiTexCoord4iARB, GLenum, target, GLint, s, GLint, t, GLint, r, GLint, q); \
    HookWrapper2(void, glMultiTexCoord4ivARB, GLenum, target, const GLint *, v); \
    HookWrapper5(void, glMultiTexCoord4sARB, GLenum, target, GLshort, s, GLshort, t, GLshort, r, GLshort, q); \
    HookWrapper2(void, glMultiTexCoord4svARB, GLenum, target, const GLshort *, v); \
    HookWrapper4(void, glGetnMapdvARB, GLenum, target, GLenum, query, GLsizei, bufSize, GLdouble *, v); \
    HookWrapper4(void, glGetnMapfvARB, GLenum, target, GLenum, query, GLsizei, bufSize, GLfloat *, v); \
    HookWrapper4(void, glGetnMapivARB, GLenum, target, GLenum, query, GLsizei, bufSize, GLint *, v); \
    HookWrapper3(void, glGetnPixelMapfvARB, GLenum, map, GLsizei, bufSize, GLfloat *, values); \
    HookWrapper3(void, glGetnPixelMapuivARB, GLenum, map, GLsizei, bufSize, GLuint *, values); \
    HookWrapper3(void, glGetnPixelMapusvARB, GLenum, map, GLsizei, bufSize, GLushort *, values); \
    HookWrapper2(void, glGetnPolygonStippleARB, GLsizei, bufSize, GLubyte *, pattern); \
    HookWrapper5(void, glGetnColorTableARB, GLenum, target, GLenum, format, GLenum, type, GLsizei, bufSize, void *, table); \
    HookWrapper5(void, glGetnConvolutionFilterARB, GLenum, target, GLenum, format, GLenum, type, GLsizei, bufSize, void *, image); \
    HookWrapper8(void, glGetnSeparableFilterARB, GLenum, target, GLenum, format, GLenum, type, GLsizei, rowBufSize, void *, row, GLsizei, columnBufSize, void *, column, void *, span); \
    HookWrapper6(void, glGetnHistogramARB, GLenum, target, GLboolean, reset, GLenum, format, GLenum, type, GLsizei, bufSize, void *, values); \
    HookWrapper6(void, glGetnMinmaxARB, GLenum, target, GLboolean, reset, GLenum, format, GLenum, type, GLsizei, bufSize, void *, values); \
    HookWrapper1(void, glDeleteObjectARB, GLhandleARB, obj); \
    HookWrapper1(GLhandleARB, glGetHandleARB, GLenum, pname); \
    HookWrapper2(void, glDetachObjectARB, GLhandleARB, containerObj, GLhandleARB, attachedObj); \
    HookWrapper1(GLhandleARB, glCreateShaderObjectARB, GLenum, shaderType); \
    HookWrapper4(void, glShaderSourceARB, GLhandleARB, shaderObj, GLsizei, count, const GLcharARB **, string, const GLint *, length); \
    HookWrapper1(void, glCompileShaderARB, GLhandleARB, shaderObj); \
    HookWrapper0(GLhandleARB, glCreateProgramObjectARB); \
    HookWrapper2(void, glAttachObjectARB, GLhandleARB, containerObj, GLhandleARB, obj); \
    HookWrapper1(void, glLinkProgramARB, GLhandleARB, programObj); \
    HookWrapper1(void, glUseProgramObjectARB, GLhandleARB, programObj); \
    HookWrapper1(void, glValidateProgramARB, GLhandleARB, programObj); \
    HookWrapper2(void, glUniform1fARB, GLint, location, GLfloat, v0); \
    HookWrapper3(void, glUniform2fARB, GLint, location, GLfloat, v0, GLfloat, v1); \
    HookWrapper4(void, glUniform3fARB, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2); \
    HookWrapper5(void, glUniform4fARB, GLint, location, GLfloat, v0, GLfloat, v1, GLfloat, v2, GLfloat, v3); \
    HookWrapper2(void, glUniform1iARB, GLint, location, GLint, v0); \
    HookWrapper3(void, glUniform2iARB, GLint, location, GLint, v0, GLint, v1); \
    HookWrapper4(void, glUniform3iARB, GLint, location, GLint, v0, GLint, v1, GLint, v2); \
    HookWrapper5(void, glUniform4iARB, GLint, location, GLint, v0, GLint, v1, GLint, v2, GLint, v3); \
    HookWrapper3(void, glUniform1fvARB, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper3(void, glUniform2fvARB, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper3(void, glUniform3fvARB, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper3(void, glUniform4fvARB, GLint, location, GLsizei, count, const GLfloat *, value); \
    HookWrapper3(void, glUniform1ivARB, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper3(void, glUniform2ivARB, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper3(void, glUniform3ivARB, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper3(void, glUniform4ivARB, GLint, location, GLsizei, count, const GLint *, value); \
    HookWrapper4(void, glUniformMatrix2fvARB, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, glUniformMatrix3fvARB, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, glUniformMatrix4fvARB, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper3(void, glGetObjectParameterfvARB, GLhandleARB, obj, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetObjectParameterivARB, GLhandleARB, obj, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetInfoLogARB, GLhandleARB, obj, GLsizei, maxLength, GLsizei *, length, GLcharARB *, infoLog); \
    HookWrapper4(void, glGetAttachedObjectsARB, GLhandleARB, containerObj, GLsizei, maxCount, GLsizei *, count, GLhandleARB *, obj); \
    HookWrapper2(GLint, glGetUniformLocationARB, GLhandleARB, programObj, const GLcharARB *, name); \
    HookWrapper7(void, glGetActiveUniformARB, GLhandleARB, programObj, GLuint, index, GLsizei, maxLength, GLsizei *, length, GLint *, size, GLenum *, type, GLcharARB *, name); \
    HookWrapper3(void, glGetUniformfvARB, GLhandleARB, programObj, GLint, location, GLfloat *, params); \
    HookWrapper3(void, glGetUniformivARB, GLhandleARB, programObj, GLint, location, GLint *, params); \
    HookWrapper4(void, glGetShaderSourceARB, GLhandleARB, obj, GLsizei, maxLength, GLsizei *, length, GLcharARB *, source); \
    HookWrapper1(void, glLoadTransposeMatrixfARB, const GLfloat *, m); \
    HookWrapper1(void, glLoadTransposeMatrixdARB, const GLdouble *, m); \
    HookWrapper1(void, glMultTransposeMatrixfARB, const GLfloat *, m); \
    HookWrapper1(void, glMultTransposeMatrixdARB, const GLdouble *, m); \
    HookWrapper2(void, glWeightbvARB, GLint, size, const GLbyte *, weights); \
    HookWrapper2(void, glWeightsvARB, GLint, size, const GLshort *, weights); \
    HookWrapper2(void, glWeightivARB, GLint, size, const GLint *, weights); \
    HookWrapper2(void, glWeightfvARB, GLint, size, const GLfloat *, weights); \
    HookWrapper2(void, glWeightdvARB, GLint, size, const GLdouble *, weights); \
    HookWrapper2(void, glWeightubvARB, GLint, size, const GLubyte *, weights); \
    HookWrapper2(void, glWeightusvARB, GLint, size, const GLushort *, weights); \
    HookWrapper2(void, glWeightuivARB, GLint, size, const GLuint *, weights); \
    HookWrapper4(void, glWeightPointerARB, GLint, size, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper1(void, glVertexBlendARB, GLint, count); \
    HookWrapper5(void, glVertexAttrib4NubARB, GLuint, index, GLubyte, x, GLubyte, y, GLubyte, z, GLubyte, w); \
    HookWrapper3(void, glGetVertexAttribdvARB, GLuint, index, GLenum, pname, GLdouble *, params); \
    HookWrapper3(void, glGetVertexAttribfvARB, GLuint, index, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetVertexAttribivARB, GLuint, index, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetVertexAttribPointervARB, GLuint, index, GLenum, pname, void **, pointer); \
    HookWrapper3(void, glBindAttribLocationARB, GLhandleARB, programObj, GLuint, index, const GLcharARB *, name); \
    HookWrapper7(void, glGetActiveAttribARB, GLhandleARB, programObj, GLuint, index, GLsizei, maxLength, GLsizei *, length, GLint *, size, GLenum *, type, GLcharARB *, name); \
    HookWrapper2(GLint, glGetAttribLocationARB, GLhandleARB, programObj, const GLcharARB *, name); \
    HookWrapper2(void, glWindowPos2dARB, GLdouble, x, GLdouble, y); \
    HookWrapper1(void, glWindowPos2dvARB, const GLdouble *, v); \
    HookWrapper2(void, glWindowPos2fARB, GLfloat, x, GLfloat, y); \
    HookWrapper1(void, glWindowPos2fvARB, const GLfloat *, v); \
    HookWrapper2(void, glWindowPos2iARB, GLint, x, GLint, y); \
    HookWrapper1(void, glWindowPos2ivARB, const GLint *, v); \
    HookWrapper2(void, glWindowPos2sARB, GLshort, x, GLshort, y); \
    HookWrapper1(void, glWindowPos2svARB, const GLshort *, v); \
    HookWrapper3(void, glWindowPos3dARB, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper1(void, glWindowPos3dvARB, const GLdouble *, v); \
    HookWrapper3(void, glWindowPos3fARB, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper1(void, glWindowPos3fvARB, const GLfloat *, v); \
    HookWrapper3(void, glWindowPos3iARB, GLint, x, GLint, y, GLint, z); \
    HookWrapper1(void, glWindowPos3ivARB, const GLint *, v); \
    HookWrapper3(void, glWindowPos3sARB, GLshort, x, GLshort, y, GLshort, z); \
    HookWrapper1(void, glWindowPos3svARB, const GLshort *, v); \
    HookWrapper2(void, glMultiTexCoord1bOES, GLenum, texture, GLbyte, s); \
    HookWrapper2(void, glMultiTexCoord1bvOES, GLenum, texture, const GLbyte *, coords); \
    HookWrapper3(void, glMultiTexCoord2bOES, GLenum, texture, GLbyte, s, GLbyte, t); \
    HookWrapper2(void, glMultiTexCoord2bvOES, GLenum, texture, const GLbyte *, coords); \
    HookWrapper4(void, glMultiTexCoord3bOES, GLenum, texture, GLbyte, s, GLbyte, t, GLbyte, r); \
    HookWrapper2(void, glMultiTexCoord3bvOES, GLenum, texture, const GLbyte *, coords); \
    HookWrapper5(void, glMultiTexCoord4bOES, GLenum, texture, GLbyte, s, GLbyte, t, GLbyte, r, GLbyte, q); \
    HookWrapper2(void, glMultiTexCoord4bvOES, GLenum, texture, const GLbyte *, coords); \
    HookWrapper1(void, glTexCoord1bOES, GLbyte, s); \
    HookWrapper1(void, glTexCoord1bvOES, const GLbyte *, coords); \
    HookWrapper2(void, glTexCoord2bOES, GLbyte, s, GLbyte, t); \
    HookWrapper1(void, glTexCoord2bvOES, const GLbyte *, coords); \
    HookWrapper3(void, glTexCoord3bOES, GLbyte, s, GLbyte, t, GLbyte, r); \
    HookWrapper1(void, glTexCoord3bvOES, const GLbyte *, coords); \
    HookWrapper4(void, glTexCoord4bOES, GLbyte, s, GLbyte, t, GLbyte, r, GLbyte, q); \
    HookWrapper1(void, glTexCoord4bvOES, const GLbyte *, coords); \
    HookWrapper2(void, glVertex2bOES, GLbyte, x, GLbyte, y); \
    HookWrapper1(void, glVertex2bvOES, const GLbyte *, coords); \
    HookWrapper3(void, glVertex3bOES, GLbyte, x, GLbyte, y, GLbyte, z); \
    HookWrapper1(void, glVertex3bvOES, const GLbyte *, coords); \
    HookWrapper4(void, glVertex4bOES, GLbyte, x, GLbyte, y, GLbyte, z, GLbyte, w); \
    HookWrapper1(void, glVertex4bvOES, const GLbyte *, coords); \
    HookWrapper2(void, glAlphaFuncxOES, GLenum, func, GLfixed, ref); \
    HookWrapper4(void, glClearColorxOES, GLfixed, red, GLfixed, green, GLfixed, blue, GLfixed, alpha); \
    HookWrapper1(void, glClearDepthxOES, GLfixed, depth); \
    HookWrapper2(void, glClipPlanexOES, GLenum, plane, const GLfixed *, equation); \
    HookWrapper4(void, glColor4xOES, GLfixed, red, GLfixed, green, GLfixed, blue, GLfixed, alpha); \
    HookWrapper2(void, glDepthRangexOES, GLfixed, n, GLfixed, f); \
    HookWrapper2(void, glFogxOES, GLenum, pname, GLfixed, param); \
    HookWrapper2(void, glFogxvOES, GLenum, pname, const GLfixed *, param); \
    HookWrapper6(void, glFrustumxOES, GLfixed, l, GLfixed, r, GLfixed, b, GLfixed, t, GLfixed, n, GLfixed, f); \
    HookWrapper2(void, glGetClipPlanexOES, GLenum, plane, GLfixed *, equation); \
    HookWrapper2(void, glGetFixedvOES, GLenum, pname, GLfixed *, params); \
    HookWrapper3(void, glGetTexEnvxvOES, GLenum, target, GLenum, pname, GLfixed *, params); \
    HookWrapper3(void, glGetTexParameterxvOES, GLenum, target, GLenum, pname, GLfixed *, params); \
    HookWrapper2(void, glLightModelxOES, GLenum, pname, GLfixed, param); \
    HookWrapper2(void, glLightModelxvOES, GLenum, pname, const GLfixed *, param); \
    HookWrapper3(void, glLightxOES, GLenum, light, GLenum, pname, GLfixed, param); \
    HookWrapper3(void, glLightxvOES, GLenum, light, GLenum, pname, const GLfixed *, params); \
    HookWrapper1(void, glLineWidthxOES, GLfixed, width); \
    HookWrapper1(void, glLoadMatrixxOES, const GLfixed *, m); \
    HookWrapper3(void, glMaterialxOES, GLenum, face, GLenum, pname, GLfixed, param); \
    HookWrapper3(void, glMaterialxvOES, GLenum, face, GLenum, pname, const GLfixed *, param); \
    HookWrapper1(void, glMultMatrixxOES, const GLfixed *, m); \
    HookWrapper5(void, glMultiTexCoord4xOES, GLenum, texture, GLfixed, s, GLfixed, t, GLfixed, r, GLfixed, q); \
    HookWrapper3(void, glNormal3xOES, GLfixed, nx, GLfixed, ny, GLfixed, nz); \
    HookWrapper6(void, glOrthoxOES, GLfixed, l, GLfixed, r, GLfixed, b, GLfixed, t, GLfixed, n, GLfixed, f); \
    HookWrapper2(void, glPointParameterxvOES, GLenum, pname, const GLfixed *, params); \
    HookWrapper1(void, glPointSizexOES, GLfixed, size); \
    HookWrapper2(void, glPolygonOffsetxOES, GLfixed, factor, GLfixed, units); \
    HookWrapper4(void, glRotatexOES, GLfixed, angle, GLfixed, x, GLfixed, y, GLfixed, z); \
    HookWrapper3(void, glScalexOES, GLfixed, x, GLfixed, y, GLfixed, z); \
    HookWrapper3(void, glTexEnvxOES, GLenum, target, GLenum, pname, GLfixed, param); \
    HookWrapper3(void, glTexEnvxvOES, GLenum, target, GLenum, pname, const GLfixed *, params); \
    HookWrapper3(void, glTexParameterxOES, GLenum, target, GLenum, pname, GLfixed, param); \
    HookWrapper3(void, glTexParameterxvOES, GLenum, target, GLenum, pname, const GLfixed *, params); \
    HookWrapper3(void, glTranslatexOES, GLfixed, x, GLfixed, y, GLfixed, z); \
    HookWrapper2(void, glAccumxOES, GLenum, op, GLfixed, value); \
    HookWrapper7(void, glBitmapxOES, GLsizei, width, GLsizei, height, GLfixed, xorig, GLfixed, yorig, GLfixed, xmove, GLfixed, ymove, const GLubyte *, bitmap); \
    HookWrapper4(void, glBlendColorxOES, GLfixed, red, GLfixed, green, GLfixed, blue, GLfixed, alpha); \
    HookWrapper4(void, glClearAccumxOES, GLfixed, red, GLfixed, green, GLfixed, blue, GLfixed, alpha); \
    HookWrapper3(void, glColor3xOES, GLfixed, red, GLfixed, green, GLfixed, blue); \
    HookWrapper1(void, glColor3xvOES, const GLfixed *, components); \
    HookWrapper1(void, glColor4xvOES, const GLfixed *, components); \
    HookWrapper3(void, glConvolutionParameterxOES, GLenum, target, GLenum, pname, GLfixed, param); \
    HookWrapper3(void, glConvolutionParameterxvOES, GLenum, target, GLenum, pname, const GLfixed *, params); \
    HookWrapper1(void, glEvalCoord1xOES, GLfixed, u); \
    HookWrapper1(void, glEvalCoord1xvOES, const GLfixed *, coords); \
    HookWrapper2(void, glEvalCoord2xOES, GLfixed, u, GLfixed, v); \
    HookWrapper1(void, glEvalCoord2xvOES, const GLfixed *, coords); \
    HookWrapper3(void, glFeedbackBufferxOES, GLsizei, n, GLenum, type, const GLfixed *, buffer); \
    HookWrapper3(void, glGetConvolutionParameterxvOES, GLenum, target, GLenum, pname, GLfixed *, params); \
    HookWrapper3(void, glGetHistogramParameterxvOES, GLenum, target, GLenum, pname, GLfixed *, params); \
    HookWrapper3(void, glGetLightxOES, GLenum, light, GLenum, pname, GLfixed *, params); \
    HookWrapper3(void, glGetMapxvOES, GLenum, target, GLenum, query, GLfixed *, v); \
    HookWrapper3(void, glGetMaterialxOES, GLenum, face, GLenum, pname, GLfixed, param); \
    HookWrapper3(void, glGetPixelMapxv, GLenum, map, GLint, size, GLfixed *, values); \
    HookWrapper3(void, glGetTexGenxvOES, GLenum, coord, GLenum, pname, GLfixed *, params); \
    HookWrapper4(void, glGetTexLevelParameterxvOES, GLenum, target, GLint, level, GLenum, pname, GLfixed *, params); \
    HookWrapper1(void, glIndexxOES, GLfixed, component); \
    HookWrapper1(void, glIndexxvOES, const GLfixed *, component); \
    HookWrapper1(void, glLoadTransposeMatrixxOES, const GLfixed *, m); \
    HookWrapper6(void, glMap1xOES, GLenum, target, GLfixed, u1, GLfixed, u2, GLint, stride, GLint, order, GLfixed, points); \
    HookWrapper10(void, glMap2xOES, GLenum, target, GLfixed, u1, GLfixed, u2, GLint, ustride, GLint, uorder, GLfixed, v1, GLfixed, v2, GLint, vstride, GLint, vorder, GLfixed, points); \
    HookWrapper3(void, glMapGrid1xOES, GLint, n, GLfixed, u1, GLfixed, u2); \
    HookWrapper5(void, glMapGrid2xOES, GLint, n, GLfixed, u1, GLfixed, u2, GLfixed, v1, GLfixed, v2); \
    HookWrapper1(void, glMultTransposeMatrixxOES, const GLfixed *, m); \
    HookWrapper2(void, glMultiTexCoord1xOES, GLenum, texture, GLfixed, s); \
    HookWrapper2(void, glMultiTexCoord1xvOES, GLenum, texture, const GLfixed *, coords); \
    HookWrapper3(void, glMultiTexCoord2xOES, GLenum, texture, GLfixed, s, GLfixed, t); \
    HookWrapper2(void, glMultiTexCoord2xvOES, GLenum, texture, const GLfixed *, coords); \
    HookWrapper4(void, glMultiTexCoord3xOES, GLenum, texture, GLfixed, s, GLfixed, t, GLfixed, r); \
    HookWrapper2(void, glMultiTexCoord3xvOES, GLenum, texture, const GLfixed *, coords); \
    HookWrapper2(void, glMultiTexCoord4xvOES, GLenum, texture, const GLfixed *, coords); \
    HookWrapper1(void, glNormal3xvOES, const GLfixed *, coords); \
    HookWrapper1(void, glPassThroughxOES, GLfixed, token); \
    HookWrapper3(void, glPixelMapx, GLenum, map, GLint, size, const GLfixed *, values); \
    HookWrapper2(void, glPixelStorex, GLenum, pname, GLfixed, param); \
    HookWrapper2(void, glPixelTransferxOES, GLenum, pname, GLfixed, param); \
    HookWrapper2(void, glPixelZoomxOES, GLfixed, xfactor, GLfixed, yfactor); \
    HookWrapper3(void, glPrioritizeTexturesxOES, GLsizei, n, const GLuint *, textures, const GLfixed *, priorities); \
    HookWrapper2(void, glRasterPos2xOES, GLfixed, x, GLfixed, y); \
    HookWrapper1(void, glRasterPos2xvOES, const GLfixed *, coords); \
    HookWrapper3(void, glRasterPos3xOES, GLfixed, x, GLfixed, y, GLfixed, z); \
    HookWrapper1(void, glRasterPos3xvOES, const GLfixed *, coords); \
    HookWrapper4(void, glRasterPos4xOES, GLfixed, x, GLfixed, y, GLfixed, z, GLfixed, w); \
    HookWrapper1(void, glRasterPos4xvOES, const GLfixed *, coords); \
    HookWrapper4(void, glRectxOES, GLfixed, x1, GLfixed, y1, GLfixed, x2, GLfixed, y2); \
    HookWrapper2(void, glRectxvOES, const GLfixed *, v1, const GLfixed *, v2); \
    HookWrapper1(void, glTexCoord1xOES, GLfixed, s); \
    HookWrapper1(void, glTexCoord1xvOES, const GLfixed *, coords); \
    HookWrapper2(void, glTexCoord2xOES, GLfixed, s, GLfixed, t); \
    HookWrapper1(void, glTexCoord2xvOES, const GLfixed *, coords); \
    HookWrapper3(void, glTexCoord3xOES, GLfixed, s, GLfixed, t, GLfixed, r); \
    HookWrapper1(void, glTexCoord3xvOES, const GLfixed *, coords); \
    HookWrapper4(void, glTexCoord4xOES, GLfixed, s, GLfixed, t, GLfixed, r, GLfixed, q); \
    HookWrapper1(void, glTexCoord4xvOES, const GLfixed *, coords); \
    HookWrapper3(void, glTexGenxOES, GLenum, coord, GLenum, pname, GLfixed, param); \
    HookWrapper3(void, glTexGenxvOES, GLenum, coord, GLenum, pname, const GLfixed *, params); \
    HookWrapper1(void, glVertex2xOES, GLfixed, x); \
    HookWrapper1(void, glVertex2xvOES, const GLfixed *, coords); \
    HookWrapper2(void, glVertex3xOES, GLfixed, x, GLfixed, y); \
    HookWrapper1(void, glVertex3xvOES, const GLfixed *, coords); \
    HookWrapper3(void, glVertex4xOES, GLfixed, x, GLfixed, y, GLfixed, z); \
    HookWrapper1(void, glVertex4xvOES, const GLfixed *, coords); \
    HookWrapper2(GLbitfield, glQueryMatrixxOES, GLfixed *, mantissa, GLint *, exponent); \
    HookWrapper1(void, glClearDepthfOES, GLclampf, depth); \
    HookWrapper2(void, glClipPlanefOES, GLenum, plane, const GLfloat *, equation); \
    HookWrapper2(void, glDepthRangefOES, GLclampf, n, GLclampf, f); \
    HookWrapper6(void, glFrustumfOES, GLfloat, l, GLfloat, r, GLfloat, b, GLfloat, t, GLfloat, n, GLfloat, f); \
    HookWrapper2(void, glGetClipPlanefOES, GLenum, plane, GLfloat *, equation); \
    HookWrapper6(void, glOrthofOES, GLfloat, l, GLfloat, r, GLfloat, b, GLfloat, t, GLfloat, n, GLfloat, f); \
    HookWrapper1(void, glTbufferMask3DFX, GLuint, mask); \
    HookWrapper5(void, glDebugMessageEnableAMD, GLenum, category, GLenum, severity, GLsizei, count, const GLuint *, ids, GLboolean, enabled); \
    HookWrapper5(void, glDebugMessageInsertAMD, GLenum, category, GLenum, severity, GLuint, id, GLsizei, length, const GLchar *, buf); \
    HookWrapper2(void, glDebugMessageCallbackAMD, GLDEBUGPROCAMD, callback, void *, userParam); \
    HookWrapper7(GLuint, glGetDebugMessageLogAMD, GLuint, count, GLsizei, bufsize, GLenum *, categories, GLuint *, severities, GLuint *, ids, GLsizei *, lengths, GLchar *, message); \
    HookWrapper3(void, glBlendFuncIndexedAMD, GLuint, buf, GLenum, src, GLenum, dst); \
    HookWrapper5(void, glBlendFuncSeparateIndexedAMD, GLuint, buf, GLenum, srcRGB, GLenum, dstRGB, GLenum, srcAlpha, GLenum, dstAlpha); \
    HookWrapper2(void, glBlendEquationIndexedAMD, GLuint, buf, GLenum, mode); \
    HookWrapper3(void, glBlendEquationSeparateIndexedAMD, GLuint, buf, GLenum, modeRGB, GLenum, modeAlpha); \
    HookWrapper4(void, glFramebufferSamplePositionsfvAMD, GLenum, target, GLuint, numsamples, GLuint, pixelindex, const GLfloat *, values); \
    HookWrapper4(void, glNamedFramebufferSamplePositionsfvAMD, GLuint, framebuffer, GLuint, numsamples, GLuint, pixelindex, const GLfloat *, values); \
    HookWrapper6(void, glGetFramebufferParameterfvAMD, GLenum, target, GLenum, pname, GLuint, numsamples, GLuint, pixelindex, GLsizei, size, GLfloat *, values); \
    HookWrapper6(void, glGetNamedFramebufferParameterfvAMD, GLuint, framebuffer, GLenum, pname, GLuint, numsamples, GLuint, pixelindex, GLsizei, size, GLfloat *, values); \
    HookWrapper3(void, glVertexAttribParameteriAMD, GLuint, index, GLenum, pname, GLint, param); \
    HookWrapper4(void, glMultiDrawArraysIndirectAMD, GLenum, mode, const void *, indirect, GLsizei, primcount, GLsizei, stride); \
    HookWrapper5(void, glMultiDrawElementsIndirectAMD, GLenum, mode, GLenum, type, const void *, indirect, GLsizei, primcount, GLsizei, stride); \
    HookWrapper3(void, glGenNamesAMD, GLenum, identifier, GLuint, num, GLuint *, names); \
    HookWrapper3(void, glDeleteNamesAMD, GLenum, identifier, GLuint, num, const GLuint *, names); \
    HookWrapper2(GLboolean, glIsNameAMD, GLenum, identifier, GLuint, name); \
    HookWrapper4(void, glQueryObjectParameteruiAMD, GLenum, target, GLuint, id, GLenum, pname, GLuint, param); \
    HookWrapper3(void, glSetMultisamplefvAMD, GLenum, pname, GLuint, index, const GLfloat *, val); \
    HookWrapper7(void, glTexStorageSparseAMD, GLenum, target, GLenum, internalFormat, GLsizei, width, GLsizei, height, GLsizei, depth, GLsizei, layers, GLbitfield, flags); \
    HookWrapper8(void, glTextureStorageSparseAMD, GLuint, texture, GLenum, target, GLenum, internalFormat, GLsizei, width, GLsizei, height, GLsizei, depth, GLsizei, layers, GLbitfield, flags); \
    HookWrapper2(void, glStencilOpValueAMD, GLenum, face, GLuint, value); \
    HookWrapper1(void, glTessellationFactorAMD, GLfloat, factor); \
    HookWrapper1(void, glTessellationModeAMD, GLenum, mode); \
    HookWrapper2(void, glElementPointerAPPLE, GLenum, type, const void *, pointer); \
    HookWrapper3(void, glDrawElementArrayAPPLE, GLenum, mode, GLint, first, GLsizei, count); \
    HookWrapper5(void, glDrawRangeElementArrayAPPLE, GLenum, mode, GLuint, start, GLuint, end, GLint, first, GLsizei, count); \
    HookWrapper4(void, glMultiDrawElementArrayAPPLE, GLenum, mode, const GLint *, first, const GLsizei *, count, GLsizei, primcount); \
    HookWrapper6(void, glMultiDrawRangeElementArrayAPPLE, GLenum, mode, GLuint, start, GLuint, end, const GLint *, first, const GLsizei *, count, GLsizei, primcount); \
    HookWrapper2(void, glGenFencesAPPLE, GLsizei, n, GLuint *, fences); \
    HookWrapper2(void, glDeleteFencesAPPLE, GLsizei, n, const GLuint *, fences); \
    HookWrapper1(void, glSetFenceAPPLE, GLuint, fence); \
    HookWrapper1(GLboolean, glIsFenceAPPLE, GLuint, fence); \
    HookWrapper1(GLboolean, glTestFenceAPPLE, GLuint, fence); \
    HookWrapper1(void, glFinishFenceAPPLE, GLuint, fence); \
    HookWrapper2(GLboolean, glTestObjectAPPLE, GLenum, object, GLuint, name); \
    HookWrapper2(void, glFinishObjectAPPLE, GLenum, object, GLint, name); \
    HookWrapper3(void, glBufferParameteriAPPLE, GLenum, target, GLenum, pname, GLint, param); \
    HookWrapper3(void, glFlushMappedBufferRangeAPPLE, GLenum, target, GLintptr, offset, GLsizeiptr, size); \
    HookWrapper3(GLenum, glObjectPurgeableAPPLE, GLenum, objectType, GLuint, name, GLenum, option); \
    HookWrapper3(GLenum, glObjectUnpurgeableAPPLE, GLenum, objectType, GLuint, name, GLenum, option); \
    HookWrapper4(void, glGetObjectParameterivAPPLE, GLenum, objectType, GLuint, name, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glTextureRangeAPPLE, GLenum, target, GLsizei, length, const void *, pointer); \
    HookWrapper3(void, glGetTexParameterPointervAPPLE, GLenum, target, GLenum, pname, void **, params); \
    HookWrapper1(void, glBindVertexArrayAPPLE, GLuint, array); \
    HookWrapper2(void, glDeleteVertexArraysAPPLE, GLsizei, n, const GLuint *, arrays); \
    HookWrapper2(void, glGenVertexArraysAPPLE, GLsizei, n, GLuint *, arrays); \
    HookWrapper1(GLboolean, glIsVertexArrayAPPLE, GLuint, array); \
    HookWrapper2(void, glVertexArrayRangeAPPLE, GLsizei, length, void *, pointer); \
    HookWrapper2(void, glFlushVertexArrayRangeAPPLE, GLsizei, length, void *, pointer); \
    HookWrapper2(void, glVertexArrayParameteriAPPLE, GLenum, pname, GLint, param); \
    HookWrapper2(void, glEnableVertexAttribAPPLE, GLuint, index, GLenum, pname); \
    HookWrapper2(void, glDisableVertexAttribAPPLE, GLuint, index, GLenum, pname); \
    HookWrapper2(GLboolean, glIsVertexAttribEnabledAPPLE, GLuint, index, GLenum, pname); \
    HookWrapper7(void, glMapVertexAttrib1dAPPLE, GLuint, index, GLuint, size, GLdouble, u1, GLdouble, u2, GLint, stride, GLint, order, const GLdouble *, points); \
    HookWrapper7(void, glMapVertexAttrib1fAPPLE, GLuint, index, GLuint, size, GLfloat, u1, GLfloat, u2, GLint, stride, GLint, order, const GLfloat *, points); \
    HookWrapper11(void, glMapVertexAttrib2dAPPLE, GLuint, index, GLuint, size, GLdouble, u1, GLdouble, u2, GLint, ustride, GLint, uorder, GLdouble, v1, GLdouble, v2, GLint, vstride, GLint, vorder, const GLdouble *, points); \
    HookWrapper11(void, glMapVertexAttrib2fAPPLE, GLuint, index, GLuint, size, GLfloat, u1, GLfloat, u2, GLint, ustride, GLint, uorder, GLfloat, v1, GLfloat, v2, GLint, vstride, GLint, vorder, const GLfloat *, points); \
    HookWrapper2(void, glDrawBuffersATI, GLsizei, n, const GLenum *, bufs); \
    HookWrapper2(void, glElementPointerATI, GLenum, type, const void *, pointer); \
    HookWrapper2(void, glDrawElementArrayATI, GLenum, mode, GLsizei, count); \
    HookWrapper4(void, glDrawRangeElementArrayATI, GLenum, mode, GLuint, start, GLuint, end, GLsizei, count); \
    HookWrapper2(void, glTexBumpParameterivATI, GLenum, pname, const GLint *, param); \
    HookWrapper2(void, glTexBumpParameterfvATI, GLenum, pname, const GLfloat *, param); \
    HookWrapper2(void, glGetTexBumpParameterivATI, GLenum, pname, GLint *, param); \
    HookWrapper2(void, glGetTexBumpParameterfvATI, GLenum, pname, GLfloat *, param); \
    HookWrapper1(GLuint, glGenFragmentShadersATI, GLuint, range); \
    HookWrapper1(void, glBindFragmentShaderATI, GLuint, id); \
    HookWrapper1(void, glDeleteFragmentShaderATI, GLuint, id); \
    HookWrapper0(void, glBeginFragmentShaderATI); \
    HookWrapper0(void, glEndFragmentShaderATI); \
    HookWrapper3(void, glPassTexCoordATI, GLuint, dst, GLuint, coord, GLenum, swizzle); \
    HookWrapper3(void, glSampleMapATI, GLuint, dst, GLuint, interp, GLenum, swizzle); \
    HookWrapper7(void, glColorFragmentOp1ATI, GLenum, op, GLuint, dst, GLuint, dstMask, GLuint, dstMod, GLuint, arg1, GLuint, arg1Rep, GLuint, arg1Mod); \
    HookWrapper10(void, glColorFragmentOp2ATI, GLenum, op, GLuint, dst, GLuint, dstMask, GLuint, dstMod, GLuint, arg1, GLuint, arg1Rep, GLuint, arg1Mod, GLuint, arg2, GLuint, arg2Rep, GLuint, arg2Mod); \
    HookWrapper13(void, glColorFragmentOp3ATI, GLenum, op, GLuint, dst, GLuint, dstMask, GLuint, dstMod, GLuint, arg1, GLuint, arg1Rep, GLuint, arg1Mod, GLuint, arg2, GLuint, arg2Rep, GLuint, arg2Mod, GLuint, arg3, GLuint, arg3Rep, GLuint, arg3Mod); \
    HookWrapper6(void, glAlphaFragmentOp1ATI, GLenum, op, GLuint, dst, GLuint, dstMod, GLuint, arg1, GLuint, arg1Rep, GLuint, arg1Mod); \
    HookWrapper9(void, glAlphaFragmentOp2ATI, GLenum, op, GLuint, dst, GLuint, dstMod, GLuint, arg1, GLuint, arg1Rep, GLuint, arg1Mod, GLuint, arg2, GLuint, arg2Rep, GLuint, arg2Mod); \
    HookWrapper12(void, glAlphaFragmentOp3ATI, GLenum, op, GLuint, dst, GLuint, dstMod, GLuint, arg1, GLuint, arg1Rep, GLuint, arg1Mod, GLuint, arg2, GLuint, arg2Rep, GLuint, arg2Mod, GLuint, arg3, GLuint, arg3Rep, GLuint, arg3Mod); \
    HookWrapper2(void, glSetFragmentShaderConstantATI, GLuint, dst, const GLfloat *, value); \
    HookWrapper1(void *, glMapObjectBufferATI, GLuint, buffer); \
    HookWrapper1(void, glUnmapObjectBufferATI, GLuint, buffer); \
    HookWrapper2(void, glPNTrianglesiATI, GLenum, pname, GLint, param); \
    HookWrapper2(void, glPNTrianglesfATI, GLenum, pname, GLfloat, param); \
    HookWrapper4(void, glStencilOpSeparateATI, GLenum, face, GLenum, sfail, GLenum, dpfail, GLenum, dppass); \
    HookWrapper4(void, glStencilFuncSeparateATI, GLenum, frontfunc, GLenum, backfunc, GLint, ref, GLuint, mask); \
    HookWrapper3(GLuint, glNewObjectBufferATI, GLsizei, size, const void *, pointer, GLenum, usage); \
    HookWrapper1(GLboolean, glIsObjectBufferATI, GLuint, buffer); \
    HookWrapper5(void, glUpdateObjectBufferATI, GLuint, buffer, GLuint, offset, GLsizei, size, const void *, pointer, GLenum, preserve); \
    HookWrapper3(void, glGetObjectBufferfvATI, GLuint, buffer, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetObjectBufferivATI, GLuint, buffer, GLenum, pname, GLint *, params); \
    HookWrapper1(void, glFreeObjectBufferATI, GLuint, buffer); \
    HookWrapper6(void, glArrayObjectATI, GLenum, array, GLint, size, GLenum, type, GLsizei, stride, GLuint, buffer, GLuint, offset); \
    HookWrapper3(void, glGetArrayObjectfvATI, GLenum, array, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetArrayObjectivATI, GLenum, array, GLenum, pname, GLint *, params); \
    HookWrapper5(void, glVariantArrayObjectATI, GLuint, id, GLenum, type, GLsizei, stride, GLuint, buffer, GLuint, offset); \
    HookWrapper3(void, glGetVariantArrayObjectfvATI, GLuint, id, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetVariantArrayObjectivATI, GLuint, id, GLenum, pname, GLint *, params); \
    HookWrapper7(void, glVertexAttribArrayObjectATI, GLuint, index, GLint, size, GLenum, type, GLboolean, normalized, GLsizei, stride, GLuint, buffer, GLuint, offset); \
    HookWrapper3(void, glGetVertexAttribArrayObjectfvATI, GLuint, index, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetVertexAttribArrayObjectivATI, GLuint, index, GLenum, pname, GLint *, params); \
    HookWrapper2(void, glVertexStream1sATI, GLenum, stream, GLshort, x); \
    HookWrapper2(void, glVertexStream1svATI, GLenum, stream, const GLshort *, coords); \
    HookWrapper2(void, glVertexStream1iATI, GLenum, stream, GLint, x); \
    HookWrapper2(void, glVertexStream1ivATI, GLenum, stream, const GLint *, coords); \
    HookWrapper2(void, glVertexStream1fATI, GLenum, stream, GLfloat, x); \
    HookWrapper2(void, glVertexStream1fvATI, GLenum, stream, const GLfloat *, coords); \
    HookWrapper2(void, glVertexStream1dATI, GLenum, stream, GLdouble, x); \
    HookWrapper2(void, glVertexStream1dvATI, GLenum, stream, const GLdouble *, coords); \
    HookWrapper3(void, glVertexStream2sATI, GLenum, stream, GLshort, x, GLshort, y); \
    HookWrapper2(void, glVertexStream2svATI, GLenum, stream, const GLshort *, coords); \
    HookWrapper3(void, glVertexStream2iATI, GLenum, stream, GLint, x, GLint, y); \
    HookWrapper2(void, glVertexStream2ivATI, GLenum, stream, const GLint *, coords); \
    HookWrapper3(void, glVertexStream2fATI, GLenum, stream, GLfloat, x, GLfloat, y); \
    HookWrapper2(void, glVertexStream2fvATI, GLenum, stream, const GLfloat *, coords); \
    HookWrapper3(void, glVertexStream2dATI, GLenum, stream, GLdouble, x, GLdouble, y); \
    HookWrapper2(void, glVertexStream2dvATI, GLenum, stream, const GLdouble *, coords); \
    HookWrapper4(void, glVertexStream3sATI, GLenum, stream, GLshort, x, GLshort, y, GLshort, z); \
    HookWrapper2(void, glVertexStream3svATI, GLenum, stream, const GLshort *, coords); \
    HookWrapper4(void, glVertexStream3iATI, GLenum, stream, GLint, x, GLint, y, GLint, z); \
    HookWrapper2(void, glVertexStream3ivATI, GLenum, stream, const GLint *, coords); \
    HookWrapper4(void, glVertexStream3fATI, GLenum, stream, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper2(void, glVertexStream3fvATI, GLenum, stream, const GLfloat *, coords); \
    HookWrapper4(void, glVertexStream3dATI, GLenum, stream, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper2(void, glVertexStream3dvATI, GLenum, stream, const GLdouble *, coords); \
    HookWrapper5(void, glVertexStream4sATI, GLenum, stream, GLshort, x, GLshort, y, GLshort, z, GLshort, w); \
    HookWrapper2(void, glVertexStream4svATI, GLenum, stream, const GLshort *, coords); \
    HookWrapper5(void, glVertexStream4iATI, GLenum, stream, GLint, x, GLint, y, GLint, z, GLint, w); \
    HookWrapper2(void, glVertexStream4ivATI, GLenum, stream, const GLint *, coords); \
    HookWrapper5(void, glVertexStream4fATI, GLenum, stream, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookWrapper2(void, glVertexStream4fvATI, GLenum, stream, const GLfloat *, coords); \
    HookWrapper5(void, glVertexStream4dATI, GLenum, stream, GLdouble, x, GLdouble, y, GLdouble, z, GLdouble, w); \
    HookWrapper2(void, glVertexStream4dvATI, GLenum, stream, const GLdouble *, coords); \
    HookWrapper4(void, glNormalStream3bATI, GLenum, stream, GLbyte, nx, GLbyte, ny, GLbyte, nz); \
    HookWrapper2(void, glNormalStream3bvATI, GLenum, stream, const GLbyte *, coords); \
    HookWrapper4(void, glNormalStream3sATI, GLenum, stream, GLshort, nx, GLshort, ny, GLshort, nz); \
    HookWrapper2(void, glNormalStream3svATI, GLenum, stream, const GLshort *, coords); \
    HookWrapper4(void, glNormalStream3iATI, GLenum, stream, GLint, nx, GLint, ny, GLint, nz); \
    HookWrapper2(void, glNormalStream3ivATI, GLenum, stream, const GLint *, coords); \
    HookWrapper4(void, glNormalStream3fATI, GLenum, stream, GLfloat, nx, GLfloat, ny, GLfloat, nz); \
    HookWrapper2(void, glNormalStream3fvATI, GLenum, stream, const GLfloat *, coords); \
    HookWrapper4(void, glNormalStream3dATI, GLenum, stream, GLdouble, nx, GLdouble, ny, GLdouble, nz); \
    HookWrapper2(void, glNormalStream3dvATI, GLenum, stream, const GLdouble *, coords); \
    HookWrapper1(void, glClientActiveVertexStreamATI, GLenum, stream); \
    HookWrapper2(void, glVertexBlendEnviATI, GLenum, pname, GLint, param); \
    HookWrapper2(void, glVertexBlendEnvfATI, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, glUniformBufferEXT, GLuint, program, GLint, location, GLuint, buffer); \
    HookWrapper2(GLint, glGetUniformBufferSizeEXT, GLuint, program, GLint, location); \
    HookWrapper2(GLintptr, glGetUniformOffsetEXT, GLuint, program, GLint, location); \
    HookWrapper4(void, glBlendFuncSeparateEXT, GLenum, sfactorRGB, GLenum, dfactorRGB, GLenum, sfactorAlpha, GLenum, dfactorAlpha); \
    HookWrapper6(void, glColorSubTableEXT, GLenum, target, GLsizei, start, GLsizei, count, GLenum, format, GLenum, type, const void *, data); \
    HookWrapper5(void, glCopyColorSubTableEXT, GLenum, target, GLsizei, start, GLint, x, GLint, y, GLsizei, width); \
    HookWrapper2(void, glLockArraysEXT, GLint, first, GLsizei, count); \
    HookWrapper0(void, glUnlockArraysEXT); \
    HookWrapper6(void, glConvolutionFilter1DEXT, GLenum, target, GLenum, internalformat, GLsizei, width, GLenum, format, GLenum, type, const void *, image); \
    HookWrapper7(void, glConvolutionFilter2DEXT, GLenum, target, GLenum, internalformat, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, const void *, image); \
    HookWrapper3(void, glConvolutionParameterfEXT, GLenum, target, GLenum, pname, GLfloat, params); \
    HookWrapper3(void, glConvolutionParameterfvEXT, GLenum, target, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glConvolutionParameteriEXT, GLenum, target, GLenum, pname, GLint, params); \
    HookWrapper3(void, glConvolutionParameterivEXT, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper5(void, glCopyConvolutionFilter1DEXT, GLenum, target, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width); \
    HookWrapper6(void, glCopyConvolutionFilter2DEXT, GLenum, target, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper4(void, glGetConvolutionFilterEXT, GLenum, target, GLenum, format, GLenum, type, void *, image); \
    HookWrapper3(void, glGetConvolutionParameterfvEXT, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetConvolutionParameterivEXT, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper6(void, glGetSeparableFilterEXT, GLenum, target, GLenum, format, GLenum, type, void *, row, void *, column, void *, span); \
    HookWrapper8(void, glSeparableFilter2DEXT, GLenum, target, GLenum, internalformat, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, const void *, row, const void *, column); \
    HookWrapper3(void, glTangent3bEXT, GLbyte, tx, GLbyte, ty, GLbyte, tz); \
    HookWrapper1(void, glTangent3bvEXT, const GLbyte *, v); \
    HookWrapper3(void, glTangent3dEXT, GLdouble, tx, GLdouble, ty, GLdouble, tz); \
    HookWrapper1(void, glTangent3dvEXT, const GLdouble *, v); \
    HookWrapper3(void, glTangent3fEXT, GLfloat, tx, GLfloat, ty, GLfloat, tz); \
    HookWrapper1(void, glTangent3fvEXT, const GLfloat *, v); \
    HookWrapper3(void, glTangent3iEXT, GLint, tx, GLint, ty, GLint, tz); \
    HookWrapper1(void, glTangent3ivEXT, const GLint *, v); \
    HookWrapper3(void, glTangent3sEXT, GLshort, tx, GLshort, ty, GLshort, tz); \
    HookWrapper1(void, glTangent3svEXT, const GLshort *, v); \
    HookWrapper3(void, glBinormal3bEXT, GLbyte, bx, GLbyte, by, GLbyte, bz); \
    HookWrapper1(void, glBinormal3bvEXT, const GLbyte *, v); \
    HookWrapper3(void, glBinormal3dEXT, GLdouble, bx, GLdouble, by, GLdouble, bz); \
    HookWrapper1(void, glBinormal3dvEXT, const GLdouble *, v); \
    HookWrapper3(void, glBinormal3fEXT, GLfloat, bx, GLfloat, by, GLfloat, bz); \
    HookWrapper1(void, glBinormal3fvEXT, const GLfloat *, v); \
    HookWrapper3(void, glBinormal3iEXT, GLint, bx, GLint, by, GLint, bz); \
    HookWrapper1(void, glBinormal3ivEXT, const GLint *, v); \
    HookWrapper3(void, glBinormal3sEXT, GLshort, bx, GLshort, by, GLshort, bz); \
    HookWrapper1(void, glBinormal3svEXT, const GLshort *, v); \
    HookWrapper3(void, glTangentPointerEXT, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper3(void, glBinormalPointerEXT, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper7(void, glCopyTexImage1DEXT, GLenum, target, GLint, level, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width, GLint, border); \
    HookWrapper8(void, glCopyTexImage2DEXT, GLenum, target, GLint, level, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLint, border); \
    HookWrapper6(void, glCopyTexSubImage1DEXT, GLenum, target, GLint, level, GLint, xoffset, GLint, x, GLint, y, GLsizei, width); \
    HookWrapper8(void, glCopyTexSubImage2DEXT, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper9(void, glCopyTexSubImage3DEXT, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLint, x, GLint, y, GLsizei, width, GLsizei, height); \
    HookWrapper2(void, glCullParameterdvEXT, GLenum, pname, GLdouble *, params); \
    HookWrapper2(void, glCullParameterfvEXT, GLenum, pname, GLfloat *, params); \
    HookWrapper5(void, glBufferStorageExternalEXT, GLenum, target, GLintptr, offset, GLsizeiptr, size, GLeglClientBufferEXT, clientBuffer, GLbitfield, flags); \
    HookWrapper5(void, glNamedBufferStorageExternalEXT, GLuint, buffer, GLintptr, offset, GLsizeiptr, size, GLeglClientBufferEXT, clientBuffer, GLbitfield, flags); \
    HookWrapper1(void, glFogCoordfEXT, GLfloat, coord); \
    HookWrapper1(void, glFogCoordfvEXT, const GLfloat *, coord); \
    HookWrapper1(void, glFogCoorddEXT, GLdouble, coord); \
    HookWrapper1(void, glFogCoorddvEXT, const GLdouble *, coord); \
    HookWrapper3(void, glFogCoordPointerEXT, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper4(void, glProgramEnvParameters4fvEXT, GLenum, target, GLuint, index, GLsizei, count, const GLfloat *, params); \
    HookWrapper4(void, glProgramLocalParameters4fvEXT, GLenum, target, GLuint, index, GLsizei, count, const GLfloat *, params); \
    HookWrapper5(void, glGetHistogramEXT, GLenum, target, GLboolean, reset, GLenum, format, GLenum, type, void *, values); \
    HookWrapper3(void, glGetHistogramParameterfvEXT, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetHistogramParameterivEXT, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper5(void, glGetMinmaxEXT, GLenum, target, GLboolean, reset, GLenum, format, GLenum, type, void *, values); \
    HookWrapper3(void, glGetMinmaxParameterfvEXT, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetMinmaxParameterivEXT, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glHistogramEXT, GLenum, target, GLsizei, width, GLenum, internalformat, GLboolean, sink); \
    HookWrapper3(void, glMinmaxEXT, GLenum, target, GLenum, internalformat, GLboolean, sink); \
    HookWrapper1(void, glResetHistogramEXT, GLenum, target); \
    HookWrapper1(void, glResetMinmaxEXT, GLenum, target); \
    HookWrapper2(void, glIndexFuncEXT, GLenum, func, GLclampf, ref); \
    HookWrapper2(void, glIndexMaterialEXT, GLenum, face, GLenum, mode); \
    HookWrapper1(void, glApplyTextureEXT, GLenum, mode); \
    HookWrapper1(void, glTextureLightEXT, GLenum, pname); \
    HookWrapper2(void, glTextureMaterialEXT, GLenum, face, GLenum, mode); \
    HookWrapper2(void, glGetUnsignedBytevEXT, GLenum, pname, GLubyte *, data); \
    HookWrapper3(void, glGetUnsignedBytei_vEXT, GLenum, target, GLuint, index, GLubyte *, data); \
    HookWrapper2(void, glDeleteMemoryObjectsEXT, GLsizei, n, const GLuint *, memoryObjects); \
    HookWrapper1(GLboolean, glIsMemoryObjectEXT, GLuint, memoryObject); \
    HookWrapper2(void, glCreateMemoryObjectsEXT, GLsizei, n, GLuint *, memoryObjects); \
    HookWrapper3(void, glMemoryObjectParameterivEXT, GLuint, memoryObject, GLenum, pname, const GLint *, params); \
    HookWrapper3(void, glGetMemoryObjectParameterivEXT, GLuint, memoryObject, GLenum, pname, GLint *, params); \
    HookWrapper7(void, glTexStorageMem2DEXT, GLenum, target, GLsizei, levels, GLenum, internalFormat, GLsizei, width, GLsizei, height, GLuint, memory, GLuint64, offset); \
    HookWrapper8(void, glTexStorageMem2DMultisampleEXT, GLenum, target, GLsizei, samples, GLenum, internalFormat, GLsizei, width, GLsizei, height, GLboolean, fixedSampleLocations, GLuint, memory, GLuint64, offset); \
    HookWrapper8(void, glTexStorageMem3DEXT, GLenum, target, GLsizei, levels, GLenum, internalFormat, GLsizei, width, GLsizei, height, GLsizei, depth, GLuint, memory, GLuint64, offset); \
    HookWrapper9(void, glTexStorageMem3DMultisampleEXT, GLenum, target, GLsizei, samples, GLenum, internalFormat, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, fixedSampleLocations, GLuint, memory, GLuint64, offset); \
    HookWrapper4(void, glBufferStorageMemEXT, GLenum, target, GLsizeiptr, size, GLuint, memory, GLuint64, offset); \
    HookWrapper7(void, glTextureStorageMem2DEXT, GLuint, texture, GLsizei, levels, GLenum, internalFormat, GLsizei, width, GLsizei, height, GLuint, memory, GLuint64, offset); \
    HookWrapper8(void, glTextureStorageMem2DMultisampleEXT, GLuint, texture, GLsizei, samples, GLenum, internalFormat, GLsizei, width, GLsizei, height, GLboolean, fixedSampleLocations, GLuint, memory, GLuint64, offset); \
    HookWrapper8(void, glTextureStorageMem3DEXT, GLuint, texture, GLsizei, levels, GLenum, internalFormat, GLsizei, width, GLsizei, height, GLsizei, depth, GLuint, memory, GLuint64, offset); \
    HookWrapper9(void, glTextureStorageMem3DMultisampleEXT, GLuint, texture, GLsizei, samples, GLenum, internalFormat, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, fixedSampleLocations, GLuint, memory, GLuint64, offset); \
    HookWrapper4(void, glNamedBufferStorageMemEXT, GLuint, buffer, GLsizeiptr, size, GLuint, memory, GLuint64, offset); \
    HookWrapper6(void, glTexStorageMem1DEXT, GLenum, target, GLsizei, levels, GLenum, internalFormat, GLsizei, width, GLuint, memory, GLuint64, offset); \
    HookWrapper6(void, glTextureStorageMem1DEXT, GLuint, texture, GLsizei, levels, GLenum, internalFormat, GLsizei, width, GLuint, memory, GLuint64, offset); \
    HookWrapper4(void, glImportMemoryFdEXT, GLuint, memory, GLuint64, size, GLenum, handleType, GLint, fd); \
    HookWrapper4(void, glImportMemoryWin32HandleEXT, GLuint, memory, GLuint64, size, GLenum, handleType, void *, handle); \
    HookWrapper4(void, glImportMemoryWin32NameEXT, GLuint, memory, GLuint64, size, GLenum, handleType, const void *, name); \
    HookWrapper5(void, glMultiDrawElementsEXT, GLenum, mode, const GLsizei *, count, GLenum, type, const void *const*, indices, GLsizei, primcount); \
    HookWrapper2(void, glSampleMaskEXT, GLclampf, value, GLboolean, invert); \
    HookWrapper1(void, glSamplePatternEXT, GLenum, pattern); \
    HookWrapper6(void, glColorTableEXT, GLenum, target, GLenum, internalFormat, GLsizei, width, GLenum, format, GLenum, type, const void *, table); \
    HookWrapper4(void, glGetColorTableEXT, GLenum, target, GLenum, format, GLenum, type, void *, data); \
    HookWrapper3(void, glGetColorTableParameterivEXT, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetColorTableParameterfvEXT, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glPixelTransformParameteriEXT, GLenum, target, GLenum, pname, GLint, param); \
    HookWrapper3(void, glPixelTransformParameterfEXT, GLenum, target, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, glPixelTransformParameterivEXT, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper3(void, glPixelTransformParameterfvEXT, GLenum, target, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glGetPixelTransformParameterivEXT, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetPixelTransformParameterfvEXT, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper2(void, glPolygonOffsetEXT, GLfloat, factor, GLfloat, bias); \
    HookWrapper3(void, glSecondaryColor3bEXT, GLbyte, red, GLbyte, green, GLbyte, blue); \
    HookWrapper1(void, glSecondaryColor3bvEXT, const GLbyte *, v); \
    HookWrapper3(void, glSecondaryColor3dEXT, GLdouble, red, GLdouble, green, GLdouble, blue); \
    HookWrapper1(void, glSecondaryColor3dvEXT, const GLdouble *, v); \
    HookWrapper3(void, glSecondaryColor3fEXT, GLfloat, red, GLfloat, green, GLfloat, blue); \
    HookWrapper1(void, glSecondaryColor3fvEXT, const GLfloat *, v); \
    HookWrapper3(void, glSecondaryColor3iEXT, GLint, red, GLint, green, GLint, blue); \
    HookWrapper1(void, glSecondaryColor3ivEXT, const GLint *, v); \
    HookWrapper3(void, glSecondaryColor3sEXT, GLshort, red, GLshort, green, GLshort, blue); \
    HookWrapper1(void, glSecondaryColor3svEXT, const GLshort *, v); \
    HookWrapper3(void, glSecondaryColor3ubEXT, GLubyte, red, GLubyte, green, GLubyte, blue); \
    HookWrapper1(void, glSecondaryColor3ubvEXT, const GLubyte *, v); \
    HookWrapper3(void, glSecondaryColor3uiEXT, GLuint, red, GLuint, green, GLuint, blue); \
    HookWrapper1(void, glSecondaryColor3uivEXT, const GLuint *, v); \
    HookWrapper3(void, glSecondaryColor3usEXT, GLushort, red, GLushort, green, GLushort, blue); \
    HookWrapper1(void, glSecondaryColor3usvEXT, const GLushort *, v); \
    HookWrapper4(void, glSecondaryColorPointerEXT, GLint, size, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper2(void, glGenSemaphoresEXT, GLsizei, n, GLuint *, semaphores); \
    HookWrapper2(void, glDeleteSemaphoresEXT, GLsizei, n, const GLuint *, semaphores); \
    HookWrapper1(GLboolean, glIsSemaphoreEXT, GLuint, semaphore); \
    HookWrapper3(void, glSemaphoreParameterui64vEXT, GLuint, semaphore, GLenum, pname, const GLuint64 *, params); \
    HookWrapper3(void, glGetSemaphoreParameterui64vEXT, GLuint, semaphore, GLenum, pname, GLuint64 *, params); \
    HookWrapper6(void, glWaitSemaphoreEXT, GLuint, semaphore, GLuint, numBufferBarriers, const GLuint *, buffers, GLuint, numTextureBarriers, const GLuint *, textures, const GLenum *, srcLayouts); \
    HookWrapper6(void, glSignalSemaphoreEXT, GLuint, semaphore, GLuint, numBufferBarriers, const GLuint *, buffers, GLuint, numTextureBarriers, const GLuint *, textures, const GLenum *, dstLayouts); \
    HookWrapper3(void, glImportSemaphoreFdEXT, GLuint, semaphore, GLenum, handleType, GLint, fd); \
    HookWrapper3(void, glImportSemaphoreWin32HandleEXT, GLuint, semaphore, GLenum, handleType, void *, handle); \
    HookWrapper3(void, glImportSemaphoreWin32NameEXT, GLuint, semaphore, GLenum, handleType, const void *, name); \
    HookWrapper2(void, glStencilClearTagEXT, GLsizei, stencilTagBits, GLuint, stencilClearTag); \
    HookWrapper1(void, glActiveStencilFaceEXT, GLenum, face); \
    HookWrapper7(void, glTexSubImage1DEXT, GLenum, target, GLint, level, GLint, xoffset, GLsizei, width, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper9(void, glTexSubImage2DEXT, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper11(void, glTexSubImage3DEXT, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper4(void, glClearColorIiEXT, GLint, red, GLint, green, GLint, blue, GLint, alpha); \
    HookWrapper4(void, glClearColorIuiEXT, GLuint, red, GLuint, green, GLuint, blue, GLuint, alpha); \
    HookWrapper3(GLboolean, glAreTexturesResidentEXT, GLsizei, n, const GLuint *, textures, GLboolean *, residences); \
    HookWrapper2(void, glBindTextureEXT, GLenum, target, GLuint, texture); \
    HookWrapper2(void, glDeleteTexturesEXT, GLsizei, n, const GLuint *, textures); \
    HookWrapper2(void, glGenTexturesEXT, GLsizei, n, GLuint *, textures); \
    HookWrapper1(GLboolean, glIsTextureEXT, GLuint, texture); \
    HookWrapper3(void, glPrioritizeTexturesEXT, GLsizei, n, const GLuint *, textures, const GLclampf *, priorities); \
    HookWrapper1(void, glTextureNormalEXT, GLenum, mode); \
    HookWrapper4(void, glBindBufferOffsetEXT, GLenum, target, GLuint, index, GLuint, buffer, GLintptr, offset); \
    HookWrapper1(void, glArrayElementEXT, GLint, i); \
    HookWrapper5(void, glColorPointerEXT, GLint, size, GLenum, type, GLsizei, stride, GLsizei, count, const void *, pointer); \
    HookWrapper3(void, glDrawArraysEXT, GLenum, mode, GLint, first, GLsizei, count); \
    HookWrapper3(void, glEdgeFlagPointerEXT, GLsizei, stride, GLsizei, count, const GLboolean *, pointer); \
    HookWrapper2(void, glGetPointervEXT, GLenum, pname, void **, params); \
    HookWrapper4(void, glIndexPointerEXT, GLenum, type, GLsizei, stride, GLsizei, count, const void *, pointer); \
    HookWrapper4(void, glNormalPointerEXT, GLenum, type, GLsizei, stride, GLsizei, count, const void *, pointer); \
    HookWrapper5(void, glTexCoordPointerEXT, GLint, size, GLenum, type, GLsizei, stride, GLsizei, count, const void *, pointer); \
    HookWrapper5(void, glVertexPointerEXT, GLint, size, GLenum, type, GLsizei, stride, GLsizei, count, const void *, pointer); \
    HookWrapper0(void, glBeginVertexShaderEXT); \
    HookWrapper0(void, glEndVertexShaderEXT); \
    HookWrapper1(void, glBindVertexShaderEXT, GLuint, id); \
    HookWrapper1(GLuint, glGenVertexShadersEXT, GLuint, range); \
    HookWrapper1(void, glDeleteVertexShaderEXT, GLuint, id); \
    HookWrapper3(void, glShaderOp1EXT, GLenum, op, GLuint, res, GLuint, arg1); \
    HookWrapper4(void, glShaderOp2EXT, GLenum, op, GLuint, res, GLuint, arg1, GLuint, arg2); \
    HookWrapper5(void, glShaderOp3EXT, GLenum, op, GLuint, res, GLuint, arg1, GLuint, arg2, GLuint, arg3); \
    HookWrapper6(void, glSwizzleEXT, GLuint, res, GLuint, in, GLenum, outX, GLenum, outY, GLenum, outZ, GLenum, outW); \
    HookWrapper6(void, glWriteMaskEXT, GLuint, res, GLuint, in, GLenum, outX, GLenum, outY, GLenum, outZ, GLenum, outW); \
    HookWrapper3(void, glInsertComponentEXT, GLuint, res, GLuint, src, GLuint, num); \
    HookWrapper3(void, glExtractComponentEXT, GLuint, res, GLuint, src, GLuint, num); \
    HookWrapper4(GLuint, glGenSymbolsEXT, GLenum, datatype, GLenum, storagetype, GLenum, range, GLuint, components); \
    HookWrapper3(void, glSetInvariantEXT, GLuint, id, GLenum, type, const void *, addr); \
    HookWrapper3(void, glSetLocalConstantEXT, GLuint, id, GLenum, type, const void *, addr); \
    HookWrapper2(void, glVariantbvEXT, GLuint, id, const GLbyte *, addr); \
    HookWrapper2(void, glVariantsvEXT, GLuint, id, const GLshort *, addr); \
    HookWrapper2(void, glVariantivEXT, GLuint, id, const GLint *, addr); \
    HookWrapper2(void, glVariantfvEXT, GLuint, id, const GLfloat *, addr); \
    HookWrapper2(void, glVariantdvEXT, GLuint, id, const GLdouble *, addr); \
    HookWrapper2(void, glVariantubvEXT, GLuint, id, const GLubyte *, addr); \
    HookWrapper2(void, glVariantusvEXT, GLuint, id, const GLushort *, addr); \
    HookWrapper2(void, glVariantuivEXT, GLuint, id, const GLuint *, addr); \
    HookWrapper4(void, glVariantPointerEXT, GLuint, id, GLenum, type, GLuint, stride, const void *, addr); \
    HookWrapper1(void, glEnableVariantClientStateEXT, GLuint, id); \
    HookWrapper1(void, glDisableVariantClientStateEXT, GLuint, id); \
    HookWrapper2(GLuint, glBindLightParameterEXT, GLenum, light, GLenum, value); \
    HookWrapper2(GLuint, glBindMaterialParameterEXT, GLenum, face, GLenum, value); \
    HookWrapper3(GLuint, glBindTexGenParameterEXT, GLenum, unit, GLenum, coord, GLenum, value); \
    HookWrapper2(GLuint, glBindTextureUnitParameterEXT, GLenum, unit, GLenum, value); \
    HookWrapper1(GLuint, glBindParameterEXT, GLenum, value); \
    HookWrapper2(GLboolean, glIsVariantEnabledEXT, GLuint, id, GLenum, cap); \
    HookWrapper3(void, glGetVariantBooleanvEXT, GLuint, id, GLenum, value, GLboolean *, data); \
    HookWrapper3(void, glGetVariantIntegervEXT, GLuint, id, GLenum, value, GLint *, data); \
    HookWrapper3(void, glGetVariantFloatvEXT, GLuint, id, GLenum, value, GLfloat *, data); \
    HookWrapper3(void, glGetVariantPointervEXT, GLuint, id, GLenum, value, void **, data); \
    HookWrapper3(void, glGetInvariantBooleanvEXT, GLuint, id, GLenum, value, GLboolean *, data); \
    HookWrapper3(void, glGetInvariantIntegervEXT, GLuint, id, GLenum, value, GLint *, data); \
    HookWrapper3(void, glGetInvariantFloatvEXT, GLuint, id, GLenum, value, GLfloat *, data); \
    HookWrapper3(void, glGetLocalConstantBooleanvEXT, GLuint, id, GLenum, value, GLboolean *, data); \
    HookWrapper3(void, glGetLocalConstantIntegervEXT, GLuint, id, GLenum, value, GLint *, data); \
    HookWrapper3(void, glGetLocalConstantFloatvEXT, GLuint, id, GLenum, value, GLfloat *, data); \
    HookWrapper1(void, glVertexWeightfEXT, GLfloat, weight); \
    HookWrapper1(void, glVertexWeightfvEXT, const GLfloat *, weight); \
    HookWrapper4(void, glVertexWeightPointerEXT, GLint, size, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper3(GLboolean, glAcquireKeyedMutexWin32EXT, GLuint, memory, GLuint64, key, GLuint, timeout); \
    HookWrapper2(GLboolean, glReleaseKeyedMutexWin32EXT, GLuint, memory, GLuint64, key); \
    HookWrapper3(GLsync, glImportSyncEXT, GLenum, external_sync_type, GLintptr, external_sync, GLbitfield, flags); \
    HookWrapper3(void, glImageTransformParameteriHP, GLenum, target, GLenum, pname, GLint, param); \
    HookWrapper3(void, glImageTransformParameterfHP, GLenum, target, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, glImageTransformParameterivHP, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper3(void, glImageTransformParameterfvHP, GLenum, target, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glGetImageTransformParameterivHP, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetImageTransformParameterfvHP, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper5(void, glMultiModeDrawArraysIBM, const GLenum *, mode, const GLint *, first, const GLsizei *, count, GLsizei, primcount, GLint, modestride); \
    HookWrapper6(void, glMultiModeDrawElementsIBM, const GLenum *, mode, const GLsizei *, count, GLenum, type, const void *const*, indices, GLsizei, primcount, GLint, modestride); \
    HookWrapper1(void, glFlushStaticDataIBM, GLenum, target); \
    HookWrapper5(void, glColorPointerListIBM, GLint, size, GLenum, type, GLint, stride, const void **, pointer, GLint, ptrstride); \
    HookWrapper5(void, glSecondaryColorPointerListIBM, GLint, size, GLenum, type, GLint, stride, const void **, pointer, GLint, ptrstride); \
    HookWrapper3(void, glEdgeFlagPointerListIBM, GLint, stride, const GLboolean **, pointer, GLint, ptrstride); \
    HookWrapper4(void, glFogCoordPointerListIBM, GLenum, type, GLint, stride, const void **, pointer, GLint, ptrstride); \
    HookWrapper4(void, glIndexPointerListIBM, GLenum, type, GLint, stride, const void **, pointer, GLint, ptrstride); \
    HookWrapper4(void, glNormalPointerListIBM, GLenum, type, GLint, stride, const void **, pointer, GLint, ptrstride); \
    HookWrapper5(void, glTexCoordPointerListIBM, GLint, size, GLenum, type, GLint, stride, const void **, pointer, GLint, ptrstride); \
    HookWrapper5(void, glVertexPointerListIBM, GLint, size, GLenum, type, GLint, stride, const void **, pointer, GLint, ptrstride); \
    HookWrapper4(void, glBlendFuncSeparateINGR, GLenum, sfactorRGB, GLenum, dfactorRGB, GLenum, sfactorAlpha, GLenum, dfactorAlpha); \
    HookWrapper1(void, glSyncTextureINTEL, GLuint, texture); \
    HookWrapper2(void, glUnmapTexture2DINTEL, GLuint, texture, GLint, level); \
    HookWrapper5(void *, glMapTexture2DINTEL, GLuint, texture, GLint, level, GLbitfield, access, GLint *, stride, GLenum *, layout); \
    HookWrapper3(void, glVertexPointervINTEL, GLint, size, GLenum, type, const void **, pointer); \
    HookWrapper2(void, glNormalPointervINTEL, GLenum, type, const void **, pointer); \
    HookWrapper3(void, glColorPointervINTEL, GLint, size, GLenum, type, const void **, pointer); \
    HookWrapper3(void, glTexCoordPointervINTEL, GLint, size, GLenum, type, const void **, pointer); \
    HookWrapper0(void, glResizeBuffersMESA); \
    HookWrapper2(void, glWindowPos2dMESA, GLdouble, x, GLdouble, y); \
    HookWrapper1(void, glWindowPos2dvMESA, const GLdouble *, v); \
    HookWrapper2(void, glWindowPos2fMESA, GLfloat, x, GLfloat, y); \
    HookWrapper1(void, glWindowPos2fvMESA, const GLfloat *, v); \
    HookWrapper2(void, glWindowPos2iMESA, GLint, x, GLint, y); \
    HookWrapper1(void, glWindowPos2ivMESA, const GLint *, v); \
    HookWrapper2(void, glWindowPos2sMESA, GLshort, x, GLshort, y); \
    HookWrapper1(void, glWindowPos2svMESA, const GLshort *, v); \
    HookWrapper3(void, glWindowPos3dMESA, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper1(void, glWindowPos3dvMESA, const GLdouble *, v); \
    HookWrapper3(void, glWindowPos3fMESA, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper1(void, glWindowPos3fvMESA, const GLfloat *, v); \
    HookWrapper3(void, glWindowPos3iMESA, GLint, x, GLint, y, GLint, z); \
    HookWrapper1(void, glWindowPos3ivMESA, const GLint *, v); \
    HookWrapper3(void, glWindowPos3sMESA, GLshort, x, GLshort, y, GLshort, z); \
    HookWrapper1(void, glWindowPos3svMESA, const GLshort *, v); \
    HookWrapper4(void, glWindowPos4dMESA, GLdouble, x, GLdouble, y, GLdouble, z, GLdouble, w); \
    HookWrapper1(void, glWindowPos4dvMESA, const GLdouble *, v); \
    HookWrapper4(void, glWindowPos4fMESA, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookWrapper1(void, glWindowPos4fvMESA, const GLfloat *, v); \
    HookWrapper4(void, glWindowPos4iMESA, GLint, x, GLint, y, GLint, z, GLint, w); \
    HookWrapper1(void, glWindowPos4ivMESA, const GLint *, v); \
    HookWrapper4(void, glWindowPos4sMESA, GLshort, x, GLshort, y, GLshort, z, GLshort, w); \
    HookWrapper1(void, glWindowPos4svMESA, const GLshort *, v); \
    HookWrapper1(void, glBeginConditionalRenderNVX, GLuint, id); \
    HookWrapper0(void, glEndConditionalRenderNVX); \
    HookWrapper5(void, glLGPUNamedBufferSubDataNVX, GLbitfield, gpuMask, GLuint, buffer, GLintptr, offset, GLsizeiptr, size, const void *, data); \
    HookWrapper17(void, glLGPUCopyImageSubDataNVX, GLuint, sourceGpu, GLbitfield, destinationGpuMask, GLuint, srcName, GLenum, srcTarget, GLint, srcLevel, GLint, srcX, GLint, srxY, GLint, srcZ, GLuint, dstName, GLenum, dstTarget, GLint, dstLevel, GLint, dstX, GLint, dstY, GLint, dstZ, GLsizei, width, GLsizei, height, GLsizei, depth); \
    HookWrapper0(void, glLGPUInterlockNVX); \
    HookWrapper1(void, glAlphaToCoverageDitherControlNV, GLenum, mode); \
    HookWrapper15(void, glCopyImageSubDataNV, GLuint, srcName, GLenum, srcTarget, GLint, srcLevel, GLint, srcX, GLint, srcY, GLint, srcZ, GLuint, dstName, GLenum, dstTarget, GLint, dstLevel, GLint, dstX, GLint, dstY, GLint, dstZ, GLsizei, width, GLsizei, height, GLsizei, depth); \
    HookWrapper2(void, glDepthRangedNV, GLdouble, zNear, GLdouble, zFar); \
    HookWrapper1(void, glClearDepthdNV, GLdouble, depth); \
    HookWrapper2(void, glDepthBoundsdNV, GLdouble, zmin, GLdouble, zmax); \
    HookWrapper11(void, glDrawTextureNV, GLuint, texture, GLuint, sampler, GLfloat, x0, GLfloat, y0, GLfloat, x1, GLfloat, y1, GLfloat, z, GLfloat, s0, GLfloat, t0, GLfloat, s1, GLfloat, t1); \
    HookWrapper9(void, glMapControlPointsNV, GLenum, target, GLuint, index, GLenum, type, GLsizei, ustride, GLsizei, vstride, GLint, uorder, GLint, vorder, GLboolean, packed, const void *, points); \
    HookWrapper3(void, glMapParameterivNV, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper3(void, glMapParameterfvNV, GLenum, target, GLenum, pname, const GLfloat *, params); \
    HookWrapper7(void, glGetMapControlPointsNV, GLenum, target, GLuint, index, GLenum, type, GLsizei, ustride, GLsizei, vstride, GLboolean, packed, void *, points); \
    HookWrapper3(void, glGetMapParameterivNV, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetMapParameterfvNV, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper4(void, glGetMapAttribParameterivNV, GLenum, target, GLuint, index, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetMapAttribParameterfvNV, GLenum, target, GLuint, index, GLenum, pname, GLfloat *, params); \
    HookWrapper2(void, glEvalMapsNV, GLenum, target, GLenum, mode); \
    HookWrapper3(void, glGetMultisamplefvNV, GLenum, pname, GLuint, index, GLfloat *, val); \
    HookWrapper2(void, glSampleMaskIndexedNV, GLuint, index, GLbitfield, mask); \
    HookWrapper2(void, glTexRenderbufferNV, GLenum, target, GLuint, renderbuffer); \
    HookWrapper2(void, glDeleteFencesNV, GLsizei, n, const GLuint *, fences); \
    HookWrapper2(void, glGenFencesNV, GLsizei, n, GLuint *, fences); \
    HookWrapper1(GLboolean, glIsFenceNV, GLuint, fence); \
    HookWrapper1(GLboolean, glTestFenceNV, GLuint, fence); \
    HookWrapper3(void, glGetFenceivNV, GLuint, fence, GLenum, pname, GLint *, params); \
    HookWrapper1(void, glFinishFenceNV, GLuint, fence); \
    HookWrapper2(void, glSetFenceNV, GLuint, fence, GLenum, condition); \
    HookWrapper7(void, glProgramNamedParameter4fNV, GLuint, id, GLsizei, len, const GLubyte *, name, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookWrapper4(void, glProgramNamedParameter4fvNV, GLuint, id, GLsizei, len, const GLubyte *, name, const GLfloat *, v); \
    HookWrapper7(void, glProgramNamedParameter4dNV, GLuint, id, GLsizei, len, const GLubyte *, name, GLdouble, x, GLdouble, y, GLdouble, z, GLdouble, w); \
    HookWrapper4(void, glProgramNamedParameter4dvNV, GLuint, id, GLsizei, len, const GLubyte *, name, const GLdouble *, v); \
    HookWrapper4(void, glGetProgramNamedParameterfvNV, GLuint, id, GLsizei, len, const GLubyte *, name, GLfloat *, params); \
    HookWrapper4(void, glGetProgramNamedParameterdvNV, GLuint, id, GLsizei, len, const GLubyte *, name, GLdouble *, params); \
    HookWrapper2(void, glProgramVertexLimitNV, GLenum, target, GLint, limit); \
    HookWrapper5(void, glFramebufferTextureFaceEXT, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level, GLenum, face); \
    HookWrapper1(void, glRenderGpuMaskNV, GLbitfield, mask); \
    HookWrapper5(void, glMulticastBufferSubDataNV, GLbitfield, gpuMask, GLuint, buffer, GLintptr, offset, GLsizeiptr, size, const void *, data); \
    HookWrapper7(void, glMulticastCopyBufferSubDataNV, GLuint, readGpu, GLbitfield, writeGpuMask, GLuint, readBuffer, GLuint, writeBuffer, GLintptr, readOffset, GLintptr, writeOffset, GLsizeiptr, size); \
    HookWrapper17(void, glMulticastCopyImageSubDataNV, GLuint, srcGpu, GLbitfield, dstGpuMask, GLuint, srcName, GLenum, srcTarget, GLint, srcLevel, GLint, srcX, GLint, srcY, GLint, srcZ, GLuint, dstName, GLenum, dstTarget, GLint, dstLevel, GLint, dstX, GLint, dstY, GLint, dstZ, GLsizei, srcWidth, GLsizei, srcHeight, GLsizei, srcDepth); \
    HookWrapper12(void, glMulticastBlitFramebufferNV, GLuint, srcGpu, GLuint, dstGpu, GLint, srcX0, GLint, srcY0, GLint, srcX1, GLint, srcY1, GLint, dstX0, GLint, dstY0, GLint, dstX1, GLint, dstY1, GLbitfield, mask, GLenum, filter); \
    HookWrapper5(void, glMulticastFramebufferSampleLocationsfvNV, GLuint, gpu, GLuint, framebuffer, GLuint, start, GLsizei, count, const GLfloat *, v); \
    HookWrapper0(void, glMulticastBarrierNV); \
    HookWrapper2(void, glMulticastWaitSyncNV, GLuint, signalGpu, GLbitfield, waitGpuMask); \
    HookWrapper4(void, glMulticastGetQueryObjectivNV, GLuint, gpu, GLuint, id, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glMulticastGetQueryObjectuivNV, GLuint, gpu, GLuint, id, GLenum, pname, GLuint *, params); \
    HookWrapper4(void, glMulticastGetQueryObjecti64vNV, GLuint, gpu, GLuint, id, GLenum, pname, GLint64 *, params); \
    HookWrapper4(void, glMulticastGetQueryObjectui64vNV, GLuint, gpu, GLuint, id, GLenum, pname, GLuint64 *, params); \
    HookWrapper6(void, glProgramLocalParameterI4iNV, GLenum, target, GLuint, index, GLint, x, GLint, y, GLint, z, GLint, w); \
    HookWrapper3(void, glProgramLocalParameterI4ivNV, GLenum, target, GLuint, index, const GLint *, params); \
    HookWrapper4(void, glProgramLocalParametersI4ivNV, GLenum, target, GLuint, index, GLsizei, count, const GLint *, params); \
    HookWrapper6(void, glProgramLocalParameterI4uiNV, GLenum, target, GLuint, index, GLuint, x, GLuint, y, GLuint, z, GLuint, w); \
    HookWrapper3(void, glProgramLocalParameterI4uivNV, GLenum, target, GLuint, index, const GLuint *, params); \
    HookWrapper4(void, glProgramLocalParametersI4uivNV, GLenum, target, GLuint, index, GLsizei, count, const GLuint *, params); \
    HookWrapper6(void, glProgramEnvParameterI4iNV, GLenum, target, GLuint, index, GLint, x, GLint, y, GLint, z, GLint, w); \
    HookWrapper3(void, glProgramEnvParameterI4ivNV, GLenum, target, GLuint, index, const GLint *, params); \
    HookWrapper4(void, glProgramEnvParametersI4ivNV, GLenum, target, GLuint, index, GLsizei, count, const GLint *, params); \
    HookWrapper6(void, glProgramEnvParameterI4uiNV, GLenum, target, GLuint, index, GLuint, x, GLuint, y, GLuint, z, GLuint, w); \
    HookWrapper3(void, glProgramEnvParameterI4uivNV, GLenum, target, GLuint, index, const GLuint *, params); \
    HookWrapper4(void, glProgramEnvParametersI4uivNV, GLenum, target, GLuint, index, GLsizei, count, const GLuint *, params); \
    HookWrapper3(void, glGetProgramLocalParameterIivNV, GLenum, target, GLuint, index, GLint *, params); \
    HookWrapper3(void, glGetProgramLocalParameterIuivNV, GLenum, target, GLuint, index, GLuint *, params); \
    HookWrapper3(void, glGetProgramEnvParameterIivNV, GLenum, target, GLuint, index, GLint *, params); \
    HookWrapper3(void, glGetProgramEnvParameterIuivNV, GLenum, target, GLuint, index, GLuint *, params); \
    HookWrapper3(void, glProgramSubroutineParametersuivNV, GLenum, target, GLsizei, count, const GLuint *, params); \
    HookWrapper3(void, glGetProgramSubroutineParameteruivNV, GLenum, target, GLuint, index, GLuint *, param); \
    HookWrapper2(void, glVertex2hNV, GLhalfNV, x, GLhalfNV, y); \
    HookWrapper1(void, glVertex2hvNV, const GLhalfNV *, v); \
    HookWrapper3(void, glVertex3hNV, GLhalfNV, x, GLhalfNV, y, GLhalfNV, z); \
    HookWrapper1(void, glVertex3hvNV, const GLhalfNV *, v); \
    HookWrapper4(void, glVertex4hNV, GLhalfNV, x, GLhalfNV, y, GLhalfNV, z, GLhalfNV, w); \
    HookWrapper1(void, glVertex4hvNV, const GLhalfNV *, v); \
    HookWrapper3(void, glNormal3hNV, GLhalfNV, nx, GLhalfNV, ny, GLhalfNV, nz); \
    HookWrapper1(void, glNormal3hvNV, const GLhalfNV *, v); \
    HookWrapper3(void, glColor3hNV, GLhalfNV, red, GLhalfNV, green, GLhalfNV, blue); \
    HookWrapper1(void, glColor3hvNV, const GLhalfNV *, v); \
    HookWrapper4(void, glColor4hNV, GLhalfNV, red, GLhalfNV, green, GLhalfNV, blue, GLhalfNV, alpha); \
    HookWrapper1(void, glColor4hvNV, const GLhalfNV *, v); \
    HookWrapper1(void, glTexCoord1hNV, GLhalfNV, s); \
    HookWrapper1(void, glTexCoord1hvNV, const GLhalfNV *, v); \
    HookWrapper2(void, glTexCoord2hNV, GLhalfNV, s, GLhalfNV, t); \
    HookWrapper1(void, glTexCoord2hvNV, const GLhalfNV *, v); \
    HookWrapper3(void, glTexCoord3hNV, GLhalfNV, s, GLhalfNV, t, GLhalfNV, r); \
    HookWrapper1(void, glTexCoord3hvNV, const GLhalfNV *, v); \
    HookWrapper4(void, glTexCoord4hNV, GLhalfNV, s, GLhalfNV, t, GLhalfNV, r, GLhalfNV, q); \
    HookWrapper1(void, glTexCoord4hvNV, const GLhalfNV *, v); \
    HookWrapper2(void, glMultiTexCoord1hNV, GLenum, target, GLhalfNV, s); \
    HookWrapper2(void, glMultiTexCoord1hvNV, GLenum, target, const GLhalfNV *, v); \
    HookWrapper3(void, glMultiTexCoord2hNV, GLenum, target, GLhalfNV, s, GLhalfNV, t); \
    HookWrapper2(void, glMultiTexCoord2hvNV, GLenum, target, const GLhalfNV *, v); \
    HookWrapper4(void, glMultiTexCoord3hNV, GLenum, target, GLhalfNV, s, GLhalfNV, t, GLhalfNV, r); \
    HookWrapper2(void, glMultiTexCoord3hvNV, GLenum, target, const GLhalfNV *, v); \
    HookWrapper5(void, glMultiTexCoord4hNV, GLenum, target, GLhalfNV, s, GLhalfNV, t, GLhalfNV, r, GLhalfNV, q); \
    HookWrapper2(void, glMultiTexCoord4hvNV, GLenum, target, const GLhalfNV *, v); \
    HookWrapper1(void, glFogCoordhNV, GLhalfNV, fog); \
    HookWrapper1(void, glFogCoordhvNV, const GLhalfNV *, fog); \
    HookWrapper3(void, glSecondaryColor3hNV, GLhalfNV, red, GLhalfNV, green, GLhalfNV, blue); \
    HookWrapper1(void, glSecondaryColor3hvNV, const GLhalfNV *, v); \
    HookWrapper1(void, glVertexWeighthNV, GLhalfNV, weight); \
    HookWrapper1(void, glVertexWeighthvNV, const GLhalfNV *, weight); \
    HookWrapper2(void, glVertexAttrib1hNV, GLuint, index, GLhalfNV, x); \
    HookWrapper2(void, glVertexAttrib1hvNV, GLuint, index, const GLhalfNV *, v); \
    HookWrapper3(void, glVertexAttrib2hNV, GLuint, index, GLhalfNV, x, GLhalfNV, y); \
    HookWrapper2(void, glVertexAttrib2hvNV, GLuint, index, const GLhalfNV *, v); \
    HookWrapper4(void, glVertexAttrib3hNV, GLuint, index, GLhalfNV, x, GLhalfNV, y, GLhalfNV, z); \
    HookWrapper2(void, glVertexAttrib3hvNV, GLuint, index, const GLhalfNV *, v); \
    HookWrapper5(void, glVertexAttrib4hNV, GLuint, index, GLhalfNV, x, GLhalfNV, y, GLhalfNV, z, GLhalfNV, w); \
    HookWrapper2(void, glVertexAttrib4hvNV, GLuint, index, const GLhalfNV *, v); \
    HookWrapper3(void, glVertexAttribs1hvNV, GLuint, index, GLsizei, n, const GLhalfNV *, v); \
    HookWrapper3(void, glVertexAttribs2hvNV, GLuint, index, GLsizei, n, const GLhalfNV *, v); \
    HookWrapper3(void, glVertexAttribs3hvNV, GLuint, index, GLsizei, n, const GLhalfNV *, v); \
    HookWrapper3(void, glVertexAttribs4hvNV, GLuint, index, GLsizei, n, const GLhalfNV *, v); \
    HookWrapper2(void, glGenOcclusionQueriesNV, GLsizei, n, GLuint *, ids); \
    HookWrapper2(void, glDeleteOcclusionQueriesNV, GLsizei, n, const GLuint *, ids); \
    HookWrapper1(GLboolean, glIsOcclusionQueryNV, GLuint, id); \
    HookWrapper1(void, glBeginOcclusionQueryNV, GLuint, id); \
    HookWrapper0(void, glEndOcclusionQueryNV); \
    HookWrapper3(void, glGetOcclusionQueryivNV, GLuint, id, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetOcclusionQueryuivNV, GLuint, id, GLenum, pname, GLuint *, params); \
    HookWrapper5(void, glProgramBufferParametersfvNV, GLenum, target, GLuint, bindingIndex, GLuint, wordIndex, GLsizei, count, const GLfloat *, params); \
    HookWrapper5(void, glProgramBufferParametersIivNV, GLenum, target, GLuint, bindingIndex, GLuint, wordIndex, GLsizei, count, const GLint *, params); \
    HookWrapper5(void, glProgramBufferParametersIuivNV, GLenum, target, GLuint, bindingIndex, GLuint, wordIndex, GLsizei, count, const GLuint *, params); \
    HookWrapper4(void, glPathColorGenNV, GLenum, color, GLenum, genMode, GLenum, colorFormat, const GLfloat *, coeffs); \
    HookWrapper4(void, glPathTexGenNV, GLenum, texCoordSet, GLenum, genMode, GLint, components, const GLfloat *, coeffs); \
    HookWrapper1(void, glPathFogGenNV, GLenum, genMode); \
    HookWrapper3(void, glGetPathColorGenivNV, GLenum, color, GLenum, pname, GLint *, value); \
    HookWrapper3(void, glGetPathColorGenfvNV, GLenum, color, GLenum, pname, GLfloat *, value); \
    HookWrapper3(void, glGetPathTexGenivNV, GLenum, texCoordSet, GLenum, pname, GLint *, value); \
    HookWrapper3(void, glGetPathTexGenfvNV, GLenum, texCoordSet, GLenum, pname, GLfloat *, value); \
    HookWrapper3(void, glPixelDataRangeNV, GLenum, target, GLsizei, length, const void *, pointer); \
    HookWrapper1(void, glFlushPixelDataRangeNV, GLenum, target); \
    HookWrapper2(void, glPointParameteriNV, GLenum, pname, GLint, param); \
    HookWrapper2(void, glPointParameterivNV, GLenum, pname, const GLint *, params); \
    HookWrapper11(void, glPresentFrameKeyedNV, GLuint, video_slot, GLuint64EXT, minPresentTime, GLuint, beginPresentTimeId, GLuint, presentDurationId, GLenum, type, GLenum, target0, GLuint, fill0, GLuint, key0, GLenum, target1, GLuint, fill1, GLuint, key1); \
    HookWrapper13(void, glPresentFrameDualFillNV, GLuint, video_slot, GLuint64EXT, minPresentTime, GLuint, beginPresentTimeId, GLuint, presentDurationId, GLenum, type, GLenum, target0, GLuint, fill0, GLenum, target1, GLuint, fill1, GLenum, target2, GLuint, fill2, GLenum, target3, GLuint, fill3); \
    HookWrapper3(void, glGetVideoivNV, GLuint, video_slot, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetVideouivNV, GLuint, video_slot, GLenum, pname, GLuint *, params); \
    HookWrapper3(void, glGetVideoi64vNV, GLuint, video_slot, GLenum, pname, GLint64EXT *, params); \
    HookWrapper3(void, glGetVideoui64vNV, GLuint, video_slot, GLenum, pname, GLuint64EXT *, params); \
    HookWrapper0(void, glPrimitiveRestartNV); \
    HookWrapper1(void, glPrimitiveRestartIndexNV, GLuint, index); \
    HookWrapper4(GLint, glQueryResourceNV, GLenum, queryType, GLint, tagId, GLuint, bufSize, GLint *, buffer); \
    HookWrapper2(void, glGenQueryResourceTagNV, GLsizei, n, GLint *, tagIds); \
    HookWrapper2(void, glDeleteQueryResourceTagNV, GLsizei, n, const GLint *, tagIds); \
    HookWrapper2(void, glQueryResourceTagNV, GLint, tagId, const GLchar *, tagString); \
    HookWrapper2(void, glCombinerParameterfvNV, GLenum, pname, const GLfloat *, params); \
    HookWrapper2(void, glCombinerParameterfNV, GLenum, pname, GLfloat, param); \
    HookWrapper2(void, glCombinerParameterivNV, GLenum, pname, const GLint *, params); \
    HookWrapper2(void, glCombinerParameteriNV, GLenum, pname, GLint, param); \
    HookWrapper6(void, glCombinerInputNV, GLenum, stage, GLenum, portion, GLenum, variable, GLenum, input, GLenum, mapping, GLenum, componentUsage); \
    HookWrapper10(void, glCombinerOutputNV, GLenum, stage, GLenum, portion, GLenum, abOutput, GLenum, cdOutput, GLenum, sumOutput, GLenum, scale, GLenum, bias, GLboolean, abDotProduct, GLboolean, cdDotProduct, GLboolean, muxSum); \
    HookWrapper4(void, glFinalCombinerInputNV, GLenum, variable, GLenum, input, GLenum, mapping, GLenum, componentUsage); \
    HookWrapper5(void, glGetCombinerInputParameterfvNV, GLenum, stage, GLenum, portion, GLenum, variable, GLenum, pname, GLfloat *, params); \
    HookWrapper5(void, glGetCombinerInputParameterivNV, GLenum, stage, GLenum, portion, GLenum, variable, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetCombinerOutputParameterfvNV, GLenum, stage, GLenum, portion, GLenum, pname, GLfloat *, params); \
    HookWrapper4(void, glGetCombinerOutputParameterivNV, GLenum, stage, GLenum, portion, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetFinalCombinerInputParameterfvNV, GLenum, variable, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetFinalCombinerInputParameterivNV, GLenum, variable, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glCombinerStageParameterfvNV, GLenum, stage, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glGetCombinerStageParameterfvNV, GLenum, stage, GLenum, pname, GLfloat *, params); \
    HookWrapper7(void, glTexImage2DMultisampleCoverageNV, GLenum, target, GLsizei, coverageSamples, GLsizei, colorSamples, GLint, internalFormat, GLsizei, width, GLsizei, height, GLboolean, fixedSampleLocations); \
    HookWrapper8(void, glTexImage3DMultisampleCoverageNV, GLenum, target, GLsizei, coverageSamples, GLsizei, colorSamples, GLint, internalFormat, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, fixedSampleLocations); \
    HookWrapper7(void, glTextureImage2DMultisampleNV, GLuint, texture, GLenum, target, GLsizei, samples, GLint, internalFormat, GLsizei, width, GLsizei, height, GLboolean, fixedSampleLocations); \
    HookWrapper8(void, glTextureImage3DMultisampleNV, GLuint, texture, GLenum, target, GLsizei, samples, GLint, internalFormat, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, fixedSampleLocations); \
    HookWrapper8(void, glTextureImage2DMultisampleCoverageNV, GLuint, texture, GLenum, target, GLsizei, coverageSamples, GLsizei, colorSamples, GLint, internalFormat, GLsizei, width, GLsizei, height, GLboolean, fixedSampleLocations); \
    HookWrapper9(void, glTextureImage3DMultisampleCoverageNV, GLuint, texture, GLenum, target, GLsizei, coverageSamples, GLsizei, colorSamples, GLint, internalFormat, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, fixedSampleLocations); \
    HookWrapper1(void, glBeginTransformFeedbackNV, GLenum, primitiveMode); \
    HookWrapper0(void, glEndTransformFeedbackNV); \
    HookWrapper3(void, glTransformFeedbackAttribsNV, GLsizei, count, const GLint *, attribs, GLenum, bufferMode); \
    HookWrapper5(void, glBindBufferRangeNV, GLenum, target, GLuint, index, GLuint, buffer, GLintptr, offset, GLsizeiptr, size); \
    HookWrapper4(void, glBindBufferOffsetNV, GLenum, target, GLuint, index, GLuint, buffer, GLintptr, offset); \
    HookWrapper3(void, glBindBufferBaseNV, GLenum, target, GLuint, index, GLuint, buffer); \
    HookWrapper4(void, glTransformFeedbackVaryingsNV, GLuint, program, GLsizei, count, const GLint *, locations, GLenum, bufferMode); \
    HookWrapper2(void, glActiveVaryingNV, GLuint, program, const GLchar *, name); \
    HookWrapper2(GLint, glGetVaryingLocationNV, GLuint, program, const GLchar *, name); \
    HookWrapper7(void, glGetActiveVaryingNV, GLuint, program, GLuint, index, GLsizei, bufSize, GLsizei *, length, GLsizei *, size, GLenum *, type, GLchar *, name); \
    HookWrapper3(void, glGetTransformFeedbackVaryingNV, GLuint, program, GLuint, index, GLint *, location); \
    HookWrapper5(void, glTransformFeedbackStreamAttribsNV, GLsizei, count, const GLint *, attribs, GLsizei, nbuffers, const GLint *, bufstreams, GLenum, bufferMode); \
    HookWrapper2(void, glBindTransformFeedbackNV, GLenum, target, GLuint, id); \
    HookWrapper2(void, glDeleteTransformFeedbacksNV, GLsizei, n, const GLuint *, ids); \
    HookWrapper2(void, glGenTransformFeedbacksNV, GLsizei, n, GLuint *, ids); \
    HookWrapper1(GLboolean, glIsTransformFeedbackNV, GLuint, id); \
    HookWrapper0(void, glPauseTransformFeedbackNV); \
    HookWrapper0(void, glResumeTransformFeedbackNV); \
    HookWrapper2(void, glDrawTransformFeedbackNV, GLenum, mode, GLuint, id); \
    HookWrapper2(void, glVDPAUInitNV, const void *, vdpDevice, const void *, getProcAddress); \
    HookWrapper0(void, glVDPAUFiniNV); \
    HookWrapper4(GLvdpauSurfaceNV, glVDPAURegisterVideoSurfaceNV, const void *, vdpSurface, GLenum, target, GLsizei, numTextureNames, const GLuint *, textureNames); \
    HookWrapper4(GLvdpauSurfaceNV, glVDPAURegisterOutputSurfaceNV, const void *, vdpSurface, GLenum, target, GLsizei, numTextureNames, const GLuint *, textureNames); \
    HookWrapper1(GLboolean, glVDPAUIsSurfaceNV, GLvdpauSurfaceNV, surface); \
    HookWrapper1(void, glVDPAUUnregisterSurfaceNV, GLvdpauSurfaceNV, surface); \
    HookWrapper5(void, glVDPAUGetSurfaceivNV, GLvdpauSurfaceNV, surface, GLenum, pname, GLsizei, bufSize, GLsizei *, length, GLint *, values); \
    HookWrapper2(void, glVDPAUSurfaceAccessNV, GLvdpauSurfaceNV, surface, GLenum, access); \
    HookWrapper2(void, glVDPAUMapSurfacesNV, GLsizei, numSurfaces, const GLvdpauSurfaceNV *, surfaces); \
    HookWrapper2(void, glVDPAUUnmapSurfacesNV, GLsizei, numSurface, const GLvdpauSurfaceNV *, surfaces); \
    HookWrapper0(void, glFlushVertexArrayRangeNV); \
    HookWrapper2(void, glVertexArrayRangeNV, GLsizei, length, const void *, pointer); \
    HookWrapper3(GLboolean, glAreProgramsResidentNV, GLsizei, n, const GLuint *, programs, GLboolean *, residences); \
    HookWrapper2(void, glBindProgramNV, GLenum, target, GLuint, id); \
    HookWrapper2(void, glDeleteProgramsNV, GLsizei, n, const GLuint *, programs); \
    HookWrapper3(void, glExecuteProgramNV, GLenum, target, GLuint, id, const GLfloat *, params); \
    HookWrapper2(void, glGenProgramsNV, GLsizei, n, GLuint *, programs); \
    HookWrapper4(void, glGetProgramParameterdvNV, GLenum, target, GLuint, index, GLenum, pname, GLdouble *, params); \
    HookWrapper4(void, glGetProgramParameterfvNV, GLenum, target, GLuint, index, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetProgramivNV, GLuint, id, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetProgramStringNV, GLuint, id, GLenum, pname, GLubyte *, program); \
    HookWrapper4(void, glGetTrackMatrixivNV, GLenum, target, GLuint, address, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetVertexAttribdvNV, GLuint, index, GLenum, pname, GLdouble *, params); \
    HookWrapper3(void, glGetVertexAttribfvNV, GLuint, index, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetVertexAttribivNV, GLuint, index, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetVertexAttribPointervNV, GLuint, index, GLenum, pname, void **, pointer); \
    HookWrapper1(GLboolean, glIsProgramNV, GLuint, id); \
    HookWrapper4(void, glLoadProgramNV, GLenum, target, GLuint, id, GLsizei, len, const GLubyte *, program); \
    HookWrapper6(void, glProgramParameter4dNV, GLenum, target, GLuint, index, GLdouble, x, GLdouble, y, GLdouble, z, GLdouble, w); \
    HookWrapper3(void, glProgramParameter4dvNV, GLenum, target, GLuint, index, const GLdouble *, v); \
    HookWrapper6(void, glProgramParameter4fNV, GLenum, target, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookWrapper3(void, glProgramParameter4fvNV, GLenum, target, GLuint, index, const GLfloat *, v); \
    HookWrapper4(void, glProgramParameters4dvNV, GLenum, target, GLuint, index, GLsizei, count, const GLdouble *, v); \
    HookWrapper4(void, glProgramParameters4fvNV, GLenum, target, GLuint, index, GLsizei, count, const GLfloat *, v); \
    HookWrapper2(void, glRequestResidentProgramsNV, GLsizei, n, const GLuint *, programs); \
    HookWrapper4(void, glTrackMatrixNV, GLenum, target, GLuint, address, GLenum, matrix, GLenum, transform); \
    HookWrapper5(void, glVertexAttribPointerNV, GLuint, index, GLint, fsize, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper2(void, glVertexAttrib1dNV, GLuint, index, GLdouble, x); \
    HookWrapper2(void, glVertexAttrib1dvNV, GLuint, index, const GLdouble *, v); \
    HookWrapper2(void, glVertexAttrib1fNV, GLuint, index, GLfloat, x); \
    HookWrapper2(void, glVertexAttrib1fvNV, GLuint, index, const GLfloat *, v); \
    HookWrapper2(void, glVertexAttrib1sNV, GLuint, index, GLshort, x); \
    HookWrapper2(void, glVertexAttrib1svNV, GLuint, index, const GLshort *, v); \
    HookWrapper3(void, glVertexAttrib2dNV, GLuint, index, GLdouble, x, GLdouble, y); \
    HookWrapper2(void, glVertexAttrib2dvNV, GLuint, index, const GLdouble *, v); \
    HookWrapper3(void, glVertexAttrib2fNV, GLuint, index, GLfloat, x, GLfloat, y); \
    HookWrapper2(void, glVertexAttrib2fvNV, GLuint, index, const GLfloat *, v); \
    HookWrapper3(void, glVertexAttrib2sNV, GLuint, index, GLshort, x, GLshort, y); \
    HookWrapper2(void, glVertexAttrib2svNV, GLuint, index, const GLshort *, v); \
    HookWrapper4(void, glVertexAttrib3dNV, GLuint, index, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper2(void, glVertexAttrib3dvNV, GLuint, index, const GLdouble *, v); \
    HookWrapper4(void, glVertexAttrib3fNV, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper2(void, glVertexAttrib3fvNV, GLuint, index, const GLfloat *, v); \
    HookWrapper4(void, glVertexAttrib3sNV, GLuint, index, GLshort, x, GLshort, y, GLshort, z); \
    HookWrapper2(void, glVertexAttrib3svNV, GLuint, index, const GLshort *, v); \
    HookWrapper5(void, glVertexAttrib4dNV, GLuint, index, GLdouble, x, GLdouble, y, GLdouble, z, GLdouble, w); \
    HookWrapper2(void, glVertexAttrib4dvNV, GLuint, index, const GLdouble *, v); \
    HookWrapper5(void, glVertexAttrib4fNV, GLuint, index, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookWrapper2(void, glVertexAttrib4fvNV, GLuint, index, const GLfloat *, v); \
    HookWrapper5(void, glVertexAttrib4sNV, GLuint, index, GLshort, x, GLshort, y, GLshort, z, GLshort, w); \
    HookWrapper2(void, glVertexAttrib4svNV, GLuint, index, const GLshort *, v); \
    HookWrapper5(void, glVertexAttrib4ubNV, GLuint, index, GLubyte, x, GLubyte, y, GLubyte, z, GLubyte, w); \
    HookWrapper2(void, glVertexAttrib4ubvNV, GLuint, index, const GLubyte *, v); \
    HookWrapper3(void, glVertexAttribs1dvNV, GLuint, index, GLsizei, count, const GLdouble *, v); \
    HookWrapper3(void, glVertexAttribs1fvNV, GLuint, index, GLsizei, count, const GLfloat *, v); \
    HookWrapper3(void, glVertexAttribs1svNV, GLuint, index, GLsizei, count, const GLshort *, v); \
    HookWrapper3(void, glVertexAttribs2dvNV, GLuint, index, GLsizei, count, const GLdouble *, v); \
    HookWrapper3(void, glVertexAttribs2fvNV, GLuint, index, GLsizei, count, const GLfloat *, v); \
    HookWrapper3(void, glVertexAttribs2svNV, GLuint, index, GLsizei, count, const GLshort *, v); \
    HookWrapper3(void, glVertexAttribs3dvNV, GLuint, index, GLsizei, count, const GLdouble *, v); \
    HookWrapper3(void, glVertexAttribs3fvNV, GLuint, index, GLsizei, count, const GLfloat *, v); \
    HookWrapper3(void, glVertexAttribs3svNV, GLuint, index, GLsizei, count, const GLshort *, v); \
    HookWrapper3(void, glVertexAttribs4dvNV, GLuint, index, GLsizei, count, const GLdouble *, v); \
    HookWrapper3(void, glVertexAttribs4fvNV, GLuint, index, GLsizei, count, const GLfloat *, v); \
    HookWrapper3(void, glVertexAttribs4svNV, GLuint, index, GLsizei, count, const GLshort *, v); \
    HookWrapper3(void, glVertexAttribs4ubvNV, GLuint, index, GLsizei, count, const GLubyte *, v); \
    HookWrapper1(void, glBeginVideoCaptureNV, GLuint, video_capture_slot); \
    HookWrapper4(void, glBindVideoCaptureStreamBufferNV, GLuint, video_capture_slot, GLuint, stream, GLenum, frame_region, GLintptrARB, offset); \
    HookWrapper5(void, glBindVideoCaptureStreamTextureNV, GLuint, video_capture_slot, GLuint, stream, GLenum, frame_region, GLenum, target, GLuint, texture); \
    HookWrapper1(void, glEndVideoCaptureNV, GLuint, video_capture_slot); \
    HookWrapper3(void, glGetVideoCaptureivNV, GLuint, video_capture_slot, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetVideoCaptureStreamivNV, GLuint, video_capture_slot, GLuint, stream, GLenum, pname, GLint *, params); \
    HookWrapper4(void, glGetVideoCaptureStreamfvNV, GLuint, video_capture_slot, GLuint, stream, GLenum, pname, GLfloat *, params); \
    HookWrapper4(void, glGetVideoCaptureStreamdvNV, GLuint, video_capture_slot, GLuint, stream, GLenum, pname, GLdouble *, params); \
    HookWrapper3(GLenum, glVideoCaptureNV, GLuint, video_capture_slot, GLuint *, sequence_num, GLuint64EXT *, capture_time); \
    HookWrapper4(void, glVideoCaptureStreamParameterivNV, GLuint, video_capture_slot, GLuint, stream, GLenum, pname, const GLint *, params); \
    HookWrapper4(void, glVideoCaptureStreamParameterfvNV, GLuint, video_capture_slot, GLuint, stream, GLenum, pname, const GLfloat *, params); \
    HookWrapper4(void, glVideoCaptureStreamParameterdvNV, GLuint, video_capture_slot, GLuint, stream, GLenum, pname, const GLdouble *, params); \
    HookWrapper2(void, glHintPGI, GLenum, target, GLint, mode); \
    HookWrapper3(void, glDetailTexFuncSGIS, GLenum, target, GLsizei, n, const GLfloat *, points); \
    HookWrapper2(void, glGetDetailTexFuncSGIS, GLenum, target, GLfloat *, points); \
    HookWrapper2(void, glFogFuncSGIS, GLsizei, n, const GLfloat *, points); \
    HookWrapper1(void, glGetFogFuncSGIS, GLfloat *, points); \
    HookWrapper2(void, glSampleMaskSGIS, GLclampf, value, GLboolean, invert); \
    HookWrapper1(void, glSamplePatternSGIS, GLenum, pattern); \
    HookWrapper2(void, glPixelTexGenParameteriSGIS, GLenum, pname, GLint, param); \
    HookWrapper2(void, glPixelTexGenParameterivSGIS, GLenum, pname, const GLint *, params); \
    HookWrapper2(void, glPixelTexGenParameterfSGIS, GLenum, pname, GLfloat, param); \
    HookWrapper2(void, glPixelTexGenParameterfvSGIS, GLenum, pname, const GLfloat *, params); \
    HookWrapper2(void, glGetPixelTexGenParameterivSGIS, GLenum, pname, GLint *, params); \
    HookWrapper2(void, glGetPixelTexGenParameterfvSGIS, GLenum, pname, GLfloat *, params); \
    HookWrapper2(void, glPointParameterfSGIS, GLenum, pname, GLfloat, param); \
    HookWrapper2(void, glPointParameterfvSGIS, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glSharpenTexFuncSGIS, GLenum, target, GLsizei, n, const GLfloat *, points); \
    HookWrapper2(void, glGetSharpenTexFuncSGIS, GLenum, target, GLfloat *, points); \
    HookWrapper11(void, glTexImage4DSGIS, GLenum, target, GLint, level, GLenum, internalformat, GLsizei, width, GLsizei, height, GLsizei, depth, GLsizei, size4d, GLint, border, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper13(void, glTexSubImage4DSGIS, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLint, woffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLsizei, size4d, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper4(void, glTextureColorMaskSGIS, GLboolean, red, GLboolean, green, GLboolean, blue, GLboolean, alpha); \
    HookWrapper3(void, glGetTexFilterFuncSGIS, GLenum, target, GLenum, filter, GLfloat *, weights); \
    HookWrapper4(void, glTexFilterFuncSGIS, GLenum, target, GLenum, filter, GLsizei, n, const GLfloat *, weights); \
    HookWrapper1(void, glAsyncMarkerSGIX, GLuint, marker); \
    HookWrapper1(GLint, glFinishAsyncSGIX, GLuint *, markerp); \
    HookWrapper1(GLint, glPollAsyncSGIX, GLuint *, markerp); \
    HookWrapper1(GLuint, glGenAsyncMarkersSGIX, GLsizei, range); \
    HookWrapper2(void, glDeleteAsyncMarkersSGIX, GLuint, marker, GLsizei, range); \
    HookWrapper1(GLboolean, glIsAsyncMarkerSGIX, GLuint, marker); \
    HookWrapper0(void, glFlushRasterSGIX); \
    HookWrapper2(void, glFragmentColorMaterialSGIX, GLenum, face, GLenum, mode); \
    HookWrapper3(void, glFragmentLightfSGIX, GLenum, light, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, glFragmentLightfvSGIX, GLenum, light, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glFragmentLightiSGIX, GLenum, light, GLenum, pname, GLint, param); \
    HookWrapper3(void, glFragmentLightivSGIX, GLenum, light, GLenum, pname, const GLint *, params); \
    HookWrapper2(void, glFragmentLightModelfSGIX, GLenum, pname, GLfloat, param); \
    HookWrapper2(void, glFragmentLightModelfvSGIX, GLenum, pname, const GLfloat *, params); \
    HookWrapper2(void, glFragmentLightModeliSGIX, GLenum, pname, GLint, param); \
    HookWrapper2(void, glFragmentLightModelivSGIX, GLenum, pname, const GLint *, params); \
    HookWrapper3(void, glFragmentMaterialfSGIX, GLenum, face, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, glFragmentMaterialfvSGIX, GLenum, face, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glFragmentMaterialiSGIX, GLenum, face, GLenum, pname, GLint, param); \
    HookWrapper3(void, glFragmentMaterialivSGIX, GLenum, face, GLenum, pname, const GLint *, params); \
    HookWrapper3(void, glGetFragmentLightfvSGIX, GLenum, light, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetFragmentLightivSGIX, GLenum, light, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetFragmentMaterialfvSGIX, GLenum, face, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetFragmentMaterialivSGIX, GLenum, face, GLenum, pname, GLint *, params); \
    HookWrapper2(void, glLightEnviSGIX, GLenum, pname, GLint, param); \
    HookWrapper1(void, glFrameZoomSGIX, GLint, factor); \
    HookWrapper2(void, glIglooInterfaceSGIX, GLenum, pname, const void *, params); \
    HookWrapper0(GLint, glGetInstrumentsSGIX); \
    HookWrapper2(void, glInstrumentsBufferSGIX, GLsizei, size, GLint *, buffer); \
    HookWrapper1(GLint, glPollInstrumentsSGIX, GLint *, marker_p); \
    HookWrapper1(void, glReadInstrumentsSGIX, GLint, marker); \
    HookWrapper0(void, glStartInstrumentsSGIX); \
    HookWrapper1(void, glStopInstrumentsSGIX, GLint, marker); \
    HookWrapper3(void, glGetListParameterfvSGIX, GLuint, list, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetListParameterivSGIX, GLuint, list, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glListParameterfSGIX, GLuint, list, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, glListParameterfvSGIX, GLuint, list, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glListParameteriSGIX, GLuint, list, GLenum, pname, GLint, param); \
    HookWrapper3(void, glListParameterivSGIX, GLuint, list, GLenum, pname, const GLint *, params); \
    HookWrapper1(void, glPixelTexGenSGIX, GLenum, mode); \
    HookWrapper14(void, glDeformationMap3dSGIX, GLenum, target, GLdouble, u1, GLdouble, u2, GLint, ustride, GLint, uorder, GLdouble, v1, GLdouble, v2, GLint, vstride, GLint, vorder, GLdouble, w1, GLdouble, w2, GLint, wstride, GLint, worder, const GLdouble *, points); \
    HookWrapper14(void, glDeformationMap3fSGIX, GLenum, target, GLfloat, u1, GLfloat, u2, GLint, ustride, GLint, uorder, GLfloat, v1, GLfloat, v2, GLint, vstride, GLint, vorder, GLfloat, w1, GLfloat, w2, GLint, wstride, GLint, worder, const GLfloat *, points); \
    HookWrapper1(void, glDeformSGIX, GLbitfield, mask); \
    HookWrapper1(void, glLoadIdentityDeformationMapSGIX, GLbitfield, mask); \
    HookWrapper1(void, glReferencePlaneSGIX, const GLdouble *, equation); \
    HookWrapper2(void, glSpriteParameterfSGIX, GLenum, pname, GLfloat, param); \
    HookWrapper2(void, glSpriteParameterfvSGIX, GLenum, pname, const GLfloat *, params); \
    HookWrapper2(void, glSpriteParameteriSGIX, GLenum, pname, GLint, param); \
    HookWrapper2(void, glSpriteParameterivSGIX, GLenum, pname, const GLint *, params); \
    HookWrapper0(void, glTagSampleBufferSGIX); \
    HookWrapper6(void, glColorTableSGI, GLenum, target, GLenum, internalformat, GLsizei, width, GLenum, format, GLenum, type, const void *, table); \
    HookWrapper3(void, glColorTableParameterfvSGI, GLenum, target, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glColorTableParameterivSGI, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper5(void, glCopyColorTableSGI, GLenum, target, GLenum, internalformat, GLint, x, GLint, y, GLsizei, width); \
    HookWrapper4(void, glGetColorTableSGI, GLenum, target, GLenum, format, GLenum, type, void *, table); \
    HookWrapper3(void, glGetColorTableParameterfvSGI, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetColorTableParameterivSGI, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper0(void, glFinishTextureSUNX); \
    HookWrapper1(void, glGlobalAlphaFactorbSUN, GLbyte, factor); \
    HookWrapper1(void, glGlobalAlphaFactorsSUN, GLshort, factor); \
    HookWrapper1(void, glGlobalAlphaFactoriSUN, GLint, factor); \
    HookWrapper1(void, glGlobalAlphaFactorfSUN, GLfloat, factor); \
    HookWrapper1(void, glGlobalAlphaFactordSUN, GLdouble, factor); \
    HookWrapper1(void, glGlobalAlphaFactorubSUN, GLubyte, factor); \
    HookWrapper1(void, glGlobalAlphaFactorusSUN, GLushort, factor); \
    HookWrapper1(void, glGlobalAlphaFactoruiSUN, GLuint, factor); \
    HookWrapper4(void, glDrawMeshArraysSUN, GLenum, mode, GLint, first, GLsizei, count, GLsizei, width); \
    HookWrapper1(void, glReplacementCodeuiSUN, GLuint, code); \
    HookWrapper1(void, glReplacementCodeusSUN, GLushort, code); \
    HookWrapper1(void, glReplacementCodeubSUN, GLubyte, code); \
    HookWrapper1(void, glReplacementCodeuivSUN, const GLuint *, code); \
    HookWrapper1(void, glReplacementCodeusvSUN, const GLushort *, code); \
    HookWrapper1(void, glReplacementCodeubvSUN, const GLubyte *, code); \
    HookWrapper3(void, glReplacementCodePointerSUN, GLenum, type, GLsizei, stride, const void **, pointer); \
    HookWrapper6(void, glColor4ubVertex2fSUN, GLubyte, r, GLubyte, g, GLubyte, b, GLubyte, a, GLfloat, x, GLfloat, y); \
    HookWrapper2(void, glColor4ubVertex2fvSUN, const GLubyte *, c, const GLfloat *, v); \
    HookWrapper7(void, glColor4ubVertex3fSUN, GLubyte, r, GLubyte, g, GLubyte, b, GLubyte, a, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper2(void, glColor4ubVertex3fvSUN, const GLubyte *, c, const GLfloat *, v); \
    HookWrapper6(void, glColor3fVertex3fSUN, GLfloat, r, GLfloat, g, GLfloat, b, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper2(void, glColor3fVertex3fvSUN, const GLfloat *, c, const GLfloat *, v); \
    HookWrapper6(void, glNormal3fVertex3fSUN, GLfloat, nx, GLfloat, ny, GLfloat, nz, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper2(void, glNormal3fVertex3fvSUN, const GLfloat *, n, const GLfloat *, v); \
    HookWrapper10(void, glColor4fNormal3fVertex3fSUN, GLfloat, r, GLfloat, g, GLfloat, b, GLfloat, a, GLfloat, nx, GLfloat, ny, GLfloat, nz, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper3(void, glColor4fNormal3fVertex3fvSUN, const GLfloat *, c, const GLfloat *, n, const GLfloat *, v); \
    HookWrapper5(void, glTexCoord2fVertex3fSUN, GLfloat, s, GLfloat, t, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper2(void, glTexCoord2fVertex3fvSUN, const GLfloat *, tc, const GLfloat *, v); \
    HookWrapper8(void, glTexCoord4fVertex4fSUN, GLfloat, s, GLfloat, t, GLfloat, p, GLfloat, q, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookWrapper2(void, glTexCoord4fVertex4fvSUN, const GLfloat *, tc, const GLfloat *, v); \
    HookWrapper9(void, glTexCoord2fColor4ubVertex3fSUN, GLfloat, s, GLfloat, t, GLubyte, r, GLubyte, g, GLubyte, b, GLubyte, a, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper3(void, glTexCoord2fColor4ubVertex3fvSUN, const GLfloat *, tc, const GLubyte *, c, const GLfloat *, v); \
    HookWrapper8(void, glTexCoord2fColor3fVertex3fSUN, GLfloat, s, GLfloat, t, GLfloat, r, GLfloat, g, GLfloat, b, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper3(void, glTexCoord2fColor3fVertex3fvSUN, const GLfloat *, tc, const GLfloat *, c, const GLfloat *, v); \
    HookWrapper8(void, glTexCoord2fNormal3fVertex3fSUN, GLfloat, s, GLfloat, t, GLfloat, nx, GLfloat, ny, GLfloat, nz, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper3(void, glTexCoord2fNormal3fVertex3fvSUN, const GLfloat *, tc, const GLfloat *, n, const GLfloat *, v); \
    HookWrapper12(void, glTexCoord2fColor4fNormal3fVertex3fSUN, GLfloat, s, GLfloat, t, GLfloat, r, GLfloat, g, GLfloat, b, GLfloat, a, GLfloat, nx, GLfloat, ny, GLfloat, nz, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper4(void, glTexCoord2fColor4fNormal3fVertex3fvSUN, const GLfloat *, tc, const GLfloat *, c, const GLfloat *, n, const GLfloat *, v); \
    HookWrapper15(void, glTexCoord4fColor4fNormal3fVertex4fSUN, GLfloat, s, GLfloat, t, GLfloat, p, GLfloat, q, GLfloat, r, GLfloat, g, GLfloat, b, GLfloat, a, GLfloat, nx, GLfloat, ny, GLfloat, nz, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookWrapper4(void, glTexCoord4fColor4fNormal3fVertex4fvSUN, const GLfloat *, tc, const GLfloat *, c, const GLfloat *, n, const GLfloat *, v); \
    HookWrapper4(void, glReplacementCodeuiVertex3fSUN, GLuint, rc, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper2(void, glReplacementCodeuiVertex3fvSUN, const GLuint *, rc, const GLfloat *, v); \
    HookWrapper8(void, glReplacementCodeuiColor4ubVertex3fSUN, GLuint, rc, GLubyte, r, GLubyte, g, GLubyte, b, GLubyte, a, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper3(void, glReplacementCodeuiColor4ubVertex3fvSUN, const GLuint *, rc, const GLubyte *, c, const GLfloat *, v); \
    HookWrapper7(void, glReplacementCodeuiColor3fVertex3fSUN, GLuint, rc, GLfloat, r, GLfloat, g, GLfloat, b, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper3(void, glReplacementCodeuiColor3fVertex3fvSUN, const GLuint *, rc, const GLfloat *, c, const GLfloat *, v); \
    HookWrapper7(void, glReplacementCodeuiNormal3fVertex3fSUN, GLuint, rc, GLfloat, nx, GLfloat, ny, GLfloat, nz, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper3(void, glReplacementCodeuiNormal3fVertex3fvSUN, const GLuint *, rc, const GLfloat *, n, const GLfloat *, v); \
    HookWrapper11(void, glReplacementCodeuiColor4fNormal3fVertex3fSUN, GLuint, rc, GLfloat, r, GLfloat, g, GLfloat, b, GLfloat, a, GLfloat, nx, GLfloat, ny, GLfloat, nz, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper4(void, glReplacementCodeuiColor4fNormal3fVertex3fvSUN, const GLuint *, rc, const GLfloat *, c, const GLfloat *, n, const GLfloat *, v); \
    HookWrapper6(void, glReplacementCodeuiTexCoord2fVertex3fSUN, GLuint, rc, GLfloat, s, GLfloat, t, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper3(void, glReplacementCodeuiTexCoord2fVertex3fvSUN, const GLuint *, rc, const GLfloat *, tc, const GLfloat *, v); \
    HookWrapper9(void, glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN, GLuint, rc, GLfloat, s, GLfloat, t, GLfloat, nx, GLfloat, ny, GLfloat, nz, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper4(void, glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN, const GLuint *, rc, const GLfloat *, tc, const GLfloat *, n, const GLfloat *, v); \
    HookWrapper13(void, glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN, GLuint, rc, GLfloat, s, GLfloat, t, GLfloat, r, GLfloat, g, GLfloat, b, GLfloat, a, GLfloat, nx, GLfloat, ny, GLfloat, nz, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper5(void, glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN, const GLuint *, rc, const GLfloat *, tc, const GLfloat *, c, const GLfloat *, n, const GLfloat *, v); \
    HookWrapper0(GLenum, glGetGraphicsResetStatusKHR); \
    HookWrapper8(void, glReadnPixelsKHR, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, GLsizei, bufSize, void *, data); \
    HookWrapper4(void, glGetnUniformfvKHR, GLuint, program, GLint, location, GLsizei, bufSize, GLfloat *, params); \
    HookWrapper4(void, glGetnUniformivKHR, GLuint, program, GLint, location, GLsizei, bufSize, GLint *, params); \
    HookWrapper4(void, glGetnUniformuivKHR, GLuint, program, GLint, location, GLsizei, bufSize, GLuint *, params); \
    HookWrapper2(void, glEGLImageTargetTexture2DOES, GLenum, target, GLeglImageOES, image); \
    HookWrapper2(void, glEGLImageTargetRenderbufferStorageOES, GLenum, target, GLeglImageOES, image); \
    HookWrapper5(void, glGetProgramBinaryOES, GLuint, program, GLsizei, bufSize, GLsizei *, length, GLenum *, binaryFormat, void *, binary); \
    HookWrapper4(void, glProgramBinaryOES, GLuint, program, GLenum, binaryFormat, const void *, binary, GLint, length); \
    HookWrapper10(void, glBlitFramebufferANGLE, GLint, srcX0, GLint, srcY0, GLint, srcX1, GLint, srcY1, GLint, dstX0, GLint, dstY0, GLint, dstX1, GLint, dstY1, GLbitfield, mask, GLenum, filter); \
    HookWrapper5(void, glRenderbufferStorageMultisampleANGLE, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper4(void, glDrawArraysInstancedANGLE, GLenum, mode, GLint, first, GLsizei, count, GLsizei, primcount); \
    HookWrapper5(void, glDrawElementsInstancedANGLE, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, primcount); \
    HookWrapper2(void, glVertexAttribDivisorANGLE, GLuint, index, GLuint, divisor); \
    HookWrapper4(void, glGetTranslatedShaderSourceANGLE, GLuint, shader, GLsizei, bufsize, GLsizei *, length, GLchar *, source); \
    HookWrapper4(void, glCopyTextureLevelsAPPLE, GLuint, destinationTexture, GLuint, sourceTexture, GLint, sourceBaseLevel, GLsizei, sourceLevelCount); \
    HookWrapper5(void, glRenderbufferStorageMultisampleAPPLE, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper0(void, glResolveMultisampleFramebufferAPPLE); \
    HookWrapper2(GLsync, glFenceSyncAPPLE, GLenum, condition, GLbitfield, flags); \
    HookWrapper1(GLboolean, glIsSyncAPPLE, GLsync, sync); \
    HookWrapper1(void, glDeleteSyncAPPLE, GLsync, sync); \
    HookWrapper3(GLenum, glClientWaitSyncAPPLE, GLsync, sync, GLbitfield, flags, GLuint64, timeout); \
    HookWrapper3(void, glWaitSyncAPPLE, GLsync, sync, GLbitfield, flags, GLuint64, timeout); \
    HookWrapper2(void, glGetInteger64vAPPLE, GLenum, pname, GLint64 *, params); \
    HookWrapper5(void, glGetSyncivAPPLE, GLsync, sync, GLenum, pname, GLsizei, bufSize, GLsizei *, length, GLint *, values); \
    HookWrapper4(void, glBindFragDataLocationIndexedEXT, GLuint, program, GLuint, colorNumber, GLuint, index, const GLchar *, name); \
    HookWrapper3(GLint, glGetProgramResourceLocationIndexEXT, GLuint, program, GLenum, programInterface, const GLchar *, name); \
    HookWrapper2(GLint, glGetFragDataIndexEXT, GLuint, program, const GLchar *, name); \
    HookWrapper4(void, glBufferStorageEXT, GLenum, target, GLsizeiptr, size, const void *, data, GLbitfield, flags); \
    HookWrapper5(void, glClearTexImageEXT, GLuint, texture, GLint, level, GLenum, format, GLenum, type, const void *, data); \
    HookWrapper11(void, glClearTexSubImageEXT, GLuint, texture, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLenum, type, const void *, data); \
    HookWrapper2(void, glClipControlEXT, GLenum, origin, GLenum, depth); \
    HookWrapper2(void, glDrawTransformFeedbackEXT, GLenum, mode, GLuint, id); \
    HookWrapper3(void, glDrawTransformFeedbackInstancedEXT, GLenum, mode, GLuint, id, GLsizei, instancecount); \
    HookWrapper2(void, glVertexAttribDivisorEXT, GLuint, index, GLuint, divisor); \
    HookWrapper4(void *, glMapBufferRangeEXT, GLenum, target, GLintptr, offset, GLsizeiptr, length, GLbitfield, access); \
    HookWrapper3(void, glFlushMappedBufferRangeEXT, GLenum, target, GLintptr, offset, GLsizeiptr, length); \
    HookWrapper4(void, glMultiDrawArraysIndirectEXT, GLenum, mode, const void *, indirect, GLsizei, drawcount, GLsizei, stride); \
    HookWrapper5(void, glMultiDrawElementsIndirectEXT, GLenum, mode, GLenum, type, const void *, indirect, GLsizei, drawcount, GLsizei, stride); \
    HookWrapper2(void, glReadBufferIndexedEXT, GLenum, src, GLint, index); \
    HookWrapper3(void, glDrawBuffersIndexedEXT, GLint, n, const GLenum *, location, const GLint *, indices); \
    HookWrapper3(void, glGetIntegeri_vEXT, GLenum, target, GLuint, index, GLint *, data); \
    HookWrapper2(void, glFramebufferPixelLocalStorageSizeEXT, GLuint, target, GLsizei, size); \
    HookWrapper1(GLsizei, glGetFramebufferPixelLocalStorageSizeEXT, GLuint, target); \
    HookWrapper3(void, glClearPixelLocalStorageuiEXT, GLsizei, offset, GLsizei, n, const GLuint *, values); \
    HookWrapper9(void, glTexPageCommitmentEXT, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLboolean, commit); \
    HookWrapper1(GLuint64, glGetTextureHandleIMG, GLuint, texture); \
    HookWrapper2(GLuint64, glGetTextureSamplerHandleIMG, GLuint, texture, GLuint, sampler); \
    HookWrapper2(void, glUniformHandleui64IMG, GLint, location, GLuint64, value); \
    HookWrapper3(void, glUniformHandleui64vIMG, GLint, location, GLsizei, count, const GLuint64 *, value); \
    HookWrapper3(void, glProgramUniformHandleui64IMG, GLuint, program, GLint, location, GLuint64, value); \
    HookWrapper4(void, glProgramUniformHandleui64vIMG, GLuint, program, GLint, location, GLsizei, count, const GLuint64 *, values); \
    HookWrapper7(void, glFramebufferTexture2DDownsampleIMG, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level, GLint, xscale, GLint, yscale); \
    HookWrapper7(void, glFramebufferTextureLayerDownsampleIMG, GLenum, target, GLenum, attachment, GLuint, texture, GLint, level, GLint, layer, GLint, xscale, GLint, yscale); \
    HookWrapper5(void, glRenderbufferStorageMultisampleIMG, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper6(void, glFramebufferTexture2DMultisampleIMG, GLenum, target, GLenum, attachment, GLenum, textarget, GLuint, texture, GLint, level, GLsizei, samples); \
    HookWrapper5(void, glCopyBufferSubDataNV, GLenum, readTarget, GLenum, writeTarget, GLintptr, readOffset, GLintptr, writeOffset, GLsizeiptr, size); \
    HookWrapper1(void, glCoverageMaskNV, GLboolean, mask); \
    HookWrapper1(void, glCoverageOperationNV, GLenum, operation); \
    HookWrapper2(void, glDrawBuffersNV, GLsizei, n, const GLenum *, bufs); \
    HookWrapper4(void, glDrawArraysInstancedNV, GLenum, mode, GLint, first, GLsizei, count, GLsizei, primcount); \
    HookWrapper5(void, glDrawElementsInstancedNV, GLenum, mode, GLsizei, count, GLenum, type, const void *, indices, GLsizei, primcount); \
    HookWrapper10(void, glBlitFramebufferNV, GLint, srcX0, GLint, srcY0, GLint, srcX1, GLint, srcY1, GLint, dstX0, GLint, dstY0, GLint, dstX1, GLint, dstY1, GLbitfield, mask, GLenum, filter); \
    HookWrapper5(void, glRenderbufferStorageMultisampleNV, GLenum, target, GLsizei, samples, GLenum, internalformat, GLsizei, width, GLsizei, height); \
    HookWrapper2(void, glVertexAttribDivisorNV, GLuint, index, GLuint, divisor); \
    HookWrapper4(void, glUniformMatrix2x3fvNV, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, glUniformMatrix3x2fvNV, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, glUniformMatrix2x4fvNV, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, glUniformMatrix4x2fvNV, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, glUniformMatrix3x4fvNV, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper4(void, glUniformMatrix4x3fvNV, GLint, location, GLsizei, count, GLboolean, transpose, const GLfloat *, value); \
    HookWrapper2(void, glPolygonModeNV, GLenum, face, GLenum, mode); \
    HookWrapper1(void, glReadBufferNV, GLenum, mode); \
    HookWrapper2(void, glAlphaFuncQCOM, GLenum, func, GLclampf, ref); \
    HookWrapper3(void, glGetDriverControlsQCOM, GLint *, num, GLsizei, size, GLuint *, driverControls); \
    HookWrapper4(void, glGetDriverControlStringQCOM, GLuint, driverControl, GLsizei, bufSize, GLsizei *, length, GLchar *, driverControlString); \
    HookWrapper1(void, glEnableDriverControlQCOM, GLuint, driverControl); \
    HookWrapper1(void, glDisableDriverControlQCOM, GLuint, driverControl); \
    HookWrapper3(void, glExtGetTexturesQCOM, GLuint *, textures, GLint, maxTextures, GLint *, numTextures); \
    HookWrapper3(void, glExtGetBuffersQCOM, GLuint *, buffers, GLint, maxBuffers, GLint *, numBuffers); \
    HookWrapper3(void, glExtGetRenderbuffersQCOM, GLuint *, renderbuffers, GLint, maxRenderbuffers, GLint *, numRenderbuffers); \
    HookWrapper3(void, glExtGetFramebuffersQCOM, GLuint *, framebuffers, GLint, maxFramebuffers, GLint *, numFramebuffers); \
    HookWrapper5(void, glExtGetTexLevelParameterivQCOM, GLuint, texture, GLenum, face, GLint, level, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glExtTexObjectStateOverrideiQCOM, GLenum, target, GLenum, pname, GLint, param); \
    HookWrapper11(void, glExtGetTexSubImageQCOM, GLenum, target, GLint, level, GLint, xoffset, GLint, yoffset, GLint, zoffset, GLsizei, width, GLsizei, height, GLsizei, depth, GLenum, format, GLenum, type, void *, texels); \
    HookWrapper2(void, glExtGetBufferPointervQCOM, GLenum, target, void **, params); \
    HookWrapper3(void, glExtGetShadersQCOM, GLuint *, shaders, GLint, maxShaders, GLint *, numShaders); \
    HookWrapper3(void, glExtGetProgramsQCOM, GLuint *, programs, GLint, maxPrograms, GLint *, numPrograms); \
    HookWrapper1(GLboolean, glExtIsProgramBinaryQCOM, GLuint, program); \
    HookWrapper4(void, glExtGetProgramBinarySourceQCOM, GLuint, program, GLenum, shadertype, GLchar *, source, GLint *, length); \
    HookWrapper5(void, glFramebufferFoveationConfigQCOM, GLuint, framebuffer, GLuint, numLayers, GLuint, focalPointsPerLayer, GLuint, requestedFeatures, GLuint *, providedFeatures); \
    HookWrapper8(void, glFramebufferFoveationParametersQCOM, GLuint, framebuffer, GLuint, layer, GLuint, focalPoint, GLfloat, focalX, GLfloat, focalY, GLfloat, gainX, GLfloat, gainY, GLfloat, foveaArea); \
    HookWrapper0(void, glFramebufferFetchBarrierQCOM); \
    HookWrapper8(void, glTextureFoveationParametersQCOM, GLuint, texture, GLuint, layer, GLuint, focalPoint, GLfloat, focalX, GLfloat, focalY, GLfloat, gainX, GLfloat, gainY, GLfloat, foveaArea); \
    HookWrapper5(void, glStartTilingQCOM, GLuint, x, GLuint, y, GLuint, width, GLuint, height, GLbitfield, preserveMask); \
    HookWrapper1(void, glEndTilingQCOM, GLbitfield, preserveMask); \
    HookWrapper2(void, glNewList, GLuint, list, GLenum, mode); \
    HookWrapper0(void, glEndList); \
    HookWrapper1(void, glCallList, GLuint, list); \
    HookWrapper3(void, glCallLists, GLsizei, n, GLenum, type, const void *, lists); \
    HookWrapper2(void, glDeleteLists, GLuint, list, GLsizei, range); \
    HookWrapper1(GLuint, glGenLists, GLsizei, range); \
    HookWrapper1(void, glListBase, GLuint, base); \
    HookWrapper1(void, glBegin, GLenum, mode); \
    HookWrapper7(void, glBitmap, GLsizei, width, GLsizei, height, GLfloat, xorig, GLfloat, yorig, GLfloat, xmove, GLfloat, ymove, const GLubyte *, bitmap); \
    HookWrapper3(void, glColor3b, GLbyte, red, GLbyte, green, GLbyte, blue); \
    HookWrapper1(void, glColor3bv, const GLbyte *, v); \
    HookWrapper3(void, glColor3d, GLdouble, red, GLdouble, green, GLdouble, blue); \
    HookWrapper1(void, glColor3dv, const GLdouble *, v); \
    HookWrapper3(void, glColor3f, GLfloat, red, GLfloat, green, GLfloat, blue); \
    HookWrapper1(void, glColor3fv, const GLfloat *, v); \
    HookWrapper3(void, glColor3i, GLint, red, GLint, green, GLint, blue); \
    HookWrapper1(void, glColor3iv, const GLint *, v); \
    HookWrapper3(void, glColor3s, GLshort, red, GLshort, green, GLshort, blue); \
    HookWrapper1(void, glColor3sv, const GLshort *, v); \
    HookWrapper3(void, glColor3ub, GLubyte, red, GLubyte, green, GLubyte, blue); \
    HookWrapper1(void, glColor3ubv, const GLubyte *, v); \
    HookWrapper3(void, glColor3ui, GLuint, red, GLuint, green, GLuint, blue); \
    HookWrapper1(void, glColor3uiv, const GLuint *, v); \
    HookWrapper3(void, glColor3us, GLushort, red, GLushort, green, GLushort, blue); \
    HookWrapper1(void, glColor3usv, const GLushort *, v); \
    HookWrapper4(void, glColor4b, GLbyte, red, GLbyte, green, GLbyte, blue, GLbyte, alpha); \
    HookWrapper1(void, glColor4bv, const GLbyte *, v); \
    HookWrapper4(void, glColor4d, GLdouble, red, GLdouble, green, GLdouble, blue, GLdouble, alpha); \
    HookWrapper1(void, glColor4dv, const GLdouble *, v); \
    HookWrapper4(void, glColor4f, GLfloat, red, GLfloat, green, GLfloat, blue, GLfloat, alpha); \
    HookWrapper1(void, glColor4fv, const GLfloat *, v); \
    HookWrapper4(void, glColor4i, GLint, red, GLint, green, GLint, blue, GLint, alpha); \
    HookWrapper1(void, glColor4iv, const GLint *, v); \
    HookWrapper4(void, glColor4s, GLshort, red, GLshort, green, GLshort, blue, GLshort, alpha); \
    HookWrapper1(void, glColor4sv, const GLshort *, v); \
    HookWrapper4(void, glColor4ub, GLubyte, red, GLubyte, green, GLubyte, blue, GLubyte, alpha); \
    HookWrapper1(void, glColor4ubv, const GLubyte *, v); \
    HookWrapper4(void, glColor4ui, GLuint, red, GLuint, green, GLuint, blue, GLuint, alpha); \
    HookWrapper1(void, glColor4uiv, const GLuint *, v); \
    HookWrapper4(void, glColor4us, GLushort, red, GLushort, green, GLushort, blue, GLushort, alpha); \
    HookWrapper1(void, glColor4usv, const GLushort *, v); \
    HookWrapper1(void, glEdgeFlag, GLboolean, flag); \
    HookWrapper1(void, glEdgeFlagv, const GLboolean *, flag); \
    HookWrapper0(void, glEnd); \
    HookWrapper1(void, glIndexd, GLdouble, c); \
    HookWrapper1(void, glIndexdv, const GLdouble *, c); \
    HookWrapper1(void, glIndexf, GLfloat, c); \
    HookWrapper1(void, glIndexfv, const GLfloat *, c); \
    HookWrapper1(void, glIndexi, GLint, c); \
    HookWrapper1(void, glIndexiv, const GLint *, c); \
    HookWrapper1(void, glIndexs, GLshort, c); \
    HookWrapper1(void, glIndexsv, const GLshort *, c); \
    HookWrapper3(void, glNormal3b, GLbyte, nx, GLbyte, ny, GLbyte, nz); \
    HookWrapper1(void, glNormal3bv, const GLbyte *, v); \
    HookWrapper3(void, glNormal3d, GLdouble, nx, GLdouble, ny, GLdouble, nz); \
    HookWrapper1(void, glNormal3dv, const GLdouble *, v); \
    HookWrapper3(void, glNormal3f, GLfloat, nx, GLfloat, ny, GLfloat, nz); \
    HookWrapper1(void, glNormal3fv, const GLfloat *, v); \
    HookWrapper3(void, glNormal3i, GLint, nx, GLint, ny, GLint, nz); \
    HookWrapper1(void, glNormal3iv, const GLint *, v); \
    HookWrapper3(void, glNormal3s, GLshort, nx, GLshort, ny, GLshort, nz); \
    HookWrapper1(void, glNormal3sv, const GLshort *, v); \
    HookWrapper2(void, glRasterPos2d, GLdouble, x, GLdouble, y); \
    HookWrapper1(void, glRasterPos2dv, const GLdouble *, v); \
    HookWrapper2(void, glRasterPos2f, GLfloat, x, GLfloat, y); \
    HookWrapper1(void, glRasterPos2fv, const GLfloat *, v); \
    HookWrapper2(void, glRasterPos2i, GLint, x, GLint, y); \
    HookWrapper1(void, glRasterPos2iv, const GLint *, v); \
    HookWrapper2(void, glRasterPos2s, GLshort, x, GLshort, y); \
    HookWrapper1(void, glRasterPos2sv, const GLshort *, v); \
    HookWrapper3(void, glRasterPos3d, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper1(void, glRasterPos3dv, const GLdouble *, v); \
    HookWrapper3(void, glRasterPos3f, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper1(void, glRasterPos3fv, const GLfloat *, v); \
    HookWrapper3(void, glRasterPos3i, GLint, x, GLint, y, GLint, z); \
    HookWrapper1(void, glRasterPos3iv, const GLint *, v); \
    HookWrapper3(void, glRasterPos3s, GLshort, x, GLshort, y, GLshort, z); \
    HookWrapper1(void, glRasterPos3sv, const GLshort *, v); \
    HookWrapper4(void, glRasterPos4d, GLdouble, x, GLdouble, y, GLdouble, z, GLdouble, w); \
    HookWrapper1(void, glRasterPos4dv, const GLdouble *, v); \
    HookWrapper4(void, glRasterPos4f, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookWrapper1(void, glRasterPos4fv, const GLfloat *, v); \
    HookWrapper4(void, glRasterPos4i, GLint, x, GLint, y, GLint, z, GLint, w); \
    HookWrapper1(void, glRasterPos4iv, const GLint *, v); \
    HookWrapper4(void, glRasterPos4s, GLshort, x, GLshort, y, GLshort, z, GLshort, w); \
    HookWrapper1(void, glRasterPos4sv, const GLshort *, v); \
    HookWrapper4(void, glRectd, GLdouble, x1, GLdouble, y1, GLdouble, x2, GLdouble, y2); \
    HookWrapper2(void, glRectdv, const GLdouble *, v1, const GLdouble *, v2); \
    HookWrapper4(void, glRectf, GLfloat, x1, GLfloat, y1, GLfloat, x2, GLfloat, y2); \
    HookWrapper2(void, glRectfv, const GLfloat *, v1, const GLfloat *, v2); \
    HookWrapper4(void, glRecti, GLint, x1, GLint, y1, GLint, x2, GLint, y2); \
    HookWrapper2(void, glRectiv, const GLint *, v1, const GLint *, v2); \
    HookWrapper4(void, glRects, GLshort, x1, GLshort, y1, GLshort, x2, GLshort, y2); \
    HookWrapper2(void, glRectsv, const GLshort *, v1, const GLshort *, v2); \
    HookWrapper1(void, glTexCoord1d, GLdouble, s); \
    HookWrapper1(void, glTexCoord1dv, const GLdouble *, v); \
    HookWrapper1(void, glTexCoord1f, GLfloat, s); \
    HookWrapper1(void, glTexCoord1fv, const GLfloat *, v); \
    HookWrapper1(void, glTexCoord1i, GLint, s); \
    HookWrapper1(void, glTexCoord1iv, const GLint *, v); \
    HookWrapper1(void, glTexCoord1s, GLshort, s); \
    HookWrapper1(void, glTexCoord1sv, const GLshort *, v); \
    HookWrapper2(void, glTexCoord2d, GLdouble, s, GLdouble, t); \
    HookWrapper1(void, glTexCoord2dv, const GLdouble *, v); \
    HookWrapper2(void, glTexCoord2f, GLfloat, s, GLfloat, t); \
    HookWrapper1(void, glTexCoord2fv, const GLfloat *, v); \
    HookWrapper2(void, glTexCoord2i, GLint, s, GLint, t); \
    HookWrapper1(void, glTexCoord2iv, const GLint *, v); \
    HookWrapper2(void, glTexCoord2s, GLshort, s, GLshort, t); \
    HookWrapper1(void, glTexCoord2sv, const GLshort *, v); \
    HookWrapper3(void, glTexCoord3d, GLdouble, s, GLdouble, t, GLdouble, r); \
    HookWrapper1(void, glTexCoord3dv, const GLdouble *, v); \
    HookWrapper3(void, glTexCoord3f, GLfloat, s, GLfloat, t, GLfloat, r); \
    HookWrapper1(void, glTexCoord3fv, const GLfloat *, v); \
    HookWrapper3(void, glTexCoord3i, GLint, s, GLint, t, GLint, r); \
    HookWrapper1(void, glTexCoord3iv, const GLint *, v); \
    HookWrapper3(void, glTexCoord3s, GLshort, s, GLshort, t, GLshort, r); \
    HookWrapper1(void, glTexCoord3sv, const GLshort *, v); \
    HookWrapper4(void, glTexCoord4d, GLdouble, s, GLdouble, t, GLdouble, r, GLdouble, q); \
    HookWrapper1(void, glTexCoord4dv, const GLdouble *, v); \
    HookWrapper4(void, glTexCoord4f, GLfloat, s, GLfloat, t, GLfloat, r, GLfloat, q); \
    HookWrapper1(void, glTexCoord4fv, const GLfloat *, v); \
    HookWrapper4(void, glTexCoord4i, GLint, s, GLint, t, GLint, r, GLint, q); \
    HookWrapper1(void, glTexCoord4iv, const GLint *, v); \
    HookWrapper4(void, glTexCoord4s, GLshort, s, GLshort, t, GLshort, r, GLshort, q); \
    HookWrapper1(void, glTexCoord4sv, const GLshort *, v); \
    HookWrapper2(void, glVertex2d, GLdouble, x, GLdouble, y); \
    HookWrapper1(void, glVertex2dv, const GLdouble *, v); \
    HookWrapper2(void, glVertex2f, GLfloat, x, GLfloat, y); \
    HookWrapper1(void, glVertex2fv, const GLfloat *, v); \
    HookWrapper2(void, glVertex2i, GLint, x, GLint, y); \
    HookWrapper1(void, glVertex2iv, const GLint *, v); \
    HookWrapper2(void, glVertex2s, GLshort, x, GLshort, y); \
    HookWrapper1(void, glVertex2sv, const GLshort *, v); \
    HookWrapper3(void, glVertex3d, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper1(void, glVertex3dv, const GLdouble *, v); \
    HookWrapper3(void, glVertex3f, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper1(void, glVertex3fv, const GLfloat *, v); \
    HookWrapper3(void, glVertex3i, GLint, x, GLint, y, GLint, z); \
    HookWrapper1(void, glVertex3iv, const GLint *, v); \
    HookWrapper3(void, glVertex3s, GLshort, x, GLshort, y, GLshort, z); \
    HookWrapper1(void, glVertex3sv, const GLshort *, v); \
    HookWrapper4(void, glVertex4d, GLdouble, x, GLdouble, y, GLdouble, z, GLdouble, w); \
    HookWrapper1(void, glVertex4dv, const GLdouble *, v); \
    HookWrapper4(void, glVertex4f, GLfloat, x, GLfloat, y, GLfloat, z, GLfloat, w); \
    HookWrapper1(void, glVertex4fv, const GLfloat *, v); \
    HookWrapper4(void, glVertex4i, GLint, x, GLint, y, GLint, z, GLint, w); \
    HookWrapper1(void, glVertex4iv, const GLint *, v); \
    HookWrapper4(void, glVertex4s, GLshort, x, GLshort, y, GLshort, z, GLshort, w); \
    HookWrapper1(void, glVertex4sv, const GLshort *, v); \
    HookWrapper2(void, glClipPlane, GLenum, plane, const GLdouble *, equation); \
    HookWrapper2(void, glColorMaterial, GLenum, face, GLenum, mode); \
    HookWrapper2(void, glFogf, GLenum, pname, GLfloat, param); \
    HookWrapper2(void, glFogfv, GLenum, pname, const GLfloat *, params); \
    HookWrapper2(void, glFogi, GLenum, pname, GLint, param); \
    HookWrapper2(void, glFogiv, GLenum, pname, const GLint *, params); \
    HookWrapper3(void, glLightf, GLenum, light, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, glLightfv, GLenum, light, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glLighti, GLenum, light, GLenum, pname, GLint, param); \
    HookWrapper3(void, glLightiv, GLenum, light, GLenum, pname, const GLint *, params); \
    HookWrapper2(void, glLightModelf, GLenum, pname, GLfloat, param); \
    HookWrapper2(void, glLightModelfv, GLenum, pname, const GLfloat *, params); \
    HookWrapper2(void, glLightModeli, GLenum, pname, GLint, param); \
    HookWrapper2(void, glLightModeliv, GLenum, pname, const GLint *, params); \
    HookWrapper2(void, glLineStipple, GLint, factor, GLushort, pattern); \
    HookWrapper3(void, glMaterialf, GLenum, face, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, glMaterialfv, GLenum, face, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glMateriali, GLenum, face, GLenum, pname, GLint, param); \
    HookWrapper3(void, glMaterialiv, GLenum, face, GLenum, pname, const GLint *, params); \
    HookWrapper1(void, glPolygonStipple, const GLubyte *, mask); \
    HookWrapper1(void, glShadeModel, GLenum, mode); \
    HookWrapper3(void, glTexEnvf, GLenum, target, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, glTexEnvfv, GLenum, target, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glTexEnvi, GLenum, target, GLenum, pname, GLint, param); \
    HookWrapper3(void, glTexEnviv, GLenum, target, GLenum, pname, const GLint *, params); \
    HookWrapper3(void, glTexGend, GLenum, coord, GLenum, pname, GLdouble, param); \
    HookWrapper3(void, glTexGendv, GLenum, coord, GLenum, pname, const GLdouble *, params); \
    HookWrapper3(void, glTexGenf, GLenum, coord, GLenum, pname, GLfloat, param); \
    HookWrapper3(void, glTexGenfv, GLenum, coord, GLenum, pname, const GLfloat *, params); \
    HookWrapper3(void, glTexGeni, GLenum, coord, GLenum, pname, GLint, param); \
    HookWrapper3(void, glTexGeniv, GLenum, coord, GLenum, pname, const GLint *, params); \
    HookWrapper3(void, glFeedbackBuffer, GLsizei, size, GLenum, type, GLfloat *, buffer); \
    HookWrapper2(void, glSelectBuffer, GLsizei, size, GLuint *, buffer); \
    HookWrapper1(GLint, glRenderMode, GLenum, mode); \
    HookWrapper0(void, glInitNames); \
    HookWrapper1(void, glLoadName, GLuint, name); \
    HookWrapper1(void, glPassThrough, GLfloat, token); \
    HookWrapper0(void, glPopName); \
    HookWrapper1(void, glPushName, GLuint, name); \
    HookWrapper4(void, glClearAccum, GLfloat, red, GLfloat, green, GLfloat, blue, GLfloat, alpha); \
    HookWrapper1(void, glClearIndex, GLfloat, c); \
    HookWrapper1(void, glIndexMask, GLuint, mask); \
    HookWrapper2(void, glAccum, GLenum, op, GLfloat, value); \
    HookWrapper0(void, glPopAttrib); \
    HookWrapper1(void, glPushAttrib, GLbitfield, mask); \
    HookWrapper6(void, glMap1d, GLenum, target, GLdouble, u1, GLdouble, u2, GLint, stride, GLint, order, const GLdouble *, points); \
    HookWrapper6(void, glMap1f, GLenum, target, GLfloat, u1, GLfloat, u2, GLint, stride, GLint, order, const GLfloat *, points); \
    HookWrapper10(void, glMap2d, GLenum, target, GLdouble, u1, GLdouble, u2, GLint, ustride, GLint, uorder, GLdouble, v1, GLdouble, v2, GLint, vstride, GLint, vorder, const GLdouble *, points); \
    HookWrapper10(void, glMap2f, GLenum, target, GLfloat, u1, GLfloat, u2, GLint, ustride, GLint, uorder, GLfloat, v1, GLfloat, v2, GLint, vstride, GLint, vorder, const GLfloat *, points); \
    HookWrapper3(void, glMapGrid1d, GLint, un, GLdouble, u1, GLdouble, u2); \
    HookWrapper3(void, glMapGrid1f, GLint, un, GLfloat, u1, GLfloat, u2); \
    HookWrapper6(void, glMapGrid2d, GLint, un, GLdouble, u1, GLdouble, u2, GLint, vn, GLdouble, v1, GLdouble, v2); \
    HookWrapper6(void, glMapGrid2f, GLint, un, GLfloat, u1, GLfloat, u2, GLint, vn, GLfloat, v1, GLfloat, v2); \
    HookWrapper1(void, glEvalCoord1d, GLdouble, u); \
    HookWrapper1(void, glEvalCoord1dv, const GLdouble *, u); \
    HookWrapper1(void, glEvalCoord1f, GLfloat, u); \
    HookWrapper1(void, glEvalCoord1fv, const GLfloat *, u); \
    HookWrapper2(void, glEvalCoord2d, GLdouble, u, GLdouble, v); \
    HookWrapper1(void, glEvalCoord2dv, const GLdouble *, u); \
    HookWrapper2(void, glEvalCoord2f, GLfloat, u, GLfloat, v); \
    HookWrapper1(void, glEvalCoord2fv, const GLfloat *, u); \
    HookWrapper3(void, glEvalMesh1, GLenum, mode, GLint, i1, GLint, i2); \
    HookWrapper1(void, glEvalPoint1, GLint, i); \
    HookWrapper5(void, glEvalMesh2, GLenum, mode, GLint, i1, GLint, i2, GLint, j1, GLint, j2); \
    HookWrapper2(void, glEvalPoint2, GLint, i, GLint, j); \
    HookWrapper2(void, glAlphaFunc, GLenum, func, GLfloat, ref); \
    HookWrapper2(void, glPixelZoom, GLfloat, xfactor, GLfloat, yfactor); \
    HookWrapper2(void, glPixelTransferf, GLenum, pname, GLfloat, param); \
    HookWrapper2(void, glPixelTransferi, GLenum, pname, GLint, param); \
    HookWrapper3(void, glPixelMapfv, GLenum, map, GLsizei, mapsize, const GLfloat *, values); \
    HookWrapper3(void, glPixelMapuiv, GLenum, map, GLsizei, mapsize, const GLuint *, values); \
    HookWrapper3(void, glPixelMapusv, GLenum, map, GLsizei, mapsize, const GLushort *, values); \
    HookWrapper5(void, glCopyPixels, GLint, x, GLint, y, GLsizei, width, GLsizei, height, GLenum, type); \
    HookWrapper5(void, glDrawPixels, GLsizei, width, GLsizei, height, GLenum, format, GLenum, type, const void *, pixels); \
    HookWrapper2(void, glGetClipPlane, GLenum, plane, GLdouble *, equation); \
    HookWrapper3(void, glGetLightfv, GLenum, light, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetLightiv, GLenum, light, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetMapdv, GLenum, target, GLenum, query, GLdouble *, v); \
    HookWrapper3(void, glGetMapfv, GLenum, target, GLenum, query, GLfloat *, v); \
    HookWrapper3(void, glGetMapiv, GLenum, target, GLenum, query, GLint *, v); \
    HookWrapper3(void, glGetMaterialfv, GLenum, face, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetMaterialiv, GLenum, face, GLenum, pname, GLint *, params); \
    HookWrapper2(void, glGetPixelMapfv, GLenum, map, GLfloat *, values); \
    HookWrapper2(void, glGetPixelMapuiv, GLenum, map, GLuint *, values); \
    HookWrapper2(void, glGetPixelMapusv, GLenum, map, GLushort *, values); \
    HookWrapper1(void, glGetPolygonStipple, GLubyte *, mask); \
    HookWrapper3(void, glGetTexEnvfv, GLenum, target, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetTexEnviv, GLenum, target, GLenum, pname, GLint *, params); \
    HookWrapper3(void, glGetTexGendv, GLenum, coord, GLenum, pname, GLdouble *, params); \
    HookWrapper3(void, glGetTexGenfv, GLenum, coord, GLenum, pname, GLfloat *, params); \
    HookWrapper3(void, glGetTexGeniv, GLenum, coord, GLenum, pname, GLint *, params); \
    HookWrapper1(GLboolean, glIsList, GLuint, list); \
    HookWrapper6(void, glFrustum, GLdouble, left, GLdouble, right, GLdouble, bottom, GLdouble, top, GLdouble, zNear, GLdouble, zFar); \
    HookWrapper0(void, glLoadIdentity); \
    HookWrapper1(void, glLoadMatrixf, const GLfloat *, m); \
    HookWrapper1(void, glLoadMatrixd, const GLdouble *, m); \
    HookWrapper1(void, glMatrixMode, GLenum, mode); \
    HookWrapper1(void, glMultMatrixf, const GLfloat *, m); \
    HookWrapper1(void, glMultMatrixd, const GLdouble *, m); \
    HookWrapper6(void, glOrtho, GLdouble, left, GLdouble, right, GLdouble, bottom, GLdouble, top, GLdouble, zNear, GLdouble, zFar); \
    HookWrapper0(void, glPopMatrix); \
    HookWrapper0(void, glPushMatrix); \
    HookWrapper4(void, glRotated, GLdouble, angle, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper4(void, glRotatef, GLfloat, angle, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper3(void, glScaled, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper3(void, glScalef, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper3(void, glTranslated, GLdouble, x, GLdouble, y, GLdouble, z); \
    HookWrapper3(void, glTranslatef, GLfloat, x, GLfloat, y, GLfloat, z); \
    HookWrapper1(void, glArrayElement, GLint, i); \
    HookWrapper4(void, glColorPointer, GLint, size, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper1(void, glDisableClientState, GLenum, array); \
    HookWrapper2(void, glEdgeFlagPointer, GLsizei, stride, const void *, pointer); \
    HookWrapper1(void, glEnableClientState, GLenum, array); \
    HookWrapper3(void, glIndexPointer, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper3(void, glInterleavedArrays, GLenum, format, GLsizei, stride, const void *, pointer); \
    HookWrapper3(void, glNormalPointer, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper4(void, glTexCoordPointer, GLint, size, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper4(void, glVertexPointer, GLint, size, GLenum, type, GLsizei, stride, const void *, pointer); \
    HookWrapper3(GLboolean, glAreTexturesResident, GLsizei, n, const GLuint *, textures, GLboolean *, residences); \
    HookWrapper3(void, glPrioritizeTextures, GLsizei, n, const GLuint *, textures, const GLfloat *, priorities); \
    HookWrapper1(void, glIndexub, GLubyte, c); \
    HookWrapper1(void, glIndexubv, const GLubyte *, c); \
    HookWrapper0(void, glPopClientAttrib); \
    HookWrapper1(void, glPushClientAttrib, GLbitfield, mask); \



#define CheckUnsupported() \
    HandleUnsupported(PFNGLSPECIALIZESHADERPROC, glSpecializeShader); \
    HandleUnsupported(PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC, glMultiDrawArraysIndirectCount); \
    HandleUnsupported(PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC, glMultiDrawElementsIndirectCount); \
    HandleUnsupported(PFNGLPOLYGONOFFSETCLAMPPROC, glPolygonOffsetClamp); \
    HandleUnsupported(PFNGLPRIMITIVEBOUNDINGBOXARBPROC, glPrimitiveBoundingBoxARB); \
    HandleUnsupported(PFNGLGETTEXTUREHANDLEARBPROC, glGetTextureHandleARB); \
    HandleUnsupported(PFNGLGETTEXTURESAMPLERHANDLEARBPROC, glGetTextureSamplerHandleARB); \
    HandleUnsupported(PFNGLMAKETEXTUREHANDLERESIDENTARBPROC, glMakeTextureHandleResidentARB); \
    HandleUnsupported(PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC, glMakeTextureHandleNonResidentARB); \
    HandleUnsupported(PFNGLGETIMAGEHANDLEARBPROC, glGetImageHandleARB); \
    HandleUnsupported(PFNGLMAKEIMAGEHANDLERESIDENTARBPROC, glMakeImageHandleResidentARB); \
    HandleUnsupported(PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC, glMakeImageHandleNonResidentARB); \
    HandleUnsupported(PFNGLUNIFORMHANDLEUI64ARBPROC, glUniformHandleui64ARB); \
    HandleUnsupported(PFNGLUNIFORMHANDLEUI64VARBPROC, glUniformHandleui64vARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC, glProgramUniformHandleui64ARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC, glProgramUniformHandleui64vARB); \
    HandleUnsupported(PFNGLISTEXTUREHANDLERESIDENTARBPROC, glIsTextureHandleResidentARB); \
    HandleUnsupported(PFNGLISIMAGEHANDLERESIDENTARBPROC, glIsImageHandleResidentARB); \
    HandleUnsupported(PFNGLVERTEXATTRIBL1UI64ARBPROC, glVertexAttribL1ui64ARB); \
    HandleUnsupported(PFNGLVERTEXATTRIBL1UI64VARBPROC, glVertexAttribL1ui64vARB); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBLUI64VARBPROC, glGetVertexAttribLui64vARB); \
    HandleUnsupported(PFNGLCREATESYNCFROMCLEVENTARBPROC, glCreateSyncFromCLeventARB); \
    HandleUnsupported(PFNGLFRAMEBUFFERTEXTUREFACEARBPROC, glFramebufferTextureFaceARB); \
    HandleUnsupported(PFNGLSPECIALIZESHADERARBPROC, glSpecializeShaderARB); \
    HandleUnsupported(PFNGLUNIFORM1I64ARBPROC, glUniform1i64ARB); \
    HandleUnsupported(PFNGLUNIFORM2I64ARBPROC, glUniform2i64ARB); \
    HandleUnsupported(PFNGLUNIFORM3I64ARBPROC, glUniform3i64ARB); \
    HandleUnsupported(PFNGLUNIFORM4I64ARBPROC, glUniform4i64ARB); \
    HandleUnsupported(PFNGLUNIFORM1I64VARBPROC, glUniform1i64vARB); \
    HandleUnsupported(PFNGLUNIFORM2I64VARBPROC, glUniform2i64vARB); \
    HandleUnsupported(PFNGLUNIFORM3I64VARBPROC, glUniform3i64vARB); \
    HandleUnsupported(PFNGLUNIFORM4I64VARBPROC, glUniform4i64vARB); \
    HandleUnsupported(PFNGLUNIFORM1UI64ARBPROC, glUniform1ui64ARB); \
    HandleUnsupported(PFNGLUNIFORM2UI64ARBPROC, glUniform2ui64ARB); \
    HandleUnsupported(PFNGLUNIFORM3UI64ARBPROC, glUniform3ui64ARB); \
    HandleUnsupported(PFNGLUNIFORM4UI64ARBPROC, glUniform4ui64ARB); \
    HandleUnsupported(PFNGLUNIFORM1UI64VARBPROC, glUniform1ui64vARB); \
    HandleUnsupported(PFNGLUNIFORM2UI64VARBPROC, glUniform2ui64vARB); \
    HandleUnsupported(PFNGLUNIFORM3UI64VARBPROC, glUniform3ui64vARB); \
    HandleUnsupported(PFNGLUNIFORM4UI64VARBPROC, glUniform4ui64vARB); \
    HandleUnsupported(PFNGLGETUNIFORMI64VARBPROC, glGetUniformi64vARB); \
    HandleUnsupported(PFNGLGETUNIFORMUI64VARBPROC, glGetUniformui64vARB); \
    HandleUnsupported(PFNGLGETNUNIFORMI64VARBPROC, glGetnUniformi64vARB); \
    HandleUnsupported(PFNGLGETNUNIFORMUI64VARBPROC, glGetnUniformui64vARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1I64ARBPROC, glProgramUniform1i64ARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2I64ARBPROC, glProgramUniform2i64ARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3I64ARBPROC, glProgramUniform3i64ARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4I64ARBPROC, glProgramUniform4i64ARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1I64VARBPROC, glProgramUniform1i64vARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2I64VARBPROC, glProgramUniform2i64vARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3I64VARBPROC, glProgramUniform3i64vARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4I64VARBPROC, glProgramUniform4i64vARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1UI64ARBPROC, glProgramUniform1ui64ARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2UI64ARBPROC, glProgramUniform2ui64ARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3UI64ARBPROC, glProgramUniform3ui64ARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4UI64ARBPROC, glProgramUniform4ui64ARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1UI64VARBPROC, glProgramUniform1ui64vARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2UI64VARBPROC, glProgramUniform2ui64vARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3UI64VARBPROC, glProgramUniform3ui64vARB); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4UI64VARBPROC, glProgramUniform4ui64vARB); \
    HandleUnsupported(PFNGLMAXSHADERCOMPILERTHREADSARBPROC, glMaxShaderCompilerThreadsARB); \
    HandleUnsupported(PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC, glFramebufferSampleLocationsfvARB); \
    HandleUnsupported(PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC, glNamedFramebufferSampleLocationsfvARB); \
    HandleUnsupported(PFNGLEVALUATEDEPTHVALUESARBPROC, glEvaluateDepthValuesARB); \
    HandleUnsupported(PFNGLBUFFERPAGECOMMITMENTARBPROC, glBufferPageCommitmentARB); \
    HandleUnsupported(PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC, glNamedBufferPageCommitmentEXT); \
    HandleUnsupported(PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC, glNamedBufferPageCommitmentARB); \
    HandleUnsupported(PFNGLTEXPAGECOMMITMENTARBPROC, glTexPageCommitmentARB); \
    HandleUnsupported(PFNGLMAXSHADERCOMPILERTHREADSKHRPROC, glMaxShaderCompilerThreadsKHR); \
    HandleUnsupported(PFNGLGETPERFMONITORGROUPSAMDPROC, glGetPerfMonitorGroupsAMD); \
    HandleUnsupported(PFNGLGETPERFMONITORCOUNTERSAMDPROC, glGetPerfMonitorCountersAMD); \
    HandleUnsupported(PFNGLGETPERFMONITORGROUPSTRINGAMDPROC, glGetPerfMonitorGroupStringAMD); \
    HandleUnsupported(PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC, glGetPerfMonitorCounterStringAMD); \
    HandleUnsupported(PFNGLGETPERFMONITORCOUNTERINFOAMDPROC, glGetPerfMonitorCounterInfoAMD); \
    HandleUnsupported(PFNGLGENPERFMONITORSAMDPROC, glGenPerfMonitorsAMD); \
    HandleUnsupported(PFNGLDELETEPERFMONITORSAMDPROC, glDeletePerfMonitorsAMD); \
    HandleUnsupported(PFNGLSELECTPERFMONITORCOUNTERSAMDPROC, glSelectPerfMonitorCountersAMD); \
    HandleUnsupported(PFNGLBEGINPERFMONITORAMDPROC, glBeginPerfMonitorAMD); \
    HandleUnsupported(PFNGLENDPERFMONITORAMDPROC, glEndPerfMonitorAMD); \
    HandleUnsupported(PFNGLGETPERFMONITORCOUNTERDATAAMDPROC, glGetPerfMonitorCounterDataAMD); \
    HandleUnsupported(PFNGLMATRIXLOADFEXTPROC, glMatrixLoadfEXT); \
    HandleUnsupported(PFNGLMATRIXLOADDEXTPROC, glMatrixLoaddEXT); \
    HandleUnsupported(PFNGLMATRIXMULTFEXTPROC, glMatrixMultfEXT); \
    HandleUnsupported(PFNGLMATRIXMULTDEXTPROC, glMatrixMultdEXT); \
    HandleUnsupported(PFNGLMATRIXLOADIDENTITYEXTPROC, glMatrixLoadIdentityEXT); \
    HandleUnsupported(PFNGLMATRIXROTATEFEXTPROC, glMatrixRotatefEXT); \
    HandleUnsupported(PFNGLMATRIXROTATEDEXTPROC, glMatrixRotatedEXT); \
    HandleUnsupported(PFNGLMATRIXSCALEFEXTPROC, glMatrixScalefEXT); \
    HandleUnsupported(PFNGLMATRIXSCALEDEXTPROC, glMatrixScaledEXT); \
    HandleUnsupported(PFNGLMATRIXTRANSLATEFEXTPROC, glMatrixTranslatefEXT); \
    HandleUnsupported(PFNGLMATRIXTRANSLATEDEXTPROC, glMatrixTranslatedEXT); \
    HandleUnsupported(PFNGLMATRIXFRUSTUMEXTPROC, glMatrixFrustumEXT); \
    HandleUnsupported(PFNGLMATRIXORTHOEXTPROC, glMatrixOrthoEXT); \
    HandleUnsupported(PFNGLMATRIXPOPEXTPROC, glMatrixPopEXT); \
    HandleUnsupported(PFNGLMATRIXPUSHEXTPROC, glMatrixPushEXT); \
    HandleUnsupported(PFNGLCLIENTATTRIBDEFAULTEXTPROC, glClientAttribDefaultEXT); \
    HandleUnsupported(PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC, glPushClientAttribDefaultEXT); \
    HandleUnsupported(PFNGLMULTITEXCOORDPOINTEREXTPROC, glMultiTexCoordPointerEXT); \
    HandleUnsupported(PFNGLMULTITEXENVFEXTPROC, glMultiTexEnvfEXT); \
    HandleUnsupported(PFNGLMULTITEXENVFVEXTPROC, glMultiTexEnvfvEXT); \
    HandleUnsupported(PFNGLMULTITEXENVIEXTPROC, glMultiTexEnviEXT); \
    HandleUnsupported(PFNGLMULTITEXENVIVEXTPROC, glMultiTexEnvivEXT); \
    HandleUnsupported(PFNGLMULTITEXGENDEXTPROC, glMultiTexGendEXT); \
    HandleUnsupported(PFNGLMULTITEXGENDVEXTPROC, glMultiTexGendvEXT); \
    HandleUnsupported(PFNGLMULTITEXGENFEXTPROC, glMultiTexGenfEXT); \
    HandleUnsupported(PFNGLMULTITEXGENFVEXTPROC, glMultiTexGenfvEXT); \
    HandleUnsupported(PFNGLMULTITEXGENIEXTPROC, glMultiTexGeniEXT); \
    HandleUnsupported(PFNGLMULTITEXGENIVEXTPROC, glMultiTexGenivEXT); \
    HandleUnsupported(PFNGLGETMULTITEXENVFVEXTPROC, glGetMultiTexEnvfvEXT); \
    HandleUnsupported(PFNGLGETMULTITEXENVIVEXTPROC, glGetMultiTexEnvivEXT); \
    HandleUnsupported(PFNGLGETMULTITEXGENDVEXTPROC, glGetMultiTexGendvEXT); \
    HandleUnsupported(PFNGLGETMULTITEXGENFVEXTPROC, glGetMultiTexGenfvEXT); \
    HandleUnsupported(PFNGLGETMULTITEXGENIVEXTPROC, glGetMultiTexGenivEXT); \
    HandleUnsupported(PFNGLENABLECLIENTSTATEINDEXEDEXTPROC, glEnableClientStateIndexedEXT); \
    HandleUnsupported(PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC, glDisableClientStateIndexedEXT); \
    HandleUnsupported(PFNGLMATRIXLOADTRANSPOSEFEXTPROC, glMatrixLoadTransposefEXT); \
    HandleUnsupported(PFNGLMATRIXLOADTRANSPOSEDEXTPROC, glMatrixLoadTransposedEXT); \
    HandleUnsupported(PFNGLMATRIXMULTTRANSPOSEFEXTPROC, glMatrixMultTransposefEXT); \
    HandleUnsupported(PFNGLMATRIXMULTTRANSPOSEDEXTPROC, glMatrixMultTransposedEXT); \
    HandleUnsupported(PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC, glNamedProgramLocalParameters4fvEXT); \
    HandleUnsupported(PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC, glNamedProgramLocalParameterI4iEXT); \
    HandleUnsupported(PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC, glNamedProgramLocalParameterI4ivEXT); \
    HandleUnsupported(PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC, glNamedProgramLocalParametersI4ivEXT); \
    HandleUnsupported(PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC, glNamedProgramLocalParameterI4uiEXT); \
    HandleUnsupported(PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC, glNamedProgramLocalParameterI4uivEXT); \
    HandleUnsupported(PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC, glNamedProgramLocalParametersI4uivEXT); \
    HandleUnsupported(PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC, glGetNamedProgramLocalParameterIivEXT); \
    HandleUnsupported(PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC, glGetNamedProgramLocalParameterIuivEXT); \
    HandleUnsupported(PFNGLENABLECLIENTSTATEIEXTPROC, glEnableClientStateiEXT); \
    HandleUnsupported(PFNGLDISABLECLIENTSTATEIEXTPROC, glDisableClientStateiEXT); \
    HandleUnsupported(PFNGLNAMEDPROGRAMSTRINGEXTPROC, glNamedProgramStringEXT); \
    HandleUnsupported(PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC, glNamedProgramLocalParameter4dEXT); \
    HandleUnsupported(PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC, glNamedProgramLocalParameter4dvEXT); \
    HandleUnsupported(PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC, glNamedProgramLocalParameter4fEXT); \
    HandleUnsupported(PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC, glNamedProgramLocalParameter4fvEXT); \
    HandleUnsupported(PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC, glGetNamedProgramLocalParameterdvEXT); \
    HandleUnsupported(PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC, glGetNamedProgramLocalParameterfvEXT); \
    HandleUnsupported(PFNGLGETNAMEDPROGRAMSTRINGEXTPROC, glGetNamedProgramStringEXT); \
    HandleUnsupported(PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC, glNamedRenderbufferStorageMultisampleCoverageEXT); \
    HandleUnsupported(PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC, glNamedFramebufferTextureFaceEXT); \
    HandleUnsupported(PFNGLTEXTURERENDERBUFFEREXTPROC, glTextureRenderbufferEXT); \
    HandleUnsupported(PFNGLMULTITEXRENDERBUFFEREXTPROC, glMultiTexRenderbufferEXT); \
    HandleUnsupported(PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC, glVertexArrayVertexOffsetEXT); \
    HandleUnsupported(PFNGLVERTEXARRAYCOLOROFFSETEXTPROC, glVertexArrayColorOffsetEXT); \
    HandleUnsupported(PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC, glVertexArrayEdgeFlagOffsetEXT); \
    HandleUnsupported(PFNGLVERTEXARRAYINDEXOFFSETEXTPROC, glVertexArrayIndexOffsetEXT); \
    HandleUnsupported(PFNGLVERTEXARRAYNORMALOFFSETEXTPROC, glVertexArrayNormalOffsetEXT); \
    HandleUnsupported(PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC, glVertexArrayTexCoordOffsetEXT); \
    HandleUnsupported(PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC, glVertexArrayMultiTexCoordOffsetEXT); \
    HandleUnsupported(PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC, glVertexArrayFogCoordOffsetEXT); \
    HandleUnsupported(PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC, glVertexArraySecondaryColorOffsetEXT); \
    HandleUnsupported(PFNGLENABLEVERTEXARRAYEXTPROC, glEnableVertexArrayEXT); \
    HandleUnsupported(PFNGLDISABLEVERTEXARRAYEXTPROC, glDisableVertexArrayEXT); \
    HandleUnsupported(PFNGLTEXTUREPAGECOMMITMENTEXTPROC, glTexturePageCommitmentEXT); \
    HandleUnsupported(PFNGLUSESHADERPROGRAMEXTPROC, glUseShaderProgramEXT); \
    HandleUnsupported(PFNGLACTIVEPROGRAMEXTPROC, glActiveProgramEXT); \
    HandleUnsupported(PFNGLCREATESHADERPROGRAMEXTPROC, glCreateShaderProgramEXT); \
    HandleUnsupported(PFNGLWINDOWRECTANGLESEXTPROC, glWindowRectanglesEXT); \
    HandleUnsupported(PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC, glApplyFramebufferAttachmentCMAAINTEL); \
    HandleUnsupported(PFNGLBEGINPERFQUERYINTELPROC, glBeginPerfQueryINTEL); \
    HandleUnsupported(PFNGLCREATEPERFQUERYINTELPROC, glCreatePerfQueryINTEL); \
    HandleUnsupported(PFNGLDELETEPERFQUERYINTELPROC, glDeletePerfQueryINTEL); \
    HandleUnsupported(PFNGLENDPERFQUERYINTELPROC, glEndPerfQueryINTEL); \
    HandleUnsupported(PFNGLGETFIRSTPERFQUERYIDINTELPROC, glGetFirstPerfQueryIdINTEL); \
    HandleUnsupported(PFNGLGETNEXTPERFQUERYIDINTELPROC, glGetNextPerfQueryIdINTEL); \
    HandleUnsupported(PFNGLGETPERFCOUNTERINFOINTELPROC, glGetPerfCounterInfoINTEL); \
    HandleUnsupported(PFNGLGETPERFQUERYDATAINTELPROC, glGetPerfQueryDataINTEL); \
    HandleUnsupported(PFNGLGETPERFQUERYIDBYNAMEINTELPROC, glGetPerfQueryIdByNameINTEL); \
    HandleUnsupported(PFNGLGETPERFQUERYINFOINTELPROC, glGetPerfQueryInfoINTEL); \
    HandleUnsupported(PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC, glMultiDrawArraysIndirectBindlessNV); \
    HandleUnsupported(PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC, glMultiDrawElementsIndirectBindlessNV); \
    HandleUnsupported(PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC, glMultiDrawArraysIndirectBindlessCountNV); \
    HandleUnsupported(PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC, glMultiDrawElementsIndirectBindlessCountNV); \
    HandleUnsupported(PFNGLGETTEXTUREHANDLENVPROC, glGetTextureHandleNV); \
    HandleUnsupported(PFNGLGETTEXTURESAMPLERHANDLENVPROC, glGetTextureSamplerHandleNV); \
    HandleUnsupported(PFNGLMAKETEXTUREHANDLERESIDENTNVPROC, glMakeTextureHandleResidentNV); \
    HandleUnsupported(PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC, glMakeTextureHandleNonResidentNV); \
    HandleUnsupported(PFNGLGETIMAGEHANDLENVPROC, glGetImageHandleNV); \
    HandleUnsupported(PFNGLMAKEIMAGEHANDLERESIDENTNVPROC, glMakeImageHandleResidentNV); \
    HandleUnsupported(PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC, glMakeImageHandleNonResidentNV); \
    HandleUnsupported(PFNGLUNIFORMHANDLEUI64NVPROC, glUniformHandleui64NV); \
    HandleUnsupported(PFNGLUNIFORMHANDLEUI64VNVPROC, glUniformHandleui64vNV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC, glProgramUniformHandleui64NV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC, glProgramUniformHandleui64vNV); \
    HandleUnsupported(PFNGLISTEXTUREHANDLERESIDENTNVPROC, glIsTextureHandleResidentNV); \
    HandleUnsupported(PFNGLISIMAGEHANDLERESIDENTNVPROC, glIsImageHandleResidentNV); \
    HandleUnsupported(PFNGLBLENDPARAMETERINVPROC, glBlendParameteriNV); \
    HandleUnsupported(PFNGLBLENDBARRIERNVPROC, glBlendBarrierNV); \
    HandleUnsupported(PFNGLVIEWPORTPOSITIONWSCALENVPROC, glViewportPositionWScaleNV); \
    HandleUnsupported(PFNGLCREATESTATESNVPROC, glCreateStatesNV); \
    HandleUnsupported(PFNGLDELETESTATESNVPROC, glDeleteStatesNV); \
    HandleUnsupported(PFNGLISSTATENVPROC, glIsStateNV); \
    HandleUnsupported(PFNGLSTATECAPTURENVPROC, glStateCaptureNV); \
    HandleUnsupported(PFNGLGETCOMMANDHEADERNVPROC, glGetCommandHeaderNV); \
    HandleUnsupported(PFNGLGETSTAGEINDEXNVPROC, glGetStageIndexNV); \
    HandleUnsupported(PFNGLDRAWCOMMANDSNVPROC, glDrawCommandsNV); \
    HandleUnsupported(PFNGLDRAWCOMMANDSADDRESSNVPROC, glDrawCommandsAddressNV); \
    HandleUnsupported(PFNGLDRAWCOMMANDSSTATESNVPROC, glDrawCommandsStatesNV); \
    HandleUnsupported(PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC, glDrawCommandsStatesAddressNV); \
    HandleUnsupported(PFNGLCREATECOMMANDLISTSNVPROC, glCreateCommandListsNV); \
    HandleUnsupported(PFNGLDELETECOMMANDLISTSNVPROC, glDeleteCommandListsNV); \
    HandleUnsupported(PFNGLISCOMMANDLISTNVPROC, glIsCommandListNV); \
    HandleUnsupported(PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC, glListDrawCommandsStatesClientNV); \
    HandleUnsupported(PFNGLCOMMANDLISTSEGMENTSNVPROC, glCommandListSegmentsNV); \
    HandleUnsupported(PFNGLCOMPILECOMMANDLISTNVPROC, glCompileCommandListNV); \
    HandleUnsupported(PFNGLCALLCOMMANDLISTNVPROC, glCallCommandListNV); \
    HandleUnsupported(PFNGLBEGINCONDITIONALRENDERNVPROC, glBeginConditionalRenderNV); \
    HandleUnsupported(PFNGLENDCONDITIONALRENDERNVPROC, glEndConditionalRenderNV); \
    HandleUnsupported(PFNGLSUBPIXELPRECISIONBIASNVPROC, glSubpixelPrecisionBiasNV); \
    HandleUnsupported(PFNGLCONSERVATIVERASTERPARAMETERFNVPROC, glConservativeRasterParameterfNV); \
    HandleUnsupported(PFNGLCONSERVATIVERASTERPARAMETERINVPROC, glConservativeRasterParameteriNV); \
    HandleUnsupported(PFNGLDRAWVKIMAGENVPROC, glDrawVkImageNV); \
    HandleUnsupported(PFNGLGETVKPROCADDRNVPROC, glGetVkProcAddrNV); \
    HandleUnsupported(PFNGLWAITVKSEMAPHORENVPROC, glWaitVkSemaphoreNV); \
    HandleUnsupported(PFNGLSIGNALVKSEMAPHORENVPROC, glSignalVkSemaphoreNV); \
    HandleUnsupported(PFNGLSIGNALVKFENCENVPROC, glSignalVkFenceNV); \
    HandleUnsupported(PFNGLFRAGMENTCOVERAGECOLORNVPROC, glFragmentCoverageColorNV); \
    HandleUnsupported(PFNGLCOVERAGEMODULATIONTABLENVPROC, glCoverageModulationTableNV); \
    HandleUnsupported(PFNGLGETCOVERAGEMODULATIONTABLENVPROC, glGetCoverageModulationTableNV); \
    HandleUnsupported(PFNGLCOVERAGEMODULATIONNVPROC, glCoverageModulationNV); \
    HandleUnsupported(PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC, glRenderbufferStorageMultisampleCoverageNV); \
    HandleUnsupported(PFNGLUNIFORM1I64NVPROC, glUniform1i64NV); \
    HandleUnsupported(PFNGLUNIFORM2I64NVPROC, glUniform2i64NV); \
    HandleUnsupported(PFNGLUNIFORM3I64NVPROC, glUniform3i64NV); \
    HandleUnsupported(PFNGLUNIFORM4I64NVPROC, glUniform4i64NV); \
    HandleUnsupported(PFNGLUNIFORM1I64VNVPROC, glUniform1i64vNV); \
    HandleUnsupported(PFNGLUNIFORM2I64VNVPROC, glUniform2i64vNV); \
    HandleUnsupported(PFNGLUNIFORM3I64VNVPROC, glUniform3i64vNV); \
    HandleUnsupported(PFNGLUNIFORM4I64VNVPROC, glUniform4i64vNV); \
    HandleUnsupported(PFNGLUNIFORM1UI64NVPROC, glUniform1ui64NV); \
    HandleUnsupported(PFNGLUNIFORM2UI64NVPROC, glUniform2ui64NV); \
    HandleUnsupported(PFNGLUNIFORM3UI64NVPROC, glUniform3ui64NV); \
    HandleUnsupported(PFNGLUNIFORM4UI64NVPROC, glUniform4ui64NV); \
    HandleUnsupported(PFNGLUNIFORM1UI64VNVPROC, glUniform1ui64vNV); \
    HandleUnsupported(PFNGLUNIFORM2UI64VNVPROC, glUniform2ui64vNV); \
    HandleUnsupported(PFNGLUNIFORM3UI64VNVPROC, glUniform3ui64vNV); \
    HandleUnsupported(PFNGLUNIFORM4UI64VNVPROC, glUniform4ui64vNV); \
    HandleUnsupported(PFNGLGETUNIFORMI64VNVPROC, glGetUniformi64vNV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1I64NVPROC, glProgramUniform1i64NV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2I64NVPROC, glProgramUniform2i64NV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3I64NVPROC, glProgramUniform3i64NV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4I64NVPROC, glProgramUniform4i64NV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1I64VNVPROC, glProgramUniform1i64vNV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2I64VNVPROC, glProgramUniform2i64vNV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3I64VNVPROC, glProgramUniform3i64vNV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4I64VNVPROC, glProgramUniform4i64vNV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1UI64NVPROC, glProgramUniform1ui64NV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2UI64NVPROC, glProgramUniform2ui64NV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3UI64NVPROC, glProgramUniform3ui64NV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4UI64NVPROC, glProgramUniform4ui64NV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM1UI64VNVPROC, glProgramUniform1ui64vNV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM2UI64VNVPROC, glProgramUniform2ui64vNV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM3UI64VNVPROC, glProgramUniform3ui64vNV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORM4UI64VNVPROC, glProgramUniform4ui64vNV); \
    HandleUnsupported(PFNGLGETINTERNALFORMATSAMPLEIVNVPROC, glGetInternalformatSampleivNV); \
    HandleUnsupported(PFNGLGENPATHSNVPROC, glGenPathsNV); \
    HandleUnsupported(PFNGLDELETEPATHSNVPROC, glDeletePathsNV); \
    HandleUnsupported(PFNGLISPATHNVPROC, glIsPathNV); \
    HandleUnsupported(PFNGLPATHCOMMANDSNVPROC, glPathCommandsNV); \
    HandleUnsupported(PFNGLPATHCOORDSNVPROC, glPathCoordsNV); \
    HandleUnsupported(PFNGLPATHSUBCOMMANDSNVPROC, glPathSubCommandsNV); \
    HandleUnsupported(PFNGLPATHSUBCOORDSNVPROC, glPathSubCoordsNV); \
    HandleUnsupported(PFNGLPATHSTRINGNVPROC, glPathStringNV); \
    HandleUnsupported(PFNGLPATHGLYPHSNVPROC, glPathGlyphsNV); \
    HandleUnsupported(PFNGLPATHGLYPHRANGENVPROC, glPathGlyphRangeNV); \
    HandleUnsupported(PFNGLWEIGHTPATHSNVPROC, glWeightPathsNV); \
    HandleUnsupported(PFNGLCOPYPATHNVPROC, glCopyPathNV); \
    HandleUnsupported(PFNGLINTERPOLATEPATHSNVPROC, glInterpolatePathsNV); \
    HandleUnsupported(PFNGLTRANSFORMPATHNVPROC, glTransformPathNV); \
    HandleUnsupported(PFNGLPATHPARAMETERIVNVPROC, glPathParameterivNV); \
    HandleUnsupported(PFNGLPATHPARAMETERINVPROC, glPathParameteriNV); \
    HandleUnsupported(PFNGLPATHPARAMETERFVNVPROC, glPathParameterfvNV); \
    HandleUnsupported(PFNGLPATHPARAMETERFNVPROC, glPathParameterfNV); \
    HandleUnsupported(PFNGLPATHDASHARRAYNVPROC, glPathDashArrayNV); \
    HandleUnsupported(PFNGLPATHSTENCILFUNCNVPROC, glPathStencilFuncNV); \
    HandleUnsupported(PFNGLPATHSTENCILDEPTHOFFSETNVPROC, glPathStencilDepthOffsetNV); \
    HandleUnsupported(PFNGLSTENCILFILLPATHNVPROC, glStencilFillPathNV); \
    HandleUnsupported(PFNGLSTENCILSTROKEPATHNVPROC, glStencilStrokePathNV); \
    HandleUnsupported(PFNGLSTENCILFILLPATHINSTANCEDNVPROC, glStencilFillPathInstancedNV); \
    HandleUnsupported(PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC, glStencilStrokePathInstancedNV); \
    HandleUnsupported(PFNGLPATHCOVERDEPTHFUNCNVPROC, glPathCoverDepthFuncNV); \
    HandleUnsupported(PFNGLCOVERFILLPATHNVPROC, glCoverFillPathNV); \
    HandleUnsupported(PFNGLCOVERSTROKEPATHNVPROC, glCoverStrokePathNV); \
    HandleUnsupported(PFNGLCOVERFILLPATHINSTANCEDNVPROC, glCoverFillPathInstancedNV); \
    HandleUnsupported(PFNGLCOVERSTROKEPATHINSTANCEDNVPROC, glCoverStrokePathInstancedNV); \
    HandleUnsupported(PFNGLGETPATHPARAMETERIVNVPROC, glGetPathParameterivNV); \
    HandleUnsupported(PFNGLGETPATHPARAMETERFVNVPROC, glGetPathParameterfvNV); \
    HandleUnsupported(PFNGLGETPATHCOMMANDSNVPROC, glGetPathCommandsNV); \
    HandleUnsupported(PFNGLGETPATHCOORDSNVPROC, glGetPathCoordsNV); \
    HandleUnsupported(PFNGLGETPATHDASHARRAYNVPROC, glGetPathDashArrayNV); \
    HandleUnsupported(PFNGLGETPATHMETRICSNVPROC, glGetPathMetricsNV); \
    HandleUnsupported(PFNGLGETPATHMETRICRANGENVPROC, glGetPathMetricRangeNV); \
    HandleUnsupported(PFNGLGETPATHSPACINGNVPROC, glGetPathSpacingNV); \
    HandleUnsupported(PFNGLISPOINTINFILLPATHNVPROC, glIsPointInFillPathNV); \
    HandleUnsupported(PFNGLISPOINTINSTROKEPATHNVPROC, glIsPointInStrokePathNV); \
    HandleUnsupported(PFNGLGETPATHLENGTHNVPROC, glGetPathLengthNV); \
    HandleUnsupported(PFNGLPOINTALONGPATHNVPROC, glPointAlongPathNV); \
    HandleUnsupported(PFNGLMATRIXLOAD3X2FNVPROC, glMatrixLoad3x2fNV); \
    HandleUnsupported(PFNGLMATRIXLOAD3X3FNVPROC, glMatrixLoad3x3fNV); \
    HandleUnsupported(PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC, glMatrixLoadTranspose3x3fNV); \
    HandleUnsupported(PFNGLMATRIXMULT3X2FNVPROC, glMatrixMult3x2fNV); \
    HandleUnsupported(PFNGLMATRIXMULT3X3FNVPROC, glMatrixMult3x3fNV); \
    HandleUnsupported(PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC, glMatrixMultTranspose3x3fNV); \
    HandleUnsupported(PFNGLSTENCILTHENCOVERFILLPATHNVPROC, glStencilThenCoverFillPathNV); \
    HandleUnsupported(PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC, glStencilThenCoverStrokePathNV); \
    HandleUnsupported(PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC, glStencilThenCoverFillPathInstancedNV); \
    HandleUnsupported(PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC, glStencilThenCoverStrokePathInstancedNV); \
    HandleUnsupported(PFNGLPATHGLYPHINDEXRANGENVPROC, glPathGlyphIndexRangeNV); \
    HandleUnsupported(PFNGLPATHGLYPHINDEXARRAYNVPROC, glPathGlyphIndexArrayNV); \
    HandleUnsupported(PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC, glPathMemoryGlyphIndexArrayNV); \
    HandleUnsupported(PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC, glProgramPathFragmentInputGenNV); \
    HandleUnsupported(PFNGLGETPROGRAMRESOURCEFVNVPROC, glGetProgramResourcefvNV); \
    HandleUnsupported(PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC, glFramebufferSampleLocationsfvNV); \
    HandleUnsupported(PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC, glNamedFramebufferSampleLocationsfvNV); \
    HandleUnsupported(PFNGLRESOLVEDEPTHVALUESNVPROC, glResolveDepthValuesNV); \
    HandleUnsupported(PFNGLMAKEBUFFERRESIDENTNVPROC, glMakeBufferResidentNV); \
    HandleUnsupported(PFNGLMAKEBUFFERNONRESIDENTNVPROC, glMakeBufferNonResidentNV); \
    HandleUnsupported(PFNGLISBUFFERRESIDENTNVPROC, glIsBufferResidentNV); \
    HandleUnsupported(PFNGLMAKENAMEDBUFFERRESIDENTNVPROC, glMakeNamedBufferResidentNV); \
    HandleUnsupported(PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC, glMakeNamedBufferNonResidentNV); \
    HandleUnsupported(PFNGLISNAMEDBUFFERRESIDENTNVPROC, glIsNamedBufferResidentNV); \
    HandleUnsupported(PFNGLGETBUFFERPARAMETERUI64VNVPROC, glGetBufferParameterui64vNV); \
    HandleUnsupported(PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC, glGetNamedBufferParameterui64vNV); \
    HandleUnsupported(PFNGLGETINTEGERUI64VNVPROC, glGetIntegerui64vNV); \
    HandleUnsupported(PFNGLUNIFORMUI64NVPROC, glUniformui64NV); \
    HandleUnsupported(PFNGLUNIFORMUI64VNVPROC, glUniformui64vNV); \
    HandleUnsupported(PFNGLGETUNIFORMUI64VNVPROC, glGetUniformui64vNV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMUI64NVPROC, glProgramUniformui64NV); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMUI64VNVPROC, glProgramUniformui64vNV); \
    HandleUnsupported(PFNGLTEXTUREBARRIERNVPROC, glTextureBarrierNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL1I64NVPROC, glVertexAttribL1i64NV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL2I64NVPROC, glVertexAttribL2i64NV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL3I64NVPROC, glVertexAttribL3i64NV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL4I64NVPROC, glVertexAttribL4i64NV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL1I64VNVPROC, glVertexAttribL1i64vNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL2I64VNVPROC, glVertexAttribL2i64vNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL3I64VNVPROC, glVertexAttribL3i64vNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL4I64VNVPROC, glVertexAttribL4i64vNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL1UI64NVPROC, glVertexAttribL1ui64NV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL2UI64NVPROC, glVertexAttribL2ui64NV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL3UI64NVPROC, glVertexAttribL3ui64NV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL4UI64NVPROC, glVertexAttribL4ui64NV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL1UI64VNVPROC, glVertexAttribL1ui64vNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL2UI64VNVPROC, glVertexAttribL2ui64vNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL3UI64VNVPROC, glVertexAttribL3ui64vNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBL4UI64VNVPROC, glVertexAttribL4ui64vNV); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBLI64VNVPROC, glGetVertexAttribLi64vNV); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBLUI64VNVPROC, glGetVertexAttribLui64vNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBLFORMATNVPROC, glVertexAttribLFormatNV); \
    HandleUnsupported(PFNGLBUFFERADDRESSRANGENVPROC, glBufferAddressRangeNV); \
    HandleUnsupported(PFNGLVERTEXFORMATNVPROC, glVertexFormatNV); \
    HandleUnsupported(PFNGLNORMALFORMATNVPROC, glNormalFormatNV); \
    HandleUnsupported(PFNGLCOLORFORMATNVPROC, glColorFormatNV); \
    HandleUnsupported(PFNGLINDEXFORMATNVPROC, glIndexFormatNV); \
    HandleUnsupported(PFNGLTEXCOORDFORMATNVPROC, glTexCoordFormatNV); \
    HandleUnsupported(PFNGLEDGEFLAGFORMATNVPROC, glEdgeFlagFormatNV); \
    HandleUnsupported(PFNGLSECONDARYCOLORFORMATNVPROC, glSecondaryColorFormatNV); \
    HandleUnsupported(PFNGLFOGCOORDFORMATNVPROC, glFogCoordFormatNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBFORMATNVPROC, glVertexAttribFormatNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBIFORMATNVPROC, glVertexAttribIFormatNV); \
    HandleUnsupported(PFNGLGETINTEGERUI64I_VNVPROC, glGetIntegerui64i_vNV); \
    HandleUnsupported(PFNGLVIEWPORTSWIZZLENVPROC, glViewportSwizzleNV); \
    HandleUnsupported(PFNGLCLIENTACTIVETEXTUREPROC, glClientActiveTexture); \
    HandleUnsupported(PFNGLMULTITEXCOORD1DPROC, glMultiTexCoord1d); \
    HandleUnsupported(PFNGLMULTITEXCOORD1DVPROC, glMultiTexCoord1dv); \
    HandleUnsupported(PFNGLMULTITEXCOORD1FPROC, glMultiTexCoord1f); \
    HandleUnsupported(PFNGLMULTITEXCOORD1FVPROC, glMultiTexCoord1fv); \
    HandleUnsupported(PFNGLMULTITEXCOORD1IPROC, glMultiTexCoord1i); \
    HandleUnsupported(PFNGLMULTITEXCOORD1IVPROC, glMultiTexCoord1iv); \
    HandleUnsupported(PFNGLMULTITEXCOORD1SPROC, glMultiTexCoord1s); \
    HandleUnsupported(PFNGLMULTITEXCOORD1SVPROC, glMultiTexCoord1sv); \
    HandleUnsupported(PFNGLMULTITEXCOORD2DPROC, glMultiTexCoord2d); \
    HandleUnsupported(PFNGLMULTITEXCOORD2DVPROC, glMultiTexCoord2dv); \
    HandleUnsupported(PFNGLMULTITEXCOORD2FPROC, glMultiTexCoord2f); \
    HandleUnsupported(PFNGLMULTITEXCOORD2FVPROC, glMultiTexCoord2fv); \
    HandleUnsupported(PFNGLMULTITEXCOORD2IPROC, glMultiTexCoord2i); \
    HandleUnsupported(PFNGLMULTITEXCOORD2IVPROC, glMultiTexCoord2iv); \
    HandleUnsupported(PFNGLMULTITEXCOORD2SPROC, glMultiTexCoord2s); \
    HandleUnsupported(PFNGLMULTITEXCOORD2SVPROC, glMultiTexCoord2sv); \
    HandleUnsupported(PFNGLMULTITEXCOORD3DPROC, glMultiTexCoord3d); \
    HandleUnsupported(PFNGLMULTITEXCOORD3DVPROC, glMultiTexCoord3dv); \
    HandleUnsupported(PFNGLMULTITEXCOORD3FPROC, glMultiTexCoord3f); \
    HandleUnsupported(PFNGLMULTITEXCOORD3FVPROC, glMultiTexCoord3fv); \
    HandleUnsupported(PFNGLMULTITEXCOORD3IPROC, glMultiTexCoord3i); \
    HandleUnsupported(PFNGLMULTITEXCOORD3IVPROC, glMultiTexCoord3iv); \
    HandleUnsupported(PFNGLMULTITEXCOORD3SPROC, glMultiTexCoord3s); \
    HandleUnsupported(PFNGLMULTITEXCOORD3SVPROC, glMultiTexCoord3sv); \
    HandleUnsupported(PFNGLMULTITEXCOORD4DPROC, glMultiTexCoord4d); \
    HandleUnsupported(PFNGLMULTITEXCOORD4DVPROC, glMultiTexCoord4dv); \
    HandleUnsupported(PFNGLMULTITEXCOORD4FPROC, glMultiTexCoord4f); \
    HandleUnsupported(PFNGLMULTITEXCOORD4FVPROC, glMultiTexCoord4fv); \
    HandleUnsupported(PFNGLMULTITEXCOORD4IPROC, glMultiTexCoord4i); \
    HandleUnsupported(PFNGLMULTITEXCOORD4IVPROC, glMultiTexCoord4iv); \
    HandleUnsupported(PFNGLMULTITEXCOORD4SPROC, glMultiTexCoord4s); \
    HandleUnsupported(PFNGLMULTITEXCOORD4SVPROC, glMultiTexCoord4sv); \
    HandleUnsupported(PFNGLLOADTRANSPOSEMATRIXFPROC, glLoadTransposeMatrixf); \
    HandleUnsupported(PFNGLLOADTRANSPOSEMATRIXDPROC, glLoadTransposeMatrixd); \
    HandleUnsupported(PFNGLMULTTRANSPOSEMATRIXFPROC, glMultTransposeMatrixf); \
    HandleUnsupported(PFNGLMULTTRANSPOSEMATRIXDPROC, glMultTransposeMatrixd); \
    HandleUnsupported(PFNGLFOGCOORDFPROC, glFogCoordf); \
    HandleUnsupported(PFNGLFOGCOORDFVPROC, glFogCoordfv); \
    HandleUnsupported(PFNGLFOGCOORDDPROC, glFogCoordd); \
    HandleUnsupported(PFNGLFOGCOORDDVPROC, glFogCoorddv); \
    HandleUnsupported(PFNGLFOGCOORDPOINTERPROC, glFogCoordPointer); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3BPROC, glSecondaryColor3b); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3BVPROC, glSecondaryColor3bv); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3DPROC, glSecondaryColor3d); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3DVPROC, glSecondaryColor3dv); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3FPROC, glSecondaryColor3f); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3FVPROC, glSecondaryColor3fv); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3IPROC, glSecondaryColor3i); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3IVPROC, glSecondaryColor3iv); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3SPROC, glSecondaryColor3s); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3SVPROC, glSecondaryColor3sv); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3UBPROC, glSecondaryColor3ub); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3UBVPROC, glSecondaryColor3ubv); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3UIPROC, glSecondaryColor3ui); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3UIVPROC, glSecondaryColor3uiv); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3USPROC, glSecondaryColor3us); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3USVPROC, glSecondaryColor3usv); \
    HandleUnsupported(PFNGLSECONDARYCOLORPOINTERPROC, glSecondaryColorPointer); \
    HandleUnsupported(PFNGLWINDOWPOS2DPROC, glWindowPos2d); \
    HandleUnsupported(PFNGLWINDOWPOS2DVPROC, glWindowPos2dv); \
    HandleUnsupported(PFNGLWINDOWPOS2FPROC, glWindowPos2f); \
    HandleUnsupported(PFNGLWINDOWPOS2FVPROC, glWindowPos2fv); \
    HandleUnsupported(PFNGLWINDOWPOS2IPROC, glWindowPos2i); \
    HandleUnsupported(PFNGLWINDOWPOS2IVPROC, glWindowPos2iv); \
    HandleUnsupported(PFNGLWINDOWPOS2SPROC, glWindowPos2s); \
    HandleUnsupported(PFNGLWINDOWPOS2SVPROC, glWindowPos2sv); \
    HandleUnsupported(PFNGLWINDOWPOS3DPROC, glWindowPos3d); \
    HandleUnsupported(PFNGLWINDOWPOS3DVPROC, glWindowPos3dv); \
    HandleUnsupported(PFNGLWINDOWPOS3FPROC, glWindowPos3f); \
    HandleUnsupported(PFNGLWINDOWPOS3FVPROC, glWindowPos3fv); \
    HandleUnsupported(PFNGLWINDOWPOS3IPROC, glWindowPos3i); \
    HandleUnsupported(PFNGLWINDOWPOS3IVPROC, glWindowPos3iv); \
    HandleUnsupported(PFNGLWINDOWPOS3SPROC, glWindowPos3s); \
    HandleUnsupported(PFNGLWINDOWPOS3SVPROC, glWindowPos3sv); \
    HandleUnsupported(PFNGLVERTEXP2UIPROC, glVertexP2ui); \
    HandleUnsupported(PFNGLVERTEXP2UIVPROC, glVertexP2uiv); \
    HandleUnsupported(PFNGLVERTEXP3UIPROC, glVertexP3ui); \
    HandleUnsupported(PFNGLVERTEXP3UIVPROC, glVertexP3uiv); \
    HandleUnsupported(PFNGLVERTEXP4UIPROC, glVertexP4ui); \
    HandleUnsupported(PFNGLVERTEXP4UIVPROC, glVertexP4uiv); \
    HandleUnsupported(PFNGLTEXCOORDP1UIPROC, glTexCoordP1ui); \
    HandleUnsupported(PFNGLTEXCOORDP1UIVPROC, glTexCoordP1uiv); \
    HandleUnsupported(PFNGLTEXCOORDP2UIPROC, glTexCoordP2ui); \
    HandleUnsupported(PFNGLTEXCOORDP2UIVPROC, glTexCoordP2uiv); \
    HandleUnsupported(PFNGLTEXCOORDP3UIPROC, glTexCoordP3ui); \
    HandleUnsupported(PFNGLTEXCOORDP3UIVPROC, glTexCoordP3uiv); \
    HandleUnsupported(PFNGLTEXCOORDP4UIPROC, glTexCoordP4ui); \
    HandleUnsupported(PFNGLTEXCOORDP4UIVPROC, glTexCoordP4uiv); \
    HandleUnsupported(PFNGLMULTITEXCOORDP1UIPROC, glMultiTexCoordP1ui); \
    HandleUnsupported(PFNGLMULTITEXCOORDP1UIVPROC, glMultiTexCoordP1uiv); \
    HandleUnsupported(PFNGLMULTITEXCOORDP2UIPROC, glMultiTexCoordP2ui); \
    HandleUnsupported(PFNGLMULTITEXCOORDP2UIVPROC, glMultiTexCoordP2uiv); \
    HandleUnsupported(PFNGLMULTITEXCOORDP3UIPROC, glMultiTexCoordP3ui); \
    HandleUnsupported(PFNGLMULTITEXCOORDP3UIVPROC, glMultiTexCoordP3uiv); \
    HandleUnsupported(PFNGLMULTITEXCOORDP4UIPROC, glMultiTexCoordP4ui); \
    HandleUnsupported(PFNGLMULTITEXCOORDP4UIVPROC, glMultiTexCoordP4uiv); \
    HandleUnsupported(PFNGLNORMALP3UIPROC, glNormalP3ui); \
    HandleUnsupported(PFNGLNORMALP3UIVPROC, glNormalP3uiv); \
    HandleUnsupported(PFNGLCOLORP3UIPROC, glColorP3ui); \
    HandleUnsupported(PFNGLCOLORP3UIVPROC, glColorP3uiv); \
    HandleUnsupported(PFNGLCOLORP4UIPROC, glColorP4ui); \
    HandleUnsupported(PFNGLCOLORP4UIVPROC, glColorP4uiv); \
    HandleUnsupported(PFNGLSECONDARYCOLORP3UIPROC, glSecondaryColorP3ui); \
    HandleUnsupported(PFNGLSECONDARYCOLORP3UIVPROC, glSecondaryColorP3uiv); \
    HandleUnsupported(PFNGLGETNMAPDVPROC, glGetnMapdv); \
    HandleUnsupported(PFNGLGETNMAPFVPROC, glGetnMapfv); \
    HandleUnsupported(PFNGLGETNMAPIVPROC, glGetnMapiv); \
    HandleUnsupported(PFNGLGETNPIXELMAPFVPROC, glGetnPixelMapfv); \
    HandleUnsupported(PFNGLGETNPIXELMAPUIVPROC, glGetnPixelMapuiv); \
    HandleUnsupported(PFNGLGETNPIXELMAPUSVPROC, glGetnPixelMapusv); \
    HandleUnsupported(PFNGLGETNPOLYGONSTIPPLEPROC, glGetnPolygonStipple); \
    HandleUnsupported(PFNGLGETNCOLORTABLEPROC, glGetnColorTable); \
    HandleUnsupported(PFNGLGETNCONVOLUTIONFILTERPROC, glGetnConvolutionFilter); \
    HandleUnsupported(PFNGLGETNSEPARABLEFILTERPROC, glGetnSeparableFilter); \
    HandleUnsupported(PFNGLGETNHISTOGRAMPROC, glGetnHistogram); \
    HandleUnsupported(PFNGLGETNMINMAXPROC, glGetnMinmax); \
    HandleUnsupported(PFNGLPROGRAMSTRINGARBPROC, glProgramStringARB); \
    HandleUnsupported(PFNGLBINDPROGRAMARBPROC, glBindProgramARB); \
    HandleUnsupported(PFNGLDELETEPROGRAMSARBPROC, glDeleteProgramsARB); \
    HandleUnsupported(PFNGLGENPROGRAMSARBPROC, glGenProgramsARB); \
    HandleUnsupported(PFNGLPROGRAMENVPARAMETER4DARBPROC, glProgramEnvParameter4dARB); \
    HandleUnsupported(PFNGLPROGRAMENVPARAMETER4DVARBPROC, glProgramEnvParameter4dvARB); \
    HandleUnsupported(PFNGLPROGRAMENVPARAMETER4FARBPROC, glProgramEnvParameter4fARB); \
    HandleUnsupported(PFNGLPROGRAMENVPARAMETER4FVARBPROC, glProgramEnvParameter4fvARB); \
    HandleUnsupported(PFNGLPROGRAMLOCALPARAMETER4DARBPROC, glProgramLocalParameter4dARB); \
    HandleUnsupported(PFNGLPROGRAMLOCALPARAMETER4DVARBPROC, glProgramLocalParameter4dvARB); \
    HandleUnsupported(PFNGLPROGRAMLOCALPARAMETER4FARBPROC, glProgramLocalParameter4fARB); \
    HandleUnsupported(PFNGLPROGRAMLOCALPARAMETER4FVARBPROC, glProgramLocalParameter4fvARB); \
    HandleUnsupported(PFNGLGETPROGRAMENVPARAMETERDVARBPROC, glGetProgramEnvParameterdvARB); \
    HandleUnsupported(PFNGLGETPROGRAMENVPARAMETERFVARBPROC, glGetProgramEnvParameterfvARB); \
    HandleUnsupported(PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC, glGetProgramLocalParameterdvARB); \
    HandleUnsupported(PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC, glGetProgramLocalParameterfvARB); \
    HandleUnsupported(PFNGLGETPROGRAMIVARBPROC, glGetProgramivARB); \
    HandleUnsupported(PFNGLGETPROGRAMSTRINGARBPROC, glGetProgramStringARB); \
    HandleUnsupported(PFNGLISPROGRAMARBPROC, glIsProgramARB); \
    HandleUnsupported(PFNGLCOLORTABLEPROC, glColorTable); \
    HandleUnsupported(PFNGLCOLORTABLEPARAMETERFVPROC, glColorTableParameterfv); \
    HandleUnsupported(PFNGLCOLORTABLEPARAMETERIVPROC, glColorTableParameteriv); \
    HandleUnsupported(PFNGLCOPYCOLORTABLEPROC, glCopyColorTable); \
    HandleUnsupported(PFNGLGETCOLORTABLEPROC, glGetColorTable); \
    HandleUnsupported(PFNGLGETCOLORTABLEPARAMETERFVPROC, glGetColorTableParameterfv); \
    HandleUnsupported(PFNGLGETCOLORTABLEPARAMETERIVPROC, glGetColorTableParameteriv); \
    HandleUnsupported(PFNGLCOLORSUBTABLEPROC, glColorSubTable); \
    HandleUnsupported(PFNGLCOPYCOLORSUBTABLEPROC, glCopyColorSubTable); \
    HandleUnsupported(PFNGLCONVOLUTIONFILTER1DPROC, glConvolutionFilter1D); \
    HandleUnsupported(PFNGLCONVOLUTIONFILTER2DPROC, glConvolutionFilter2D); \
    HandleUnsupported(PFNGLCONVOLUTIONPARAMETERFPROC, glConvolutionParameterf); \
    HandleUnsupported(PFNGLCONVOLUTIONPARAMETERFVPROC, glConvolutionParameterfv); \
    HandleUnsupported(PFNGLCONVOLUTIONPARAMETERIPROC, glConvolutionParameteri); \
    HandleUnsupported(PFNGLCONVOLUTIONPARAMETERIVPROC, glConvolutionParameteriv); \
    HandleUnsupported(PFNGLCOPYCONVOLUTIONFILTER1DPROC, glCopyConvolutionFilter1D); \
    HandleUnsupported(PFNGLCOPYCONVOLUTIONFILTER2DPROC, glCopyConvolutionFilter2D); \
    HandleUnsupported(PFNGLGETCONVOLUTIONFILTERPROC, glGetConvolutionFilter); \
    HandleUnsupported(PFNGLGETCONVOLUTIONPARAMETERFVPROC, glGetConvolutionParameterfv); \
    HandleUnsupported(PFNGLGETCONVOLUTIONPARAMETERIVPROC, glGetConvolutionParameteriv); \
    HandleUnsupported(PFNGLGETSEPARABLEFILTERPROC, glGetSeparableFilter); \
    HandleUnsupported(PFNGLSEPARABLEFILTER2DPROC, glSeparableFilter2D); \
    HandleUnsupported(PFNGLGETHISTOGRAMPROC, glGetHistogram); \
    HandleUnsupported(PFNGLGETHISTOGRAMPARAMETERFVPROC, glGetHistogramParameterfv); \
    HandleUnsupported(PFNGLGETHISTOGRAMPARAMETERIVPROC, glGetHistogramParameteriv); \
    HandleUnsupported(PFNGLGETMINMAXPROC, glGetMinmax); \
    HandleUnsupported(PFNGLGETMINMAXPARAMETERFVPROC, glGetMinmaxParameterfv); \
    HandleUnsupported(PFNGLGETMINMAXPARAMETERIVPROC, glGetMinmaxParameteriv); \
    HandleUnsupported(PFNGLHISTOGRAMPROC, glHistogram); \
    HandleUnsupported(PFNGLMINMAXPROC, glMinmax); \
    HandleUnsupported(PFNGLRESETHISTOGRAMPROC, glResetHistogram); \
    HandleUnsupported(PFNGLRESETMINMAXPROC, glResetMinmax); \
    HandleUnsupported(PFNGLCURRENTPALETTEMATRIXARBPROC, glCurrentPaletteMatrixARB); \
    HandleUnsupported(PFNGLMATRIXINDEXUBVARBPROC, glMatrixIndexubvARB); \
    HandleUnsupported(PFNGLMATRIXINDEXUSVARBPROC, glMatrixIndexusvARB); \
    HandleUnsupported(PFNGLMATRIXINDEXUIVARBPROC, glMatrixIndexuivARB); \
    HandleUnsupported(PFNGLMATRIXINDEXPOINTERARBPROC, glMatrixIndexPointerARB); \
    HandleUnsupported(PFNGLCLIENTACTIVETEXTUREARBPROC, glClientActiveTextureARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD1DARBPROC, glMultiTexCoord1dARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD1DVARBPROC, glMultiTexCoord1dvARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD1FARBPROC, glMultiTexCoord1fARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD1FVARBPROC, glMultiTexCoord1fvARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD1IARBPROC, glMultiTexCoord1iARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD1IVARBPROC, glMultiTexCoord1ivARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD1SARBPROC, glMultiTexCoord1sARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD1SVARBPROC, glMultiTexCoord1svARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD2DARBPROC, glMultiTexCoord2dARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD2DVARBPROC, glMultiTexCoord2dvARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD2FARBPROC, glMultiTexCoord2fARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD2FVARBPROC, glMultiTexCoord2fvARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD2IARBPROC, glMultiTexCoord2iARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD2IVARBPROC, glMultiTexCoord2ivARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD2SARBPROC, glMultiTexCoord2sARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD2SVARBPROC, glMultiTexCoord2svARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD3DARBPROC, glMultiTexCoord3dARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD3DVARBPROC, glMultiTexCoord3dvARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD3FARBPROC, glMultiTexCoord3fARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD3FVARBPROC, glMultiTexCoord3fvARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD3IARBPROC, glMultiTexCoord3iARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD3IVARBPROC, glMultiTexCoord3ivARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD3SARBPROC, glMultiTexCoord3sARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD3SVARBPROC, glMultiTexCoord3svARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD4DARBPROC, glMultiTexCoord4dARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD4DVARBPROC, glMultiTexCoord4dvARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD4FARBPROC, glMultiTexCoord4fARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD4FVARBPROC, glMultiTexCoord4fvARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD4IARBPROC, glMultiTexCoord4iARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD4IVARBPROC, glMultiTexCoord4ivARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD4SARBPROC, glMultiTexCoord4sARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD4SVARBPROC, glMultiTexCoord4svARB); \
    HandleUnsupported(PFNGLGETNMAPDVARBPROC, glGetnMapdvARB); \
    HandleUnsupported(PFNGLGETNMAPFVARBPROC, glGetnMapfvARB); \
    HandleUnsupported(PFNGLGETNMAPIVARBPROC, glGetnMapivARB); \
    HandleUnsupported(PFNGLGETNPIXELMAPFVARBPROC, glGetnPixelMapfvARB); \
    HandleUnsupported(PFNGLGETNPIXELMAPUIVARBPROC, glGetnPixelMapuivARB); \
    HandleUnsupported(PFNGLGETNPIXELMAPUSVARBPROC, glGetnPixelMapusvARB); \
    HandleUnsupported(PFNGLGETNPOLYGONSTIPPLEARBPROC, glGetnPolygonStippleARB); \
    HandleUnsupported(PFNGLGETNCOLORTABLEARBPROC, glGetnColorTableARB); \
    HandleUnsupported(PFNGLGETNCONVOLUTIONFILTERARBPROC, glGetnConvolutionFilterARB); \
    HandleUnsupported(PFNGLGETNSEPARABLEFILTERARBPROC, glGetnSeparableFilterARB); \
    HandleUnsupported(PFNGLGETNHISTOGRAMARBPROC, glGetnHistogramARB); \
    HandleUnsupported(PFNGLGETNMINMAXARBPROC, glGetnMinmaxARB); \
    HandleUnsupported(PFNGLDELETEOBJECTARBPROC, glDeleteObjectARB); \
    HandleUnsupported(PFNGLGETHANDLEARBPROC, glGetHandleARB); \
    HandleUnsupported(PFNGLDETACHOBJECTARBPROC, glDetachObjectARB); \
    HandleUnsupported(PFNGLCREATESHADEROBJECTARBPROC, glCreateShaderObjectARB); \
    HandleUnsupported(PFNGLSHADERSOURCEARBPROC, glShaderSourceARB); \
    HandleUnsupported(PFNGLCOMPILESHADERARBPROC, glCompileShaderARB); \
    HandleUnsupported(PFNGLCREATEPROGRAMOBJECTARBPROC, glCreateProgramObjectARB); \
    HandleUnsupported(PFNGLATTACHOBJECTARBPROC, glAttachObjectARB); \
    HandleUnsupported(PFNGLLINKPROGRAMARBPROC, glLinkProgramARB); \
    HandleUnsupported(PFNGLUSEPROGRAMOBJECTARBPROC, glUseProgramObjectARB); \
    HandleUnsupported(PFNGLVALIDATEPROGRAMARBPROC, glValidateProgramARB); \
    HandleUnsupported(PFNGLUNIFORM1FARBPROC, glUniform1fARB); \
    HandleUnsupported(PFNGLUNIFORM2FARBPROC, glUniform2fARB); \
    HandleUnsupported(PFNGLUNIFORM3FARBPROC, glUniform3fARB); \
    HandleUnsupported(PFNGLUNIFORM4FARBPROC, glUniform4fARB); \
    HandleUnsupported(PFNGLUNIFORM1IARBPROC, glUniform1iARB); \
    HandleUnsupported(PFNGLUNIFORM2IARBPROC, glUniform2iARB); \
    HandleUnsupported(PFNGLUNIFORM3IARBPROC, glUniform3iARB); \
    HandleUnsupported(PFNGLUNIFORM4IARBPROC, glUniform4iARB); \
    HandleUnsupported(PFNGLUNIFORM1FVARBPROC, glUniform1fvARB); \
    HandleUnsupported(PFNGLUNIFORM2FVARBPROC, glUniform2fvARB); \
    HandleUnsupported(PFNGLUNIFORM3FVARBPROC, glUniform3fvARB); \
    HandleUnsupported(PFNGLUNIFORM4FVARBPROC, glUniform4fvARB); \
    HandleUnsupported(PFNGLUNIFORM1IVARBPROC, glUniform1ivARB); \
    HandleUnsupported(PFNGLUNIFORM2IVARBPROC, glUniform2ivARB); \
    HandleUnsupported(PFNGLUNIFORM3IVARBPROC, glUniform3ivARB); \
    HandleUnsupported(PFNGLUNIFORM4IVARBPROC, glUniform4ivARB); \
    HandleUnsupported(PFNGLUNIFORMMATRIX2FVARBPROC, glUniformMatrix2fvARB); \
    HandleUnsupported(PFNGLUNIFORMMATRIX3FVARBPROC, glUniformMatrix3fvARB); \
    HandleUnsupported(PFNGLUNIFORMMATRIX4FVARBPROC, glUniformMatrix4fvARB); \
    HandleUnsupported(PFNGLGETOBJECTPARAMETERFVARBPROC, glGetObjectParameterfvARB); \
    HandleUnsupported(PFNGLGETOBJECTPARAMETERIVARBPROC, glGetObjectParameterivARB); \
    HandleUnsupported(PFNGLGETINFOLOGARBPROC, glGetInfoLogARB); \
    HandleUnsupported(PFNGLGETATTACHEDOBJECTSARBPROC, glGetAttachedObjectsARB); \
    HandleUnsupported(PFNGLGETUNIFORMLOCATIONARBPROC, glGetUniformLocationARB); \
    HandleUnsupported(PFNGLGETACTIVEUNIFORMARBPROC, glGetActiveUniformARB); \
    HandleUnsupported(PFNGLGETUNIFORMFVARBPROC, glGetUniformfvARB); \
    HandleUnsupported(PFNGLGETUNIFORMIVARBPROC, glGetUniformivARB); \
    HandleUnsupported(PFNGLGETSHADERSOURCEARBPROC, glGetShaderSourceARB); \
    HandleUnsupported(PFNGLLOADTRANSPOSEMATRIXFARBPROC, glLoadTransposeMatrixfARB); \
    HandleUnsupported(PFNGLLOADTRANSPOSEMATRIXDARBPROC, glLoadTransposeMatrixdARB); \
    HandleUnsupported(PFNGLMULTTRANSPOSEMATRIXFARBPROC, glMultTransposeMatrixfARB); \
    HandleUnsupported(PFNGLMULTTRANSPOSEMATRIXDARBPROC, glMultTransposeMatrixdARB); \
    HandleUnsupported(PFNGLWEIGHTBVARBPROC, glWeightbvARB); \
    HandleUnsupported(PFNGLWEIGHTSVARBPROC, glWeightsvARB); \
    HandleUnsupported(PFNGLWEIGHTIVARBPROC, glWeightivARB); \
    HandleUnsupported(PFNGLWEIGHTFVARBPROC, glWeightfvARB); \
    HandleUnsupported(PFNGLWEIGHTDVARBPROC, glWeightdvARB); \
    HandleUnsupported(PFNGLWEIGHTUBVARBPROC, glWeightubvARB); \
    HandleUnsupported(PFNGLWEIGHTUSVARBPROC, glWeightusvARB); \
    HandleUnsupported(PFNGLWEIGHTUIVARBPROC, glWeightuivARB); \
    HandleUnsupported(PFNGLWEIGHTPOINTERARBPROC, glWeightPointerARB); \
    HandleUnsupported(PFNGLVERTEXBLENDARBPROC, glVertexBlendARB); \
    HandleUnsupported(PFNGLVERTEXATTRIB4NUBARBPROC, glVertexAttrib4NubARB); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBDVARBPROC, glGetVertexAttribdvARB); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBFVARBPROC, glGetVertexAttribfvARB); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBIVARBPROC, glGetVertexAttribivARB); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBPOINTERVARBPROC, glGetVertexAttribPointervARB); \
    HandleUnsupported(PFNGLBINDATTRIBLOCATIONARBPROC, glBindAttribLocationARB); \
    HandleUnsupported(PFNGLGETACTIVEATTRIBARBPROC, glGetActiveAttribARB); \
    HandleUnsupported(PFNGLGETATTRIBLOCATIONARBPROC, glGetAttribLocationARB); \
    HandleUnsupported(PFNGLWINDOWPOS2DARBPROC, glWindowPos2dARB); \
    HandleUnsupported(PFNGLWINDOWPOS2DVARBPROC, glWindowPos2dvARB); \
    HandleUnsupported(PFNGLWINDOWPOS2FARBPROC, glWindowPos2fARB); \
    HandleUnsupported(PFNGLWINDOWPOS2FVARBPROC, glWindowPos2fvARB); \
    HandleUnsupported(PFNGLWINDOWPOS2IARBPROC, glWindowPos2iARB); \
    HandleUnsupported(PFNGLWINDOWPOS2IVARBPROC, glWindowPos2ivARB); \
    HandleUnsupported(PFNGLWINDOWPOS2SARBPROC, glWindowPos2sARB); \
    HandleUnsupported(PFNGLWINDOWPOS2SVARBPROC, glWindowPos2svARB); \
    HandleUnsupported(PFNGLWINDOWPOS3DARBPROC, glWindowPos3dARB); \
    HandleUnsupported(PFNGLWINDOWPOS3DVARBPROC, glWindowPos3dvARB); \
    HandleUnsupported(PFNGLWINDOWPOS3FARBPROC, glWindowPos3fARB); \
    HandleUnsupported(PFNGLWINDOWPOS3FVARBPROC, glWindowPos3fvARB); \
    HandleUnsupported(PFNGLWINDOWPOS3IARBPROC, glWindowPos3iARB); \
    HandleUnsupported(PFNGLWINDOWPOS3IVARBPROC, glWindowPos3ivARB); \
    HandleUnsupported(PFNGLWINDOWPOS3SARBPROC, glWindowPos3sARB); \
    HandleUnsupported(PFNGLWINDOWPOS3SVARBPROC, glWindowPos3svARB); \
    HandleUnsupported(PFNGLMULTITEXCOORD1BOESPROC, glMultiTexCoord1bOES); \
    HandleUnsupported(PFNGLMULTITEXCOORD1BVOESPROC, glMultiTexCoord1bvOES); \
    HandleUnsupported(PFNGLMULTITEXCOORD2BOESPROC, glMultiTexCoord2bOES); \
    HandleUnsupported(PFNGLMULTITEXCOORD2BVOESPROC, glMultiTexCoord2bvOES); \
    HandleUnsupported(PFNGLMULTITEXCOORD3BOESPROC, glMultiTexCoord3bOES); \
    HandleUnsupported(PFNGLMULTITEXCOORD3BVOESPROC, glMultiTexCoord3bvOES); \
    HandleUnsupported(PFNGLMULTITEXCOORD4BOESPROC, glMultiTexCoord4bOES); \
    HandleUnsupported(PFNGLMULTITEXCOORD4BVOESPROC, glMultiTexCoord4bvOES); \
    HandleUnsupported(PFNGLTEXCOORD1BOESPROC, glTexCoord1bOES); \
    HandleUnsupported(PFNGLTEXCOORD1BVOESPROC, glTexCoord1bvOES); \
    HandleUnsupported(PFNGLTEXCOORD2BOESPROC, glTexCoord2bOES); \
    HandleUnsupported(PFNGLTEXCOORD2BVOESPROC, glTexCoord2bvOES); \
    HandleUnsupported(PFNGLTEXCOORD3BOESPROC, glTexCoord3bOES); \
    HandleUnsupported(PFNGLTEXCOORD3BVOESPROC, glTexCoord3bvOES); \
    HandleUnsupported(PFNGLTEXCOORD4BOESPROC, glTexCoord4bOES); \
    HandleUnsupported(PFNGLTEXCOORD4BVOESPROC, glTexCoord4bvOES); \
    HandleUnsupported(PFNGLVERTEX2BOESPROC, glVertex2bOES); \
    HandleUnsupported(PFNGLVERTEX2BVOESPROC, glVertex2bvOES); \
    HandleUnsupported(PFNGLVERTEX3BOESPROC, glVertex3bOES); \
    HandleUnsupported(PFNGLVERTEX3BVOESPROC, glVertex3bvOES); \
    HandleUnsupported(PFNGLVERTEX4BOESPROC, glVertex4bOES); \
    HandleUnsupported(PFNGLVERTEX4BVOESPROC, glVertex4bvOES); \
    HandleUnsupported(PFNGLALPHAFUNCXOESPROC, glAlphaFuncxOES); \
    HandleUnsupported(PFNGLCLEARCOLORXOESPROC, glClearColorxOES); \
    HandleUnsupported(PFNGLCLEARDEPTHXOESPROC, glClearDepthxOES); \
    HandleUnsupported(PFNGLCLIPPLANEXOESPROC, glClipPlanexOES); \
    HandleUnsupported(PFNGLCOLOR4XOESPROC, glColor4xOES); \
    HandleUnsupported(PFNGLDEPTHRANGEXOESPROC, glDepthRangexOES); \
    HandleUnsupported(PFNGLFOGXOESPROC, glFogxOES); \
    HandleUnsupported(PFNGLFOGXVOESPROC, glFogxvOES); \
    HandleUnsupported(PFNGLFRUSTUMXOESPROC, glFrustumxOES); \
    HandleUnsupported(PFNGLGETCLIPPLANEXOESPROC, glGetClipPlanexOES); \
    HandleUnsupported(PFNGLGETFIXEDVOESPROC, glGetFixedvOES); \
    HandleUnsupported(PFNGLGETTEXENVXVOESPROC, glGetTexEnvxvOES); \
    HandleUnsupported(PFNGLGETTEXPARAMETERXVOESPROC, glGetTexParameterxvOES); \
    HandleUnsupported(PFNGLLIGHTMODELXOESPROC, glLightModelxOES); \
    HandleUnsupported(PFNGLLIGHTMODELXVOESPROC, glLightModelxvOES); \
    HandleUnsupported(PFNGLLIGHTXOESPROC, glLightxOES); \
    HandleUnsupported(PFNGLLIGHTXVOESPROC, glLightxvOES); \
    HandleUnsupported(PFNGLLINEWIDTHXOESPROC, glLineWidthxOES); \
    HandleUnsupported(PFNGLLOADMATRIXXOESPROC, glLoadMatrixxOES); \
    HandleUnsupported(PFNGLMATERIALXOESPROC, glMaterialxOES); \
    HandleUnsupported(PFNGLMATERIALXVOESPROC, glMaterialxvOES); \
    HandleUnsupported(PFNGLMULTMATRIXXOESPROC, glMultMatrixxOES); \
    HandleUnsupported(PFNGLMULTITEXCOORD4XOESPROC, glMultiTexCoord4xOES); \
    HandleUnsupported(PFNGLNORMAL3XOESPROC, glNormal3xOES); \
    HandleUnsupported(PFNGLORTHOXOESPROC, glOrthoxOES); \
    HandleUnsupported(PFNGLPOINTPARAMETERXVOESPROC, glPointParameterxvOES); \
    HandleUnsupported(PFNGLPOINTSIZEXOESPROC, glPointSizexOES); \
    HandleUnsupported(PFNGLPOLYGONOFFSETXOESPROC, glPolygonOffsetxOES); \
    HandleUnsupported(PFNGLROTATEXOESPROC, glRotatexOES); \
    HandleUnsupported(PFNGLSCALEXOESPROC, glScalexOES); \
    HandleUnsupported(PFNGLTEXENVXOESPROC, glTexEnvxOES); \
    HandleUnsupported(PFNGLTEXENVXVOESPROC, glTexEnvxvOES); \
    HandleUnsupported(PFNGLTEXPARAMETERXOESPROC, glTexParameterxOES); \
    HandleUnsupported(PFNGLTEXPARAMETERXVOESPROC, glTexParameterxvOES); \
    HandleUnsupported(PFNGLTRANSLATEXOESPROC, glTranslatexOES); \
    HandleUnsupported(PFNGLACCUMXOESPROC, glAccumxOES); \
    HandleUnsupported(PFNGLBITMAPXOESPROC, glBitmapxOES); \
    HandleUnsupported(PFNGLBLENDCOLORXOESPROC, glBlendColorxOES); \
    HandleUnsupported(PFNGLCLEARACCUMXOESPROC, glClearAccumxOES); \
    HandleUnsupported(PFNGLCOLOR3XOESPROC, glColor3xOES); \
    HandleUnsupported(PFNGLCOLOR3XVOESPROC, glColor3xvOES); \
    HandleUnsupported(PFNGLCOLOR4XVOESPROC, glColor4xvOES); \
    HandleUnsupported(PFNGLCONVOLUTIONPARAMETERXOESPROC, glConvolutionParameterxOES); \
    HandleUnsupported(PFNGLCONVOLUTIONPARAMETERXVOESPROC, glConvolutionParameterxvOES); \
    HandleUnsupported(PFNGLEVALCOORD1XOESPROC, glEvalCoord1xOES); \
    HandleUnsupported(PFNGLEVALCOORD1XVOESPROC, glEvalCoord1xvOES); \
    HandleUnsupported(PFNGLEVALCOORD2XOESPROC, glEvalCoord2xOES); \
    HandleUnsupported(PFNGLEVALCOORD2XVOESPROC, glEvalCoord2xvOES); \
    HandleUnsupported(PFNGLFEEDBACKBUFFERXOESPROC, glFeedbackBufferxOES); \
    HandleUnsupported(PFNGLGETCONVOLUTIONPARAMETERXVOESPROC, glGetConvolutionParameterxvOES); \
    HandleUnsupported(PFNGLGETHISTOGRAMPARAMETERXVOESPROC, glGetHistogramParameterxvOES); \
    HandleUnsupported(PFNGLGETLIGHTXOESPROC, glGetLightxOES); \
    HandleUnsupported(PFNGLGETMAPXVOESPROC, glGetMapxvOES); \
    HandleUnsupported(PFNGLGETMATERIALXOESPROC, glGetMaterialxOES); \
    HandleUnsupported(PFNGLGETPIXELMAPXVPROC, glGetPixelMapxv); \
    HandleUnsupported(PFNGLGETTEXGENXVOESPROC, glGetTexGenxvOES); \
    HandleUnsupported(PFNGLGETTEXLEVELPARAMETERXVOESPROC, glGetTexLevelParameterxvOES); \
    HandleUnsupported(PFNGLINDEXXOESPROC, glIndexxOES); \
    HandleUnsupported(PFNGLINDEXXVOESPROC, glIndexxvOES); \
    HandleUnsupported(PFNGLLOADTRANSPOSEMATRIXXOESPROC, glLoadTransposeMatrixxOES); \
    HandleUnsupported(PFNGLMAP1XOESPROC, glMap1xOES); \
    HandleUnsupported(PFNGLMAP2XOESPROC, glMap2xOES); \
    HandleUnsupported(PFNGLMAPGRID1XOESPROC, glMapGrid1xOES); \
    HandleUnsupported(PFNGLMAPGRID2XOESPROC, glMapGrid2xOES); \
    HandleUnsupported(PFNGLMULTTRANSPOSEMATRIXXOESPROC, glMultTransposeMatrixxOES); \
    HandleUnsupported(PFNGLMULTITEXCOORD1XOESPROC, glMultiTexCoord1xOES); \
    HandleUnsupported(PFNGLMULTITEXCOORD1XVOESPROC, glMultiTexCoord1xvOES); \
    HandleUnsupported(PFNGLMULTITEXCOORD2XOESPROC, glMultiTexCoord2xOES); \
    HandleUnsupported(PFNGLMULTITEXCOORD2XVOESPROC, glMultiTexCoord2xvOES); \
    HandleUnsupported(PFNGLMULTITEXCOORD3XOESPROC, glMultiTexCoord3xOES); \
    HandleUnsupported(PFNGLMULTITEXCOORD3XVOESPROC, glMultiTexCoord3xvOES); \
    HandleUnsupported(PFNGLMULTITEXCOORD4XVOESPROC, glMultiTexCoord4xvOES); \
    HandleUnsupported(PFNGLNORMAL3XVOESPROC, glNormal3xvOES); \
    HandleUnsupported(PFNGLPASSTHROUGHXOESPROC, glPassThroughxOES); \
    HandleUnsupported(PFNGLPIXELMAPXPROC, glPixelMapx); \
    HandleUnsupported(PFNGLPIXELSTOREXPROC, glPixelStorex); \
    HandleUnsupported(PFNGLPIXELTRANSFERXOESPROC, glPixelTransferxOES); \
    HandleUnsupported(PFNGLPIXELZOOMXOESPROC, glPixelZoomxOES); \
    HandleUnsupported(PFNGLPRIORITIZETEXTURESXOESPROC, glPrioritizeTexturesxOES); \
    HandleUnsupported(PFNGLRASTERPOS2XOESPROC, glRasterPos2xOES); \
    HandleUnsupported(PFNGLRASTERPOS2XVOESPROC, glRasterPos2xvOES); \
    HandleUnsupported(PFNGLRASTERPOS3XOESPROC, glRasterPos3xOES); \
    HandleUnsupported(PFNGLRASTERPOS3XVOESPROC, glRasterPos3xvOES); \
    HandleUnsupported(PFNGLRASTERPOS4XOESPROC, glRasterPos4xOES); \
    HandleUnsupported(PFNGLRASTERPOS4XVOESPROC, glRasterPos4xvOES); \
    HandleUnsupported(PFNGLRECTXOESPROC, glRectxOES); \
    HandleUnsupported(PFNGLRECTXVOESPROC, glRectxvOES); \
    HandleUnsupported(PFNGLTEXCOORD1XOESPROC, glTexCoord1xOES); \
    HandleUnsupported(PFNGLTEXCOORD1XVOESPROC, glTexCoord1xvOES); \
    HandleUnsupported(PFNGLTEXCOORD2XOESPROC, glTexCoord2xOES); \
    HandleUnsupported(PFNGLTEXCOORD2XVOESPROC, glTexCoord2xvOES); \
    HandleUnsupported(PFNGLTEXCOORD3XOESPROC, glTexCoord3xOES); \
    HandleUnsupported(PFNGLTEXCOORD3XVOESPROC, glTexCoord3xvOES); \
    HandleUnsupported(PFNGLTEXCOORD4XOESPROC, glTexCoord4xOES); \
    HandleUnsupported(PFNGLTEXCOORD4XVOESPROC, glTexCoord4xvOES); \
    HandleUnsupported(PFNGLTEXGENXOESPROC, glTexGenxOES); \
    HandleUnsupported(PFNGLTEXGENXVOESPROC, glTexGenxvOES); \
    HandleUnsupported(PFNGLVERTEX2XOESPROC, glVertex2xOES); \
    HandleUnsupported(PFNGLVERTEX2XVOESPROC, glVertex2xvOES); \
    HandleUnsupported(PFNGLVERTEX3XOESPROC, glVertex3xOES); \
    HandleUnsupported(PFNGLVERTEX3XVOESPROC, glVertex3xvOES); \
    HandleUnsupported(PFNGLVERTEX4XOESPROC, glVertex4xOES); \
    HandleUnsupported(PFNGLVERTEX4XVOESPROC, glVertex4xvOES); \
    HandleUnsupported(PFNGLQUERYMATRIXXOESPROC, glQueryMatrixxOES); \
    HandleUnsupported(PFNGLCLEARDEPTHFOESPROC, glClearDepthfOES); \
    HandleUnsupported(PFNGLCLIPPLANEFOESPROC, glClipPlanefOES); \
    HandleUnsupported(PFNGLDEPTHRANGEFOESPROC, glDepthRangefOES); \
    HandleUnsupported(PFNGLFRUSTUMFOESPROC, glFrustumfOES); \
    HandleUnsupported(PFNGLGETCLIPPLANEFOESPROC, glGetClipPlanefOES); \
    HandleUnsupported(PFNGLORTHOFOESPROC, glOrthofOES); \
    HandleUnsupported(PFNGLTBUFFERMASK3DFXPROC, glTbufferMask3DFX); \
    HandleUnsupported(PFNGLDEBUGMESSAGEENABLEAMDPROC, glDebugMessageEnableAMD); \
    HandleUnsupported(PFNGLDEBUGMESSAGEINSERTAMDPROC, glDebugMessageInsertAMD); \
    HandleUnsupported(PFNGLDEBUGMESSAGECALLBACKAMDPROC, glDebugMessageCallbackAMD); \
    HandleUnsupported(PFNGLGETDEBUGMESSAGELOGAMDPROC, glGetDebugMessageLogAMD); \
    HandleUnsupported(PFNGLBLENDFUNCINDEXEDAMDPROC, glBlendFuncIndexedAMD); \
    HandleUnsupported(PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC, glBlendFuncSeparateIndexedAMD); \
    HandleUnsupported(PFNGLBLENDEQUATIONINDEXEDAMDPROC, glBlendEquationIndexedAMD); \
    HandleUnsupported(PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC, glBlendEquationSeparateIndexedAMD); \
    HandleUnsupported(PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC, glFramebufferSamplePositionsfvAMD); \
    HandleUnsupported(PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC, glNamedFramebufferSamplePositionsfvAMD); \
    HandleUnsupported(PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC, glGetFramebufferParameterfvAMD); \
    HandleUnsupported(PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC, glGetNamedFramebufferParameterfvAMD); \
    HandleUnsupported(PFNGLVERTEXATTRIBPARAMETERIAMDPROC, glVertexAttribParameteriAMD); \
    HandleUnsupported(PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC, glMultiDrawArraysIndirectAMD); \
    HandleUnsupported(PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC, glMultiDrawElementsIndirectAMD); \
    HandleUnsupported(PFNGLGENNAMESAMDPROC, glGenNamesAMD); \
    HandleUnsupported(PFNGLDELETENAMESAMDPROC, glDeleteNamesAMD); \
    HandleUnsupported(PFNGLISNAMEAMDPROC, glIsNameAMD); \
    HandleUnsupported(PFNGLQUERYOBJECTPARAMETERUIAMDPROC, glQueryObjectParameteruiAMD); \
    HandleUnsupported(PFNGLSETMULTISAMPLEFVAMDPROC, glSetMultisamplefvAMD); \
    HandleUnsupported(PFNGLTEXSTORAGESPARSEAMDPROC, glTexStorageSparseAMD); \
    HandleUnsupported(PFNGLTEXTURESTORAGESPARSEAMDPROC, glTextureStorageSparseAMD); \
    HandleUnsupported(PFNGLSTENCILOPVALUEAMDPROC, glStencilOpValueAMD); \
    HandleUnsupported(PFNGLTESSELLATIONFACTORAMDPROC, glTessellationFactorAMD); \
    HandleUnsupported(PFNGLTESSELLATIONMODEAMDPROC, glTessellationModeAMD); \
    HandleUnsupported(PFNGLELEMENTPOINTERAPPLEPROC, glElementPointerAPPLE); \
    HandleUnsupported(PFNGLDRAWELEMENTARRAYAPPLEPROC, glDrawElementArrayAPPLE); \
    HandleUnsupported(PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC, glDrawRangeElementArrayAPPLE); \
    HandleUnsupported(PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC, glMultiDrawElementArrayAPPLE); \
    HandleUnsupported(PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC, glMultiDrawRangeElementArrayAPPLE); \
    HandleUnsupported(PFNGLGENFENCESAPPLEPROC, glGenFencesAPPLE); \
    HandleUnsupported(PFNGLDELETEFENCESAPPLEPROC, glDeleteFencesAPPLE); \
    HandleUnsupported(PFNGLSETFENCEAPPLEPROC, glSetFenceAPPLE); \
    HandleUnsupported(PFNGLISFENCEAPPLEPROC, glIsFenceAPPLE); \
    HandleUnsupported(PFNGLTESTFENCEAPPLEPROC, glTestFenceAPPLE); \
    HandleUnsupported(PFNGLFINISHFENCEAPPLEPROC, glFinishFenceAPPLE); \
    HandleUnsupported(PFNGLTESTOBJECTAPPLEPROC, glTestObjectAPPLE); \
    HandleUnsupported(PFNGLFINISHOBJECTAPPLEPROC, glFinishObjectAPPLE); \
    HandleUnsupported(PFNGLBUFFERPARAMETERIAPPLEPROC, glBufferParameteriAPPLE); \
    HandleUnsupported(PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC, glFlushMappedBufferRangeAPPLE); \
    HandleUnsupported(PFNGLOBJECTPURGEABLEAPPLEPROC, glObjectPurgeableAPPLE); \
    HandleUnsupported(PFNGLOBJECTUNPURGEABLEAPPLEPROC, glObjectUnpurgeableAPPLE); \
    HandleUnsupported(PFNGLGETOBJECTPARAMETERIVAPPLEPROC, glGetObjectParameterivAPPLE); \
    HandleUnsupported(PFNGLTEXTURERANGEAPPLEPROC, glTextureRangeAPPLE); \
    HandleUnsupported(PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC, glGetTexParameterPointervAPPLE); \
    HandleUnsupported(PFNGLBINDVERTEXARRAYAPPLEPROC, glBindVertexArrayAPPLE); \
    HandleUnsupported(PFNGLDELETEVERTEXARRAYSAPPLEPROC, glDeleteVertexArraysAPPLE); \
    HandleUnsupported(PFNGLGENVERTEXARRAYSAPPLEPROC, glGenVertexArraysAPPLE); \
    HandleUnsupported(PFNGLISVERTEXARRAYAPPLEPROC, glIsVertexArrayAPPLE); \
    HandleUnsupported(PFNGLVERTEXARRAYRANGEAPPLEPROC, glVertexArrayRangeAPPLE); \
    HandleUnsupported(PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC, glFlushVertexArrayRangeAPPLE); \
    HandleUnsupported(PFNGLVERTEXARRAYPARAMETERIAPPLEPROC, glVertexArrayParameteriAPPLE); \
    HandleUnsupported(PFNGLENABLEVERTEXATTRIBAPPLEPROC, glEnableVertexAttribAPPLE); \
    HandleUnsupported(PFNGLDISABLEVERTEXATTRIBAPPLEPROC, glDisableVertexAttribAPPLE); \
    HandleUnsupported(PFNGLISVERTEXATTRIBENABLEDAPPLEPROC, glIsVertexAttribEnabledAPPLE); \
    HandleUnsupported(PFNGLMAPVERTEXATTRIB1DAPPLEPROC, glMapVertexAttrib1dAPPLE); \
    HandleUnsupported(PFNGLMAPVERTEXATTRIB1FAPPLEPROC, glMapVertexAttrib1fAPPLE); \
    HandleUnsupported(PFNGLMAPVERTEXATTRIB2DAPPLEPROC, glMapVertexAttrib2dAPPLE); \
    HandleUnsupported(PFNGLMAPVERTEXATTRIB2FAPPLEPROC, glMapVertexAttrib2fAPPLE); \
    HandleUnsupported(PFNGLDRAWBUFFERSATIPROC, glDrawBuffersATI); \
    HandleUnsupported(PFNGLELEMENTPOINTERATIPROC, glElementPointerATI); \
    HandleUnsupported(PFNGLDRAWELEMENTARRAYATIPROC, glDrawElementArrayATI); \
    HandleUnsupported(PFNGLDRAWRANGEELEMENTARRAYATIPROC, glDrawRangeElementArrayATI); \
    HandleUnsupported(PFNGLTEXBUMPPARAMETERIVATIPROC, glTexBumpParameterivATI); \
    HandleUnsupported(PFNGLTEXBUMPPARAMETERFVATIPROC, glTexBumpParameterfvATI); \
    HandleUnsupported(PFNGLGETTEXBUMPPARAMETERIVATIPROC, glGetTexBumpParameterivATI); \
    HandleUnsupported(PFNGLGETTEXBUMPPARAMETERFVATIPROC, glGetTexBumpParameterfvATI); \
    HandleUnsupported(PFNGLGENFRAGMENTSHADERSATIPROC, glGenFragmentShadersATI); \
    HandleUnsupported(PFNGLBINDFRAGMENTSHADERATIPROC, glBindFragmentShaderATI); \
    HandleUnsupported(PFNGLDELETEFRAGMENTSHADERATIPROC, glDeleteFragmentShaderATI); \
    HandleUnsupported(PFNGLBEGINFRAGMENTSHADERATIPROC, glBeginFragmentShaderATI); \
    HandleUnsupported(PFNGLENDFRAGMENTSHADERATIPROC, glEndFragmentShaderATI); \
    HandleUnsupported(PFNGLPASSTEXCOORDATIPROC, glPassTexCoordATI); \
    HandleUnsupported(PFNGLSAMPLEMAPATIPROC, glSampleMapATI); \
    HandleUnsupported(PFNGLCOLORFRAGMENTOP1ATIPROC, glColorFragmentOp1ATI); \
    HandleUnsupported(PFNGLCOLORFRAGMENTOP2ATIPROC, glColorFragmentOp2ATI); \
    HandleUnsupported(PFNGLCOLORFRAGMENTOP3ATIPROC, glColorFragmentOp3ATI); \
    HandleUnsupported(PFNGLALPHAFRAGMENTOP1ATIPROC, glAlphaFragmentOp1ATI); \
    HandleUnsupported(PFNGLALPHAFRAGMENTOP2ATIPROC, glAlphaFragmentOp2ATI); \
    HandleUnsupported(PFNGLALPHAFRAGMENTOP3ATIPROC, glAlphaFragmentOp3ATI); \
    HandleUnsupported(PFNGLSETFRAGMENTSHADERCONSTANTATIPROC, glSetFragmentShaderConstantATI); \
    HandleUnsupported(PFNGLMAPOBJECTBUFFERATIPROC, glMapObjectBufferATI); \
    HandleUnsupported(PFNGLUNMAPOBJECTBUFFERATIPROC, glUnmapObjectBufferATI); \
    HandleUnsupported(PFNGLPNTRIANGLESIATIPROC, glPNTrianglesiATI); \
    HandleUnsupported(PFNGLPNTRIANGLESFATIPROC, glPNTrianglesfATI); \
    HandleUnsupported(PFNGLSTENCILOPSEPARATEATIPROC, glStencilOpSeparateATI); \
    HandleUnsupported(PFNGLSTENCILFUNCSEPARATEATIPROC, glStencilFuncSeparateATI); \
    HandleUnsupported(PFNGLNEWOBJECTBUFFERATIPROC, glNewObjectBufferATI); \
    HandleUnsupported(PFNGLISOBJECTBUFFERATIPROC, glIsObjectBufferATI); \
    HandleUnsupported(PFNGLUPDATEOBJECTBUFFERATIPROC, glUpdateObjectBufferATI); \
    HandleUnsupported(PFNGLGETOBJECTBUFFERFVATIPROC, glGetObjectBufferfvATI); \
    HandleUnsupported(PFNGLGETOBJECTBUFFERIVATIPROC, glGetObjectBufferivATI); \
    HandleUnsupported(PFNGLFREEOBJECTBUFFERATIPROC, glFreeObjectBufferATI); \
    HandleUnsupported(PFNGLARRAYOBJECTATIPROC, glArrayObjectATI); \
    HandleUnsupported(PFNGLGETARRAYOBJECTFVATIPROC, glGetArrayObjectfvATI); \
    HandleUnsupported(PFNGLGETARRAYOBJECTIVATIPROC, glGetArrayObjectivATI); \
    HandleUnsupported(PFNGLVARIANTARRAYOBJECTATIPROC, glVariantArrayObjectATI); \
    HandleUnsupported(PFNGLGETVARIANTARRAYOBJECTFVATIPROC, glGetVariantArrayObjectfvATI); \
    HandleUnsupported(PFNGLGETVARIANTARRAYOBJECTIVATIPROC, glGetVariantArrayObjectivATI); \
    HandleUnsupported(PFNGLVERTEXATTRIBARRAYOBJECTATIPROC, glVertexAttribArrayObjectATI); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC, glGetVertexAttribArrayObjectfvATI); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC, glGetVertexAttribArrayObjectivATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM1SATIPROC, glVertexStream1sATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM1SVATIPROC, glVertexStream1svATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM1IATIPROC, glVertexStream1iATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM1IVATIPROC, glVertexStream1ivATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM1FATIPROC, glVertexStream1fATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM1FVATIPROC, glVertexStream1fvATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM1DATIPROC, glVertexStream1dATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM1DVATIPROC, glVertexStream1dvATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM2SATIPROC, glVertexStream2sATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM2SVATIPROC, glVertexStream2svATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM2IATIPROC, glVertexStream2iATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM2IVATIPROC, glVertexStream2ivATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM2FATIPROC, glVertexStream2fATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM2FVATIPROC, glVertexStream2fvATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM2DATIPROC, glVertexStream2dATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM2DVATIPROC, glVertexStream2dvATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM3SATIPROC, glVertexStream3sATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM3SVATIPROC, glVertexStream3svATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM3IATIPROC, glVertexStream3iATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM3IVATIPROC, glVertexStream3ivATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM3FATIPROC, glVertexStream3fATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM3FVATIPROC, glVertexStream3fvATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM3DATIPROC, glVertexStream3dATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM3DVATIPROC, glVertexStream3dvATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM4SATIPROC, glVertexStream4sATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM4SVATIPROC, glVertexStream4svATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM4IATIPROC, glVertexStream4iATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM4IVATIPROC, glVertexStream4ivATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM4FATIPROC, glVertexStream4fATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM4FVATIPROC, glVertexStream4fvATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM4DATIPROC, glVertexStream4dATI); \
    HandleUnsupported(PFNGLVERTEXSTREAM4DVATIPROC, glVertexStream4dvATI); \
    HandleUnsupported(PFNGLNORMALSTREAM3BATIPROC, glNormalStream3bATI); \
    HandleUnsupported(PFNGLNORMALSTREAM3BVATIPROC, glNormalStream3bvATI); \
    HandleUnsupported(PFNGLNORMALSTREAM3SATIPROC, glNormalStream3sATI); \
    HandleUnsupported(PFNGLNORMALSTREAM3SVATIPROC, glNormalStream3svATI); \
    HandleUnsupported(PFNGLNORMALSTREAM3IATIPROC, glNormalStream3iATI); \
    HandleUnsupported(PFNGLNORMALSTREAM3IVATIPROC, glNormalStream3ivATI); \
    HandleUnsupported(PFNGLNORMALSTREAM3FATIPROC, glNormalStream3fATI); \
    HandleUnsupported(PFNGLNORMALSTREAM3FVATIPROC, glNormalStream3fvATI); \
    HandleUnsupported(PFNGLNORMALSTREAM3DATIPROC, glNormalStream3dATI); \
    HandleUnsupported(PFNGLNORMALSTREAM3DVATIPROC, glNormalStream3dvATI); \
    HandleUnsupported(PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC, glClientActiveVertexStreamATI); \
    HandleUnsupported(PFNGLVERTEXBLENDENVIATIPROC, glVertexBlendEnviATI); \
    HandleUnsupported(PFNGLVERTEXBLENDENVFATIPROC, glVertexBlendEnvfATI); \
    HandleUnsupported(PFNGLUNIFORMBUFFEREXTPROC, glUniformBufferEXT); \
    HandleUnsupported(PFNGLGETUNIFORMBUFFERSIZEEXTPROC, glGetUniformBufferSizeEXT); \
    HandleUnsupported(PFNGLGETUNIFORMOFFSETEXTPROC, glGetUniformOffsetEXT); \
    HandleUnsupported(PFNGLBLENDFUNCSEPARATEEXTPROC, glBlendFuncSeparateEXT); \
    HandleUnsupported(PFNGLCOLORSUBTABLEEXTPROC, glColorSubTableEXT); \
    HandleUnsupported(PFNGLCOPYCOLORSUBTABLEEXTPROC, glCopyColorSubTableEXT); \
    HandleUnsupported(PFNGLLOCKARRAYSEXTPROC, glLockArraysEXT); \
    HandleUnsupported(PFNGLUNLOCKARRAYSEXTPROC, glUnlockArraysEXT); \
    HandleUnsupported(PFNGLCONVOLUTIONFILTER1DEXTPROC, glConvolutionFilter1DEXT); \
    HandleUnsupported(PFNGLCONVOLUTIONFILTER2DEXTPROC, glConvolutionFilter2DEXT); \
    HandleUnsupported(PFNGLCONVOLUTIONPARAMETERFEXTPROC, glConvolutionParameterfEXT); \
    HandleUnsupported(PFNGLCONVOLUTIONPARAMETERFVEXTPROC, glConvolutionParameterfvEXT); \
    HandleUnsupported(PFNGLCONVOLUTIONPARAMETERIEXTPROC, glConvolutionParameteriEXT); \
    HandleUnsupported(PFNGLCONVOLUTIONPARAMETERIVEXTPROC, glConvolutionParameterivEXT); \
    HandleUnsupported(PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC, glCopyConvolutionFilter1DEXT); \
    HandleUnsupported(PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC, glCopyConvolutionFilter2DEXT); \
    HandleUnsupported(PFNGLGETCONVOLUTIONFILTEREXTPROC, glGetConvolutionFilterEXT); \
    HandleUnsupported(PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC, glGetConvolutionParameterfvEXT); \
    HandleUnsupported(PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC, glGetConvolutionParameterivEXT); \
    HandleUnsupported(PFNGLGETSEPARABLEFILTEREXTPROC, glGetSeparableFilterEXT); \
    HandleUnsupported(PFNGLSEPARABLEFILTER2DEXTPROC, glSeparableFilter2DEXT); \
    HandleUnsupported(PFNGLTANGENT3BEXTPROC, glTangent3bEXT); \
    HandleUnsupported(PFNGLTANGENT3BVEXTPROC, glTangent3bvEXT); \
    HandleUnsupported(PFNGLTANGENT3DEXTPROC, glTangent3dEXT); \
    HandleUnsupported(PFNGLTANGENT3DVEXTPROC, glTangent3dvEXT); \
    HandleUnsupported(PFNGLTANGENT3FEXTPROC, glTangent3fEXT); \
    HandleUnsupported(PFNGLTANGENT3FVEXTPROC, glTangent3fvEXT); \
    HandleUnsupported(PFNGLTANGENT3IEXTPROC, glTangent3iEXT); \
    HandleUnsupported(PFNGLTANGENT3IVEXTPROC, glTangent3ivEXT); \
    HandleUnsupported(PFNGLTANGENT3SEXTPROC, glTangent3sEXT); \
    HandleUnsupported(PFNGLTANGENT3SVEXTPROC, glTangent3svEXT); \
    HandleUnsupported(PFNGLBINORMAL3BEXTPROC, glBinormal3bEXT); \
    HandleUnsupported(PFNGLBINORMAL3BVEXTPROC, glBinormal3bvEXT); \
    HandleUnsupported(PFNGLBINORMAL3DEXTPROC, glBinormal3dEXT); \
    HandleUnsupported(PFNGLBINORMAL3DVEXTPROC, glBinormal3dvEXT); \
    HandleUnsupported(PFNGLBINORMAL3FEXTPROC, glBinormal3fEXT); \
    HandleUnsupported(PFNGLBINORMAL3FVEXTPROC, glBinormal3fvEXT); \
    HandleUnsupported(PFNGLBINORMAL3IEXTPROC, glBinormal3iEXT); \
    HandleUnsupported(PFNGLBINORMAL3IVEXTPROC, glBinormal3ivEXT); \
    HandleUnsupported(PFNGLBINORMAL3SEXTPROC, glBinormal3sEXT); \
    HandleUnsupported(PFNGLBINORMAL3SVEXTPROC, glBinormal3svEXT); \
    HandleUnsupported(PFNGLTANGENTPOINTEREXTPROC, glTangentPointerEXT); \
    HandleUnsupported(PFNGLBINORMALPOINTEREXTPROC, glBinormalPointerEXT); \
    HandleUnsupported(PFNGLCOPYTEXIMAGE1DEXTPROC, glCopyTexImage1DEXT); \
    HandleUnsupported(PFNGLCOPYTEXIMAGE2DEXTPROC, glCopyTexImage2DEXT); \
    HandleUnsupported(PFNGLCOPYTEXSUBIMAGE1DEXTPROC, glCopyTexSubImage1DEXT); \
    HandleUnsupported(PFNGLCOPYTEXSUBIMAGE2DEXTPROC, glCopyTexSubImage2DEXT); \
    HandleUnsupported(PFNGLCOPYTEXSUBIMAGE3DEXTPROC, glCopyTexSubImage3DEXT); \
    HandleUnsupported(PFNGLCULLPARAMETERDVEXTPROC, glCullParameterdvEXT); \
    HandleUnsupported(PFNGLCULLPARAMETERFVEXTPROC, glCullParameterfvEXT); \
    HandleUnsupported(PFNGLBUFFERSTORAGEEXTERNALEXTPROC, glBufferStorageExternalEXT); \
    HandleUnsupported(PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC, glNamedBufferStorageExternalEXT); \
    HandleUnsupported(PFNGLFOGCOORDFEXTPROC, glFogCoordfEXT); \
    HandleUnsupported(PFNGLFOGCOORDFVEXTPROC, glFogCoordfvEXT); \
    HandleUnsupported(PFNGLFOGCOORDDEXTPROC, glFogCoorddEXT); \
    HandleUnsupported(PFNGLFOGCOORDDVEXTPROC, glFogCoorddvEXT); \
    HandleUnsupported(PFNGLFOGCOORDPOINTEREXTPROC, glFogCoordPointerEXT); \
    HandleUnsupported(PFNGLPROGRAMENVPARAMETERS4FVEXTPROC, glProgramEnvParameters4fvEXT); \
    HandleUnsupported(PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC, glProgramLocalParameters4fvEXT); \
    HandleUnsupported(PFNGLGETHISTOGRAMEXTPROC, glGetHistogramEXT); \
    HandleUnsupported(PFNGLGETHISTOGRAMPARAMETERFVEXTPROC, glGetHistogramParameterfvEXT); \
    HandleUnsupported(PFNGLGETHISTOGRAMPARAMETERIVEXTPROC, glGetHistogramParameterivEXT); \
    HandleUnsupported(PFNGLGETMINMAXEXTPROC, glGetMinmaxEXT); \
    HandleUnsupported(PFNGLGETMINMAXPARAMETERFVEXTPROC, glGetMinmaxParameterfvEXT); \
    HandleUnsupported(PFNGLGETMINMAXPARAMETERIVEXTPROC, glGetMinmaxParameterivEXT); \
    HandleUnsupported(PFNGLHISTOGRAMEXTPROC, glHistogramEXT); \
    HandleUnsupported(PFNGLMINMAXEXTPROC, glMinmaxEXT); \
    HandleUnsupported(PFNGLRESETHISTOGRAMEXTPROC, glResetHistogramEXT); \
    HandleUnsupported(PFNGLRESETMINMAXEXTPROC, glResetMinmaxEXT); \
    HandleUnsupported(PFNGLINDEXFUNCEXTPROC, glIndexFuncEXT); \
    HandleUnsupported(PFNGLINDEXMATERIALEXTPROC, glIndexMaterialEXT); \
    HandleUnsupported(PFNGLAPPLYTEXTUREEXTPROC, glApplyTextureEXT); \
    HandleUnsupported(PFNGLTEXTURELIGHTEXTPROC, glTextureLightEXT); \
    HandleUnsupported(PFNGLTEXTUREMATERIALEXTPROC, glTextureMaterialEXT); \
    HandleUnsupported(PFNGLGETUNSIGNEDBYTEVEXTPROC, glGetUnsignedBytevEXT); \
    HandleUnsupported(PFNGLGETUNSIGNEDBYTEI_VEXTPROC, glGetUnsignedBytei_vEXT); \
    HandleUnsupported(PFNGLDELETEMEMORYOBJECTSEXTPROC, glDeleteMemoryObjectsEXT); \
    HandleUnsupported(PFNGLISMEMORYOBJECTEXTPROC, glIsMemoryObjectEXT); \
    HandleUnsupported(PFNGLCREATEMEMORYOBJECTSEXTPROC, glCreateMemoryObjectsEXT); \
    HandleUnsupported(PFNGLMEMORYOBJECTPARAMETERIVEXTPROC, glMemoryObjectParameterivEXT); \
    HandleUnsupported(PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC, glGetMemoryObjectParameterivEXT); \
    HandleUnsupported(PFNGLTEXSTORAGEMEM2DEXTPROC, glTexStorageMem2DEXT); \
    HandleUnsupported(PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC, glTexStorageMem2DMultisampleEXT); \
    HandleUnsupported(PFNGLTEXSTORAGEMEM3DEXTPROC, glTexStorageMem3DEXT); \
    HandleUnsupported(PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC, glTexStorageMem3DMultisampleEXT); \
    HandleUnsupported(PFNGLBUFFERSTORAGEMEMEXTPROC, glBufferStorageMemEXT); \
    HandleUnsupported(PFNGLTEXTURESTORAGEMEM2DEXTPROC, glTextureStorageMem2DEXT); \
    HandleUnsupported(PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC, glTextureStorageMem2DMultisampleEXT); \
    HandleUnsupported(PFNGLTEXTURESTORAGEMEM3DEXTPROC, glTextureStorageMem3DEXT); \
    HandleUnsupported(PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC, glTextureStorageMem3DMultisampleEXT); \
    HandleUnsupported(PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC, glNamedBufferStorageMemEXT); \
    HandleUnsupported(PFNGLTEXSTORAGEMEM1DEXTPROC, glTexStorageMem1DEXT); \
    HandleUnsupported(PFNGLTEXTURESTORAGEMEM1DEXTPROC, glTextureStorageMem1DEXT); \
    HandleUnsupported(PFNGLIMPORTMEMORYFDEXTPROC, glImportMemoryFdEXT); \
    HandleUnsupported(PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC, glImportMemoryWin32HandleEXT); \
    HandleUnsupported(PFNGLIMPORTMEMORYWIN32NAMEEXTPROC, glImportMemoryWin32NameEXT); \
    HandleUnsupported(PFNGLMULTIDRAWELEMENTSEXTPROC, glMultiDrawElementsEXT); \
    HandleUnsupported(PFNGLSAMPLEMASKEXTPROC, glSampleMaskEXT); \
    HandleUnsupported(PFNGLSAMPLEPATTERNEXTPROC, glSamplePatternEXT); \
    HandleUnsupported(PFNGLCOLORTABLEEXTPROC, glColorTableEXT); \
    HandleUnsupported(PFNGLGETCOLORTABLEEXTPROC, glGetColorTableEXT); \
    HandleUnsupported(PFNGLGETCOLORTABLEPARAMETERIVEXTPROC, glGetColorTableParameterivEXT); \
    HandleUnsupported(PFNGLGETCOLORTABLEPARAMETERFVEXTPROC, glGetColorTableParameterfvEXT); \
    HandleUnsupported(PFNGLPIXELTRANSFORMPARAMETERIEXTPROC, glPixelTransformParameteriEXT); \
    HandleUnsupported(PFNGLPIXELTRANSFORMPARAMETERFEXTPROC, glPixelTransformParameterfEXT); \
    HandleUnsupported(PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC, glPixelTransformParameterivEXT); \
    HandleUnsupported(PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC, glPixelTransformParameterfvEXT); \
    HandleUnsupported(PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC, glGetPixelTransformParameterivEXT); \
    HandleUnsupported(PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC, glGetPixelTransformParameterfvEXT); \
    HandleUnsupported(PFNGLPOLYGONOFFSETEXTPROC, glPolygonOffsetEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3BEXTPROC, glSecondaryColor3bEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3BVEXTPROC, glSecondaryColor3bvEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3DEXTPROC, glSecondaryColor3dEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3DVEXTPROC, glSecondaryColor3dvEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3FEXTPROC, glSecondaryColor3fEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3FVEXTPROC, glSecondaryColor3fvEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3IEXTPROC, glSecondaryColor3iEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3IVEXTPROC, glSecondaryColor3ivEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3SEXTPROC, glSecondaryColor3sEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3SVEXTPROC, glSecondaryColor3svEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3UBEXTPROC, glSecondaryColor3ubEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3UBVEXTPROC, glSecondaryColor3ubvEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3UIEXTPROC, glSecondaryColor3uiEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3UIVEXTPROC, glSecondaryColor3uivEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3USEXTPROC, glSecondaryColor3usEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3USVEXTPROC, glSecondaryColor3usvEXT); \
    HandleUnsupported(PFNGLSECONDARYCOLORPOINTEREXTPROC, glSecondaryColorPointerEXT); \
    HandleUnsupported(PFNGLGENSEMAPHORESEXTPROC, glGenSemaphoresEXT); \
    HandleUnsupported(PFNGLDELETESEMAPHORESEXTPROC, glDeleteSemaphoresEXT); \
    HandleUnsupported(PFNGLISSEMAPHOREEXTPROC, glIsSemaphoreEXT); \
    HandleUnsupported(PFNGLSEMAPHOREPARAMETERUI64VEXTPROC, glSemaphoreParameterui64vEXT); \
    HandleUnsupported(PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC, glGetSemaphoreParameterui64vEXT); \
    HandleUnsupported(PFNGLWAITSEMAPHOREEXTPROC, glWaitSemaphoreEXT); \
    HandleUnsupported(PFNGLSIGNALSEMAPHOREEXTPROC, glSignalSemaphoreEXT); \
    HandleUnsupported(PFNGLIMPORTSEMAPHOREFDEXTPROC, glImportSemaphoreFdEXT); \
    HandleUnsupported(PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC, glImportSemaphoreWin32HandleEXT); \
    HandleUnsupported(PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC, glImportSemaphoreWin32NameEXT); \
    HandleUnsupported(PFNGLSTENCILCLEARTAGEXTPROC, glStencilClearTagEXT); \
    HandleUnsupported(PFNGLACTIVESTENCILFACEEXTPROC, glActiveStencilFaceEXT); \
    HandleUnsupported(PFNGLTEXSUBIMAGE1DEXTPROC, glTexSubImage1DEXT); \
    HandleUnsupported(PFNGLTEXSUBIMAGE2DEXTPROC, glTexSubImage2DEXT); \
    HandleUnsupported(PFNGLTEXSUBIMAGE3DEXTPROC, glTexSubImage3DEXT); \
    HandleUnsupported(PFNGLCLEARCOLORIIEXTPROC, glClearColorIiEXT); \
    HandleUnsupported(PFNGLCLEARCOLORIUIEXTPROC, glClearColorIuiEXT); \
    HandleUnsupported(PFNGLARETEXTURESRESIDENTEXTPROC, glAreTexturesResidentEXT); \
    HandleUnsupported(PFNGLBINDTEXTUREEXTPROC, glBindTextureEXT); \
    HandleUnsupported(PFNGLDELETETEXTURESEXTPROC, glDeleteTexturesEXT); \
    HandleUnsupported(PFNGLGENTEXTURESEXTPROC, glGenTexturesEXT); \
    HandleUnsupported(PFNGLISTEXTUREEXTPROC, glIsTextureEXT); \
    HandleUnsupported(PFNGLPRIORITIZETEXTURESEXTPROC, glPrioritizeTexturesEXT); \
    HandleUnsupported(PFNGLTEXTURENORMALEXTPROC, glTextureNormalEXT); \
    HandleUnsupported(PFNGLBINDBUFFEROFFSETEXTPROC, glBindBufferOffsetEXT); \
    HandleUnsupported(PFNGLARRAYELEMENTEXTPROC, glArrayElementEXT); \
    HandleUnsupported(PFNGLCOLORPOINTEREXTPROC, glColorPointerEXT); \
    HandleUnsupported(PFNGLDRAWARRAYSEXTPROC, glDrawArraysEXT); \
    HandleUnsupported(PFNGLEDGEFLAGPOINTEREXTPROC, glEdgeFlagPointerEXT); \
    HandleUnsupported(PFNGLGETPOINTERVEXTPROC, glGetPointervEXT); \
    HandleUnsupported(PFNGLINDEXPOINTEREXTPROC, glIndexPointerEXT); \
    HandleUnsupported(PFNGLNORMALPOINTEREXTPROC, glNormalPointerEXT); \
    HandleUnsupported(PFNGLTEXCOORDPOINTEREXTPROC, glTexCoordPointerEXT); \
    HandleUnsupported(PFNGLVERTEXPOINTEREXTPROC, glVertexPointerEXT); \
    HandleUnsupported(PFNGLBEGINVERTEXSHADEREXTPROC, glBeginVertexShaderEXT); \
    HandleUnsupported(PFNGLENDVERTEXSHADEREXTPROC, glEndVertexShaderEXT); \
    HandleUnsupported(PFNGLBINDVERTEXSHADEREXTPROC, glBindVertexShaderEXT); \
    HandleUnsupported(PFNGLGENVERTEXSHADERSEXTPROC, glGenVertexShadersEXT); \
    HandleUnsupported(PFNGLDELETEVERTEXSHADEREXTPROC, glDeleteVertexShaderEXT); \
    HandleUnsupported(PFNGLSHADEROP1EXTPROC, glShaderOp1EXT); \
    HandleUnsupported(PFNGLSHADEROP2EXTPROC, glShaderOp2EXT); \
    HandleUnsupported(PFNGLSHADEROP3EXTPROC, glShaderOp3EXT); \
    HandleUnsupported(PFNGLSWIZZLEEXTPROC, glSwizzleEXT); \
    HandleUnsupported(PFNGLWRITEMASKEXTPROC, glWriteMaskEXT); \
    HandleUnsupported(PFNGLINSERTCOMPONENTEXTPROC, glInsertComponentEXT); \
    HandleUnsupported(PFNGLEXTRACTCOMPONENTEXTPROC, glExtractComponentEXT); \
    HandleUnsupported(PFNGLGENSYMBOLSEXTPROC, glGenSymbolsEXT); \
    HandleUnsupported(PFNGLSETINVARIANTEXTPROC, glSetInvariantEXT); \
    HandleUnsupported(PFNGLSETLOCALCONSTANTEXTPROC, glSetLocalConstantEXT); \
    HandleUnsupported(PFNGLVARIANTBVEXTPROC, glVariantbvEXT); \
    HandleUnsupported(PFNGLVARIANTSVEXTPROC, glVariantsvEXT); \
    HandleUnsupported(PFNGLVARIANTIVEXTPROC, glVariantivEXT); \
    HandleUnsupported(PFNGLVARIANTFVEXTPROC, glVariantfvEXT); \
    HandleUnsupported(PFNGLVARIANTDVEXTPROC, glVariantdvEXT); \
    HandleUnsupported(PFNGLVARIANTUBVEXTPROC, glVariantubvEXT); \
    HandleUnsupported(PFNGLVARIANTUSVEXTPROC, glVariantusvEXT); \
    HandleUnsupported(PFNGLVARIANTUIVEXTPROC, glVariantuivEXT); \
    HandleUnsupported(PFNGLVARIANTPOINTEREXTPROC, glVariantPointerEXT); \
    HandleUnsupported(PFNGLENABLEVARIANTCLIENTSTATEEXTPROC, glEnableVariantClientStateEXT); \
    HandleUnsupported(PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC, glDisableVariantClientStateEXT); \
    HandleUnsupported(PFNGLBINDLIGHTPARAMETEREXTPROC, glBindLightParameterEXT); \
    HandleUnsupported(PFNGLBINDMATERIALPARAMETEREXTPROC, glBindMaterialParameterEXT); \
    HandleUnsupported(PFNGLBINDTEXGENPARAMETEREXTPROC, glBindTexGenParameterEXT); \
    HandleUnsupported(PFNGLBINDTEXTUREUNITPARAMETEREXTPROC, glBindTextureUnitParameterEXT); \
    HandleUnsupported(PFNGLBINDPARAMETEREXTPROC, glBindParameterEXT); \
    HandleUnsupported(PFNGLISVARIANTENABLEDEXTPROC, glIsVariantEnabledEXT); \
    HandleUnsupported(PFNGLGETVARIANTBOOLEANVEXTPROC, glGetVariantBooleanvEXT); \
    HandleUnsupported(PFNGLGETVARIANTINTEGERVEXTPROC, glGetVariantIntegervEXT); \
    HandleUnsupported(PFNGLGETVARIANTFLOATVEXTPROC, glGetVariantFloatvEXT); \
    HandleUnsupported(PFNGLGETVARIANTPOINTERVEXTPROC, glGetVariantPointervEXT); \
    HandleUnsupported(PFNGLGETINVARIANTBOOLEANVEXTPROC, glGetInvariantBooleanvEXT); \
    HandleUnsupported(PFNGLGETINVARIANTINTEGERVEXTPROC, glGetInvariantIntegervEXT); \
    HandleUnsupported(PFNGLGETINVARIANTFLOATVEXTPROC, glGetInvariantFloatvEXT); \
    HandleUnsupported(PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC, glGetLocalConstantBooleanvEXT); \
    HandleUnsupported(PFNGLGETLOCALCONSTANTINTEGERVEXTPROC, glGetLocalConstantIntegervEXT); \
    HandleUnsupported(PFNGLGETLOCALCONSTANTFLOATVEXTPROC, glGetLocalConstantFloatvEXT); \
    HandleUnsupported(PFNGLVERTEXWEIGHTFEXTPROC, glVertexWeightfEXT); \
    HandleUnsupported(PFNGLVERTEXWEIGHTFVEXTPROC, glVertexWeightfvEXT); \
    HandleUnsupported(PFNGLVERTEXWEIGHTPOINTEREXTPROC, glVertexWeightPointerEXT); \
    HandleUnsupported(PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC, glAcquireKeyedMutexWin32EXT); \
    HandleUnsupported(PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC, glReleaseKeyedMutexWin32EXT); \
    HandleUnsupported(PFNGLIMPORTSYNCEXTPROC, glImportSyncEXT); \
    HandleUnsupported(PFNGLIMAGETRANSFORMPARAMETERIHPPROC, glImageTransformParameteriHP); \
    HandleUnsupported(PFNGLIMAGETRANSFORMPARAMETERFHPPROC, glImageTransformParameterfHP); \
    HandleUnsupported(PFNGLIMAGETRANSFORMPARAMETERIVHPPROC, glImageTransformParameterivHP); \
    HandleUnsupported(PFNGLIMAGETRANSFORMPARAMETERFVHPPROC, glImageTransformParameterfvHP); \
    HandleUnsupported(PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC, glGetImageTransformParameterivHP); \
    HandleUnsupported(PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC, glGetImageTransformParameterfvHP); \
    HandleUnsupported(PFNGLMULTIMODEDRAWARRAYSIBMPROC, glMultiModeDrawArraysIBM); \
    HandleUnsupported(PFNGLMULTIMODEDRAWELEMENTSIBMPROC, glMultiModeDrawElementsIBM); \
    HandleUnsupported(PFNGLFLUSHSTATICDATAIBMPROC, glFlushStaticDataIBM); \
    HandleUnsupported(PFNGLCOLORPOINTERLISTIBMPROC, glColorPointerListIBM); \
    HandleUnsupported(PFNGLSECONDARYCOLORPOINTERLISTIBMPROC, glSecondaryColorPointerListIBM); \
    HandleUnsupported(PFNGLEDGEFLAGPOINTERLISTIBMPROC, glEdgeFlagPointerListIBM); \
    HandleUnsupported(PFNGLFOGCOORDPOINTERLISTIBMPROC, glFogCoordPointerListIBM); \
    HandleUnsupported(PFNGLINDEXPOINTERLISTIBMPROC, glIndexPointerListIBM); \
    HandleUnsupported(PFNGLNORMALPOINTERLISTIBMPROC, glNormalPointerListIBM); \
    HandleUnsupported(PFNGLTEXCOORDPOINTERLISTIBMPROC, glTexCoordPointerListIBM); \
    HandleUnsupported(PFNGLVERTEXPOINTERLISTIBMPROC, glVertexPointerListIBM); \
    HandleUnsupported(PFNGLBLENDFUNCSEPARATEINGRPROC, glBlendFuncSeparateINGR); \
    HandleUnsupported(PFNGLSYNCTEXTUREINTELPROC, glSyncTextureINTEL); \
    HandleUnsupported(PFNGLUNMAPTEXTURE2DINTELPROC, glUnmapTexture2DINTEL); \
    HandleUnsupported(PFNGLMAPTEXTURE2DINTELPROC, glMapTexture2DINTEL); \
    HandleUnsupported(PFNGLVERTEXPOINTERVINTELPROC, glVertexPointervINTEL); \
    HandleUnsupported(PFNGLNORMALPOINTERVINTELPROC, glNormalPointervINTEL); \
    HandleUnsupported(PFNGLCOLORPOINTERVINTELPROC, glColorPointervINTEL); \
    HandleUnsupported(PFNGLTEXCOORDPOINTERVINTELPROC, glTexCoordPointervINTEL); \
    HandleUnsupported(PFNGLRESIZEBUFFERSMESAPROC, glResizeBuffersMESA); \
    HandleUnsupported(PFNGLWINDOWPOS2DMESAPROC, glWindowPos2dMESA); \
    HandleUnsupported(PFNGLWINDOWPOS2DVMESAPROC, glWindowPos2dvMESA); \
    HandleUnsupported(PFNGLWINDOWPOS2FMESAPROC, glWindowPos2fMESA); \
    HandleUnsupported(PFNGLWINDOWPOS2FVMESAPROC, glWindowPos2fvMESA); \
    HandleUnsupported(PFNGLWINDOWPOS2IMESAPROC, glWindowPos2iMESA); \
    HandleUnsupported(PFNGLWINDOWPOS2IVMESAPROC, glWindowPos2ivMESA); \
    HandleUnsupported(PFNGLWINDOWPOS2SMESAPROC, glWindowPos2sMESA); \
    HandleUnsupported(PFNGLWINDOWPOS2SVMESAPROC, glWindowPos2svMESA); \
    HandleUnsupported(PFNGLWINDOWPOS3DMESAPROC, glWindowPos3dMESA); \
    HandleUnsupported(PFNGLWINDOWPOS3DVMESAPROC, glWindowPos3dvMESA); \
    HandleUnsupported(PFNGLWINDOWPOS3FMESAPROC, glWindowPos3fMESA); \
    HandleUnsupported(PFNGLWINDOWPOS3FVMESAPROC, glWindowPos3fvMESA); \
    HandleUnsupported(PFNGLWINDOWPOS3IMESAPROC, glWindowPos3iMESA); \
    HandleUnsupported(PFNGLWINDOWPOS3IVMESAPROC, glWindowPos3ivMESA); \
    HandleUnsupported(PFNGLWINDOWPOS3SMESAPROC, glWindowPos3sMESA); \
    HandleUnsupported(PFNGLWINDOWPOS3SVMESAPROC, glWindowPos3svMESA); \
    HandleUnsupported(PFNGLWINDOWPOS4DMESAPROC, glWindowPos4dMESA); \
    HandleUnsupported(PFNGLWINDOWPOS4DVMESAPROC, glWindowPos4dvMESA); \
    HandleUnsupported(PFNGLWINDOWPOS4FMESAPROC, glWindowPos4fMESA); \
    HandleUnsupported(PFNGLWINDOWPOS4FVMESAPROC, glWindowPos4fvMESA); \
    HandleUnsupported(PFNGLWINDOWPOS4IMESAPROC, glWindowPos4iMESA); \
    HandleUnsupported(PFNGLWINDOWPOS4IVMESAPROC, glWindowPos4ivMESA); \
    HandleUnsupported(PFNGLWINDOWPOS4SMESAPROC, glWindowPos4sMESA); \
    HandleUnsupported(PFNGLWINDOWPOS4SVMESAPROC, glWindowPos4svMESA); \
    HandleUnsupported(PFNGLBEGINCONDITIONALRENDERNVXPROC, glBeginConditionalRenderNVX); \
    HandleUnsupported(PFNGLENDCONDITIONALRENDERNVXPROC, glEndConditionalRenderNVX); \
    HandleUnsupported(PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC, glLGPUNamedBufferSubDataNVX); \
    HandleUnsupported(PFNGLLGPUCOPYIMAGESUBDATANVXPROC, glLGPUCopyImageSubDataNVX); \
    HandleUnsupported(PFNGLLGPUINTERLOCKNVXPROC, glLGPUInterlockNVX); \
    HandleUnsupported(PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC, glAlphaToCoverageDitherControlNV); \
    HandleUnsupported(PFNGLCOPYIMAGESUBDATANVPROC, glCopyImageSubDataNV); \
    HandleUnsupported(PFNGLDEPTHRANGEDNVPROC, glDepthRangedNV); \
    HandleUnsupported(PFNGLCLEARDEPTHDNVPROC, glClearDepthdNV); \
    HandleUnsupported(PFNGLDEPTHBOUNDSDNVPROC, glDepthBoundsdNV); \
    HandleUnsupported(PFNGLDRAWTEXTURENVPROC, glDrawTextureNV); \
    HandleUnsupported(PFNGLMAPCONTROLPOINTSNVPROC, glMapControlPointsNV); \
    HandleUnsupported(PFNGLMAPPARAMETERIVNVPROC, glMapParameterivNV); \
    HandleUnsupported(PFNGLMAPPARAMETERFVNVPROC, glMapParameterfvNV); \
    HandleUnsupported(PFNGLGETMAPCONTROLPOINTSNVPROC, glGetMapControlPointsNV); \
    HandleUnsupported(PFNGLGETMAPPARAMETERIVNVPROC, glGetMapParameterivNV); \
    HandleUnsupported(PFNGLGETMAPPARAMETERFVNVPROC, glGetMapParameterfvNV); \
    HandleUnsupported(PFNGLGETMAPATTRIBPARAMETERIVNVPROC, glGetMapAttribParameterivNV); \
    HandleUnsupported(PFNGLGETMAPATTRIBPARAMETERFVNVPROC, glGetMapAttribParameterfvNV); \
    HandleUnsupported(PFNGLEVALMAPSNVPROC, glEvalMapsNV); \
    HandleUnsupported(PFNGLGETMULTISAMPLEFVNVPROC, glGetMultisamplefvNV); \
    HandleUnsupported(PFNGLSAMPLEMASKINDEXEDNVPROC, glSampleMaskIndexedNV); \
    HandleUnsupported(PFNGLTEXRENDERBUFFERNVPROC, glTexRenderbufferNV); \
    HandleUnsupported(PFNGLDELETEFENCESNVPROC, glDeleteFencesNV); \
    HandleUnsupported(PFNGLGENFENCESNVPROC, glGenFencesNV); \
    HandleUnsupported(PFNGLISFENCENVPROC, glIsFenceNV); \
    HandleUnsupported(PFNGLTESTFENCENVPROC, glTestFenceNV); \
    HandleUnsupported(PFNGLGETFENCEIVNVPROC, glGetFenceivNV); \
    HandleUnsupported(PFNGLFINISHFENCENVPROC, glFinishFenceNV); \
    HandleUnsupported(PFNGLSETFENCENVPROC, glSetFenceNV); \
    HandleUnsupported(PFNGLPROGRAMNAMEDPARAMETER4FNVPROC, glProgramNamedParameter4fNV); \
    HandleUnsupported(PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC, glProgramNamedParameter4fvNV); \
    HandleUnsupported(PFNGLPROGRAMNAMEDPARAMETER4DNVPROC, glProgramNamedParameter4dNV); \
    HandleUnsupported(PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC, glProgramNamedParameter4dvNV); \
    HandleUnsupported(PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC, glGetProgramNamedParameterfvNV); \
    HandleUnsupported(PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC, glGetProgramNamedParameterdvNV); \
    HandleUnsupported(PFNGLPROGRAMVERTEXLIMITNVPROC, glProgramVertexLimitNV); \
    HandleUnsupported(PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC, glFramebufferTextureFaceEXT); \
    HandleUnsupported(PFNGLRENDERGPUMASKNVPROC, glRenderGpuMaskNV); \
    HandleUnsupported(PFNGLMULTICASTBUFFERSUBDATANVPROC, glMulticastBufferSubDataNV); \
    HandleUnsupported(PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC, glMulticastCopyBufferSubDataNV); \
    HandleUnsupported(PFNGLMULTICASTCOPYIMAGESUBDATANVPROC, glMulticastCopyImageSubDataNV); \
    HandleUnsupported(PFNGLMULTICASTBLITFRAMEBUFFERNVPROC, glMulticastBlitFramebufferNV); \
    HandleUnsupported(PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC, glMulticastFramebufferSampleLocationsfvNV); \
    HandleUnsupported(PFNGLMULTICASTBARRIERNVPROC, glMulticastBarrierNV); \
    HandleUnsupported(PFNGLMULTICASTWAITSYNCNVPROC, glMulticastWaitSyncNV); \
    HandleUnsupported(PFNGLMULTICASTGETQUERYOBJECTIVNVPROC, glMulticastGetQueryObjectivNV); \
    HandleUnsupported(PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC, glMulticastGetQueryObjectuivNV); \
    HandleUnsupported(PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC, glMulticastGetQueryObjecti64vNV); \
    HandleUnsupported(PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC, glMulticastGetQueryObjectui64vNV); \
    HandleUnsupported(PFNGLPROGRAMLOCALPARAMETERI4INVPROC, glProgramLocalParameterI4iNV); \
    HandleUnsupported(PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC, glProgramLocalParameterI4ivNV); \
    HandleUnsupported(PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC, glProgramLocalParametersI4ivNV); \
    HandleUnsupported(PFNGLPROGRAMLOCALPARAMETERI4UINVPROC, glProgramLocalParameterI4uiNV); \
    HandleUnsupported(PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC, glProgramLocalParameterI4uivNV); \
    HandleUnsupported(PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC, glProgramLocalParametersI4uivNV); \
    HandleUnsupported(PFNGLPROGRAMENVPARAMETERI4INVPROC, glProgramEnvParameterI4iNV); \
    HandleUnsupported(PFNGLPROGRAMENVPARAMETERI4IVNVPROC, glProgramEnvParameterI4ivNV); \
    HandleUnsupported(PFNGLPROGRAMENVPARAMETERSI4IVNVPROC, glProgramEnvParametersI4ivNV); \
    HandleUnsupported(PFNGLPROGRAMENVPARAMETERI4UINVPROC, glProgramEnvParameterI4uiNV); \
    HandleUnsupported(PFNGLPROGRAMENVPARAMETERI4UIVNVPROC, glProgramEnvParameterI4uivNV); \
    HandleUnsupported(PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC, glProgramEnvParametersI4uivNV); \
    HandleUnsupported(PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC, glGetProgramLocalParameterIivNV); \
    HandleUnsupported(PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC, glGetProgramLocalParameterIuivNV); \
    HandleUnsupported(PFNGLGETPROGRAMENVPARAMETERIIVNVPROC, glGetProgramEnvParameterIivNV); \
    HandleUnsupported(PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC, glGetProgramEnvParameterIuivNV); \
    HandleUnsupported(PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC, glProgramSubroutineParametersuivNV); \
    HandleUnsupported(PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC, glGetProgramSubroutineParameteruivNV); \
    HandleUnsupported(PFNGLVERTEX2HNVPROC, glVertex2hNV); \
    HandleUnsupported(PFNGLVERTEX2HVNVPROC, glVertex2hvNV); \
    HandleUnsupported(PFNGLVERTEX3HNVPROC, glVertex3hNV); \
    HandleUnsupported(PFNGLVERTEX3HVNVPROC, glVertex3hvNV); \
    HandleUnsupported(PFNGLVERTEX4HNVPROC, glVertex4hNV); \
    HandleUnsupported(PFNGLVERTEX4HVNVPROC, glVertex4hvNV); \
    HandleUnsupported(PFNGLNORMAL3HNVPROC, glNormal3hNV); \
    HandleUnsupported(PFNGLNORMAL3HVNVPROC, glNormal3hvNV); \
    HandleUnsupported(PFNGLCOLOR3HNVPROC, glColor3hNV); \
    HandleUnsupported(PFNGLCOLOR3HVNVPROC, glColor3hvNV); \
    HandleUnsupported(PFNGLCOLOR4HNVPROC, glColor4hNV); \
    HandleUnsupported(PFNGLCOLOR4HVNVPROC, glColor4hvNV); \
    HandleUnsupported(PFNGLTEXCOORD1HNVPROC, glTexCoord1hNV); \
    HandleUnsupported(PFNGLTEXCOORD1HVNVPROC, glTexCoord1hvNV); \
    HandleUnsupported(PFNGLTEXCOORD2HNVPROC, glTexCoord2hNV); \
    HandleUnsupported(PFNGLTEXCOORD2HVNVPROC, glTexCoord2hvNV); \
    HandleUnsupported(PFNGLTEXCOORD3HNVPROC, glTexCoord3hNV); \
    HandleUnsupported(PFNGLTEXCOORD3HVNVPROC, glTexCoord3hvNV); \
    HandleUnsupported(PFNGLTEXCOORD4HNVPROC, glTexCoord4hNV); \
    HandleUnsupported(PFNGLTEXCOORD4HVNVPROC, glTexCoord4hvNV); \
    HandleUnsupported(PFNGLMULTITEXCOORD1HNVPROC, glMultiTexCoord1hNV); \
    HandleUnsupported(PFNGLMULTITEXCOORD1HVNVPROC, glMultiTexCoord1hvNV); \
    HandleUnsupported(PFNGLMULTITEXCOORD2HNVPROC, glMultiTexCoord2hNV); \
    HandleUnsupported(PFNGLMULTITEXCOORD2HVNVPROC, glMultiTexCoord2hvNV); \
    HandleUnsupported(PFNGLMULTITEXCOORD3HNVPROC, glMultiTexCoord3hNV); \
    HandleUnsupported(PFNGLMULTITEXCOORD3HVNVPROC, glMultiTexCoord3hvNV); \
    HandleUnsupported(PFNGLMULTITEXCOORD4HNVPROC, glMultiTexCoord4hNV); \
    HandleUnsupported(PFNGLMULTITEXCOORD4HVNVPROC, glMultiTexCoord4hvNV); \
    HandleUnsupported(PFNGLFOGCOORDHNVPROC, glFogCoordhNV); \
    HandleUnsupported(PFNGLFOGCOORDHVNVPROC, glFogCoordhvNV); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3HNVPROC, glSecondaryColor3hNV); \
    HandleUnsupported(PFNGLSECONDARYCOLOR3HVNVPROC, glSecondaryColor3hvNV); \
    HandleUnsupported(PFNGLVERTEXWEIGHTHNVPROC, glVertexWeighthNV); \
    HandleUnsupported(PFNGLVERTEXWEIGHTHVNVPROC, glVertexWeighthvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB1HNVPROC, glVertexAttrib1hNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB1HVNVPROC, glVertexAttrib1hvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB2HNVPROC, glVertexAttrib2hNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB2HVNVPROC, glVertexAttrib2hvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB3HNVPROC, glVertexAttrib3hNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB3HVNVPROC, glVertexAttrib3hvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB4HNVPROC, glVertexAttrib4hNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB4HVNVPROC, glVertexAttrib4hvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS1HVNVPROC, glVertexAttribs1hvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS2HVNVPROC, glVertexAttribs2hvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS3HVNVPROC, glVertexAttribs3hvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS4HVNVPROC, glVertexAttribs4hvNV); \
    HandleUnsupported(PFNGLGENOCCLUSIONQUERIESNVPROC, glGenOcclusionQueriesNV); \
    HandleUnsupported(PFNGLDELETEOCCLUSIONQUERIESNVPROC, glDeleteOcclusionQueriesNV); \
    HandleUnsupported(PFNGLISOCCLUSIONQUERYNVPROC, glIsOcclusionQueryNV); \
    HandleUnsupported(PFNGLBEGINOCCLUSIONQUERYNVPROC, glBeginOcclusionQueryNV); \
    HandleUnsupported(PFNGLENDOCCLUSIONQUERYNVPROC, glEndOcclusionQueryNV); \
    HandleUnsupported(PFNGLGETOCCLUSIONQUERYIVNVPROC, glGetOcclusionQueryivNV); \
    HandleUnsupported(PFNGLGETOCCLUSIONQUERYUIVNVPROC, glGetOcclusionQueryuivNV); \
    HandleUnsupported(PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC, glProgramBufferParametersfvNV); \
    HandleUnsupported(PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC, glProgramBufferParametersIivNV); \
    HandleUnsupported(PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC, glProgramBufferParametersIuivNV); \
    HandleUnsupported(PFNGLPATHCOLORGENNVPROC, glPathColorGenNV); \
    HandleUnsupported(PFNGLPATHTEXGENNVPROC, glPathTexGenNV); \
    HandleUnsupported(PFNGLPATHFOGGENNVPROC, glPathFogGenNV); \
    HandleUnsupported(PFNGLGETPATHCOLORGENIVNVPROC, glGetPathColorGenivNV); \
    HandleUnsupported(PFNGLGETPATHCOLORGENFVNVPROC, glGetPathColorGenfvNV); \
    HandleUnsupported(PFNGLGETPATHTEXGENIVNVPROC, glGetPathTexGenivNV); \
    HandleUnsupported(PFNGLGETPATHTEXGENFVNVPROC, glGetPathTexGenfvNV); \
    HandleUnsupported(PFNGLPIXELDATARANGENVPROC, glPixelDataRangeNV); \
    HandleUnsupported(PFNGLFLUSHPIXELDATARANGENVPROC, glFlushPixelDataRangeNV); \
    HandleUnsupported(PFNGLPOINTPARAMETERINVPROC, glPointParameteriNV); \
    HandleUnsupported(PFNGLPOINTPARAMETERIVNVPROC, glPointParameterivNV); \
    HandleUnsupported(PFNGLPRESENTFRAMEKEYEDNVPROC, glPresentFrameKeyedNV); \
    HandleUnsupported(PFNGLPRESENTFRAMEDUALFILLNVPROC, glPresentFrameDualFillNV); \
    HandleUnsupported(PFNGLGETVIDEOIVNVPROC, glGetVideoivNV); \
    HandleUnsupported(PFNGLGETVIDEOUIVNVPROC, glGetVideouivNV); \
    HandleUnsupported(PFNGLGETVIDEOI64VNVPROC, glGetVideoi64vNV); \
    HandleUnsupported(PFNGLGETVIDEOUI64VNVPROC, glGetVideoui64vNV); \
    HandleUnsupported(PFNGLPRIMITIVERESTARTNVPROC, glPrimitiveRestartNV); \
    HandleUnsupported(PFNGLPRIMITIVERESTARTINDEXNVPROC, glPrimitiveRestartIndexNV); \
    HandleUnsupported(PFNGLQUERYRESOURCENVPROC, glQueryResourceNV); \
    HandleUnsupported(PFNGLGENQUERYRESOURCETAGNVPROC, glGenQueryResourceTagNV); \
    HandleUnsupported(PFNGLDELETEQUERYRESOURCETAGNVPROC, glDeleteQueryResourceTagNV); \
    HandleUnsupported(PFNGLQUERYRESOURCETAGNVPROC, glQueryResourceTagNV); \
    HandleUnsupported(PFNGLCOMBINERPARAMETERFVNVPROC, glCombinerParameterfvNV); \
    HandleUnsupported(PFNGLCOMBINERPARAMETERFNVPROC, glCombinerParameterfNV); \
    HandleUnsupported(PFNGLCOMBINERPARAMETERIVNVPROC, glCombinerParameterivNV); \
    HandleUnsupported(PFNGLCOMBINERPARAMETERINVPROC, glCombinerParameteriNV); \
    HandleUnsupported(PFNGLCOMBINERINPUTNVPROC, glCombinerInputNV); \
    HandleUnsupported(PFNGLCOMBINEROUTPUTNVPROC, glCombinerOutputNV); \
    HandleUnsupported(PFNGLFINALCOMBINERINPUTNVPROC, glFinalCombinerInputNV); \
    HandleUnsupported(PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC, glGetCombinerInputParameterfvNV); \
    HandleUnsupported(PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC, glGetCombinerInputParameterivNV); \
    HandleUnsupported(PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC, glGetCombinerOutputParameterfvNV); \
    HandleUnsupported(PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC, glGetCombinerOutputParameterivNV); \
    HandleUnsupported(PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC, glGetFinalCombinerInputParameterfvNV); \
    HandleUnsupported(PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC, glGetFinalCombinerInputParameterivNV); \
    HandleUnsupported(PFNGLCOMBINERSTAGEPARAMETERFVNVPROC, glCombinerStageParameterfvNV); \
    HandleUnsupported(PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC, glGetCombinerStageParameterfvNV); \
    HandleUnsupported(PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC, glTexImage2DMultisampleCoverageNV); \
    HandleUnsupported(PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC, glTexImage3DMultisampleCoverageNV); \
    HandleUnsupported(PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC, glTextureImage2DMultisampleNV); \
    HandleUnsupported(PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC, glTextureImage3DMultisampleNV); \
    HandleUnsupported(PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC, glTextureImage2DMultisampleCoverageNV); \
    HandleUnsupported(PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC, glTextureImage3DMultisampleCoverageNV); \
    HandleUnsupported(PFNGLBEGINTRANSFORMFEEDBACKNVPROC, glBeginTransformFeedbackNV); \
    HandleUnsupported(PFNGLENDTRANSFORMFEEDBACKNVPROC, glEndTransformFeedbackNV); \
    HandleUnsupported(PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC, glTransformFeedbackAttribsNV); \
    HandleUnsupported(PFNGLBINDBUFFERRANGENVPROC, glBindBufferRangeNV); \
    HandleUnsupported(PFNGLBINDBUFFEROFFSETNVPROC, glBindBufferOffsetNV); \
    HandleUnsupported(PFNGLBINDBUFFERBASENVPROC, glBindBufferBaseNV); \
    HandleUnsupported(PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC, glTransformFeedbackVaryingsNV); \
    HandleUnsupported(PFNGLACTIVEVARYINGNVPROC, glActiveVaryingNV); \
    HandleUnsupported(PFNGLGETVARYINGLOCATIONNVPROC, glGetVaryingLocationNV); \
    HandleUnsupported(PFNGLGETACTIVEVARYINGNVPROC, glGetActiveVaryingNV); \
    HandleUnsupported(PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC, glGetTransformFeedbackVaryingNV); \
    HandleUnsupported(PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC, glTransformFeedbackStreamAttribsNV); \
    HandleUnsupported(PFNGLBINDTRANSFORMFEEDBACKNVPROC, glBindTransformFeedbackNV); \
    HandleUnsupported(PFNGLDELETETRANSFORMFEEDBACKSNVPROC, glDeleteTransformFeedbacksNV); \
    HandleUnsupported(PFNGLGENTRANSFORMFEEDBACKSNVPROC, glGenTransformFeedbacksNV); \
    HandleUnsupported(PFNGLISTRANSFORMFEEDBACKNVPROC, glIsTransformFeedbackNV); \
    HandleUnsupported(PFNGLPAUSETRANSFORMFEEDBACKNVPROC, glPauseTransformFeedbackNV); \
    HandleUnsupported(PFNGLRESUMETRANSFORMFEEDBACKNVPROC, glResumeTransformFeedbackNV); \
    HandleUnsupported(PFNGLDRAWTRANSFORMFEEDBACKNVPROC, glDrawTransformFeedbackNV); \
    HandleUnsupported(PFNGLVDPAUINITNVPROC, glVDPAUInitNV); \
    HandleUnsupported(PFNGLVDPAUFININVPROC, glVDPAUFiniNV); \
    HandleUnsupported(PFNGLVDPAUREGISTERVIDEOSURFACENVPROC, glVDPAURegisterVideoSurfaceNV); \
    HandleUnsupported(PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC, glVDPAURegisterOutputSurfaceNV); \
    HandleUnsupported(PFNGLVDPAUISSURFACENVPROC, glVDPAUIsSurfaceNV); \
    HandleUnsupported(PFNGLVDPAUUNREGISTERSURFACENVPROC, glVDPAUUnregisterSurfaceNV); \
    HandleUnsupported(PFNGLVDPAUGETSURFACEIVNVPROC, glVDPAUGetSurfaceivNV); \
    HandleUnsupported(PFNGLVDPAUSURFACEACCESSNVPROC, glVDPAUSurfaceAccessNV); \
    HandleUnsupported(PFNGLVDPAUMAPSURFACESNVPROC, glVDPAUMapSurfacesNV); \
    HandleUnsupported(PFNGLVDPAUUNMAPSURFACESNVPROC, glVDPAUUnmapSurfacesNV); \
    HandleUnsupported(PFNGLFLUSHVERTEXARRAYRANGENVPROC, glFlushVertexArrayRangeNV); \
    HandleUnsupported(PFNGLVERTEXARRAYRANGENVPROC, glVertexArrayRangeNV); \
    HandleUnsupported(PFNGLAREPROGRAMSRESIDENTNVPROC, glAreProgramsResidentNV); \
    HandleUnsupported(PFNGLBINDPROGRAMNVPROC, glBindProgramNV); \
    HandleUnsupported(PFNGLDELETEPROGRAMSNVPROC, glDeleteProgramsNV); \
    HandleUnsupported(PFNGLEXECUTEPROGRAMNVPROC, glExecuteProgramNV); \
    HandleUnsupported(PFNGLGENPROGRAMSNVPROC, glGenProgramsNV); \
    HandleUnsupported(PFNGLGETPROGRAMPARAMETERDVNVPROC, glGetProgramParameterdvNV); \
    HandleUnsupported(PFNGLGETPROGRAMPARAMETERFVNVPROC, glGetProgramParameterfvNV); \
    HandleUnsupported(PFNGLGETPROGRAMIVNVPROC, glGetProgramivNV); \
    HandleUnsupported(PFNGLGETPROGRAMSTRINGNVPROC, glGetProgramStringNV); \
    HandleUnsupported(PFNGLGETTRACKMATRIXIVNVPROC, glGetTrackMatrixivNV); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBDVNVPROC, glGetVertexAttribdvNV); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBFVNVPROC, glGetVertexAttribfvNV); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBIVNVPROC, glGetVertexAttribivNV); \
    HandleUnsupported(PFNGLGETVERTEXATTRIBPOINTERVNVPROC, glGetVertexAttribPointervNV); \
    HandleUnsupported(PFNGLISPROGRAMNVPROC, glIsProgramNV); \
    HandleUnsupported(PFNGLLOADPROGRAMNVPROC, glLoadProgramNV); \
    HandleUnsupported(PFNGLPROGRAMPARAMETER4DNVPROC, glProgramParameter4dNV); \
    HandleUnsupported(PFNGLPROGRAMPARAMETER4DVNVPROC, glProgramParameter4dvNV); \
    HandleUnsupported(PFNGLPROGRAMPARAMETER4FNVPROC, glProgramParameter4fNV); \
    HandleUnsupported(PFNGLPROGRAMPARAMETER4FVNVPROC, glProgramParameter4fvNV); \
    HandleUnsupported(PFNGLPROGRAMPARAMETERS4DVNVPROC, glProgramParameters4dvNV); \
    HandleUnsupported(PFNGLPROGRAMPARAMETERS4FVNVPROC, glProgramParameters4fvNV); \
    HandleUnsupported(PFNGLREQUESTRESIDENTPROGRAMSNVPROC, glRequestResidentProgramsNV); \
    HandleUnsupported(PFNGLTRACKMATRIXNVPROC, glTrackMatrixNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBPOINTERNVPROC, glVertexAttribPointerNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB1DNVPROC, glVertexAttrib1dNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB1DVNVPROC, glVertexAttrib1dvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB1FNVPROC, glVertexAttrib1fNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB1FVNVPROC, glVertexAttrib1fvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB1SNVPROC, glVertexAttrib1sNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB1SVNVPROC, glVertexAttrib1svNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB2DNVPROC, glVertexAttrib2dNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB2DVNVPROC, glVertexAttrib2dvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB2FNVPROC, glVertexAttrib2fNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB2FVNVPROC, glVertexAttrib2fvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB2SNVPROC, glVertexAttrib2sNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB2SVNVPROC, glVertexAttrib2svNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB3DNVPROC, glVertexAttrib3dNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB3DVNVPROC, glVertexAttrib3dvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB3FNVPROC, glVertexAttrib3fNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB3FVNVPROC, glVertexAttrib3fvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB3SNVPROC, glVertexAttrib3sNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB3SVNVPROC, glVertexAttrib3svNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB4DNVPROC, glVertexAttrib4dNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB4DVNVPROC, glVertexAttrib4dvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB4FNVPROC, glVertexAttrib4fNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB4FVNVPROC, glVertexAttrib4fvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB4SNVPROC, glVertexAttrib4sNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB4SVNVPROC, glVertexAttrib4svNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB4UBNVPROC, glVertexAttrib4ubNV); \
    HandleUnsupported(PFNGLVERTEXATTRIB4UBVNVPROC, glVertexAttrib4ubvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS1DVNVPROC, glVertexAttribs1dvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS1FVNVPROC, glVertexAttribs1fvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS1SVNVPROC, glVertexAttribs1svNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS2DVNVPROC, glVertexAttribs2dvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS2FVNVPROC, glVertexAttribs2fvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS2SVNVPROC, glVertexAttribs2svNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS3DVNVPROC, glVertexAttribs3dvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS3FVNVPROC, glVertexAttribs3fvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS3SVNVPROC, glVertexAttribs3svNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS4DVNVPROC, glVertexAttribs4dvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS4FVNVPROC, glVertexAttribs4fvNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS4SVNVPROC, glVertexAttribs4svNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBS4UBVNVPROC, glVertexAttribs4ubvNV); \
    HandleUnsupported(PFNGLBEGINVIDEOCAPTURENVPROC, glBeginVideoCaptureNV); \
    HandleUnsupported(PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC, glBindVideoCaptureStreamBufferNV); \
    HandleUnsupported(PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC, glBindVideoCaptureStreamTextureNV); \
    HandleUnsupported(PFNGLENDVIDEOCAPTURENVPROC, glEndVideoCaptureNV); \
    HandleUnsupported(PFNGLGETVIDEOCAPTUREIVNVPROC, glGetVideoCaptureivNV); \
    HandleUnsupported(PFNGLGETVIDEOCAPTURESTREAMIVNVPROC, glGetVideoCaptureStreamivNV); \
    HandleUnsupported(PFNGLGETVIDEOCAPTURESTREAMFVNVPROC, glGetVideoCaptureStreamfvNV); \
    HandleUnsupported(PFNGLGETVIDEOCAPTURESTREAMDVNVPROC, glGetVideoCaptureStreamdvNV); \
    HandleUnsupported(PFNGLVIDEOCAPTURENVPROC, glVideoCaptureNV); \
    HandleUnsupported(PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC, glVideoCaptureStreamParameterivNV); \
    HandleUnsupported(PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC, glVideoCaptureStreamParameterfvNV); \
    HandleUnsupported(PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC, glVideoCaptureStreamParameterdvNV); \
    HandleUnsupported(PFNGLHINTPGIPROC, glHintPGI); \
    HandleUnsupported(PFNGLDETAILTEXFUNCSGISPROC, glDetailTexFuncSGIS); \
    HandleUnsupported(PFNGLGETDETAILTEXFUNCSGISPROC, glGetDetailTexFuncSGIS); \
    HandleUnsupported(PFNGLFOGFUNCSGISPROC, glFogFuncSGIS); \
    HandleUnsupported(PFNGLGETFOGFUNCSGISPROC, glGetFogFuncSGIS); \
    HandleUnsupported(PFNGLSAMPLEMASKSGISPROC, glSampleMaskSGIS); \
    HandleUnsupported(PFNGLSAMPLEPATTERNSGISPROC, glSamplePatternSGIS); \
    HandleUnsupported(PFNGLPIXELTEXGENPARAMETERISGISPROC, glPixelTexGenParameteriSGIS); \
    HandleUnsupported(PFNGLPIXELTEXGENPARAMETERIVSGISPROC, glPixelTexGenParameterivSGIS); \
    HandleUnsupported(PFNGLPIXELTEXGENPARAMETERFSGISPROC, glPixelTexGenParameterfSGIS); \
    HandleUnsupported(PFNGLPIXELTEXGENPARAMETERFVSGISPROC, glPixelTexGenParameterfvSGIS); \
    HandleUnsupported(PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC, glGetPixelTexGenParameterivSGIS); \
    HandleUnsupported(PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC, glGetPixelTexGenParameterfvSGIS); \
    HandleUnsupported(PFNGLPOINTPARAMETERFSGISPROC, glPointParameterfSGIS); \
    HandleUnsupported(PFNGLPOINTPARAMETERFVSGISPROC, glPointParameterfvSGIS); \
    HandleUnsupported(PFNGLSHARPENTEXFUNCSGISPROC, glSharpenTexFuncSGIS); \
    HandleUnsupported(PFNGLGETSHARPENTEXFUNCSGISPROC, glGetSharpenTexFuncSGIS); \
    HandleUnsupported(PFNGLTEXIMAGE4DSGISPROC, glTexImage4DSGIS); \
    HandleUnsupported(PFNGLTEXSUBIMAGE4DSGISPROC, glTexSubImage4DSGIS); \
    HandleUnsupported(PFNGLTEXTURECOLORMASKSGISPROC, glTextureColorMaskSGIS); \
    HandleUnsupported(PFNGLGETTEXFILTERFUNCSGISPROC, glGetTexFilterFuncSGIS); \
    HandleUnsupported(PFNGLTEXFILTERFUNCSGISPROC, glTexFilterFuncSGIS); \
    HandleUnsupported(PFNGLASYNCMARKERSGIXPROC, glAsyncMarkerSGIX); \
    HandleUnsupported(PFNGLFINISHASYNCSGIXPROC, glFinishAsyncSGIX); \
    HandleUnsupported(PFNGLPOLLASYNCSGIXPROC, glPollAsyncSGIX); \
    HandleUnsupported(PFNGLGENASYNCMARKERSSGIXPROC, glGenAsyncMarkersSGIX); \
    HandleUnsupported(PFNGLDELETEASYNCMARKERSSGIXPROC, glDeleteAsyncMarkersSGIX); \
    HandleUnsupported(PFNGLISASYNCMARKERSGIXPROC, glIsAsyncMarkerSGIX); \
    HandleUnsupported(PFNGLFLUSHRASTERSGIXPROC, glFlushRasterSGIX); \
    HandleUnsupported(PFNGLFRAGMENTCOLORMATERIALSGIXPROC, glFragmentColorMaterialSGIX); \
    HandleUnsupported(PFNGLFRAGMENTLIGHTFSGIXPROC, glFragmentLightfSGIX); \
    HandleUnsupported(PFNGLFRAGMENTLIGHTFVSGIXPROC, glFragmentLightfvSGIX); \
    HandleUnsupported(PFNGLFRAGMENTLIGHTISGIXPROC, glFragmentLightiSGIX); \
    HandleUnsupported(PFNGLFRAGMENTLIGHTIVSGIXPROC, glFragmentLightivSGIX); \
    HandleUnsupported(PFNGLFRAGMENTLIGHTMODELFSGIXPROC, glFragmentLightModelfSGIX); \
    HandleUnsupported(PFNGLFRAGMENTLIGHTMODELFVSGIXPROC, glFragmentLightModelfvSGIX); \
    HandleUnsupported(PFNGLFRAGMENTLIGHTMODELISGIXPROC, glFragmentLightModeliSGIX); \
    HandleUnsupported(PFNGLFRAGMENTLIGHTMODELIVSGIXPROC, glFragmentLightModelivSGIX); \
    HandleUnsupported(PFNGLFRAGMENTMATERIALFSGIXPROC, glFragmentMaterialfSGIX); \
    HandleUnsupported(PFNGLFRAGMENTMATERIALFVSGIXPROC, glFragmentMaterialfvSGIX); \
    HandleUnsupported(PFNGLFRAGMENTMATERIALISGIXPROC, glFragmentMaterialiSGIX); \
    HandleUnsupported(PFNGLFRAGMENTMATERIALIVSGIXPROC, glFragmentMaterialivSGIX); \
    HandleUnsupported(PFNGLGETFRAGMENTLIGHTFVSGIXPROC, glGetFragmentLightfvSGIX); \
    HandleUnsupported(PFNGLGETFRAGMENTLIGHTIVSGIXPROC, glGetFragmentLightivSGIX); \
    HandleUnsupported(PFNGLGETFRAGMENTMATERIALFVSGIXPROC, glGetFragmentMaterialfvSGIX); \
    HandleUnsupported(PFNGLGETFRAGMENTMATERIALIVSGIXPROC, glGetFragmentMaterialivSGIX); \
    HandleUnsupported(PFNGLLIGHTENVISGIXPROC, glLightEnviSGIX); \
    HandleUnsupported(PFNGLFRAMEZOOMSGIXPROC, glFrameZoomSGIX); \
    HandleUnsupported(PFNGLIGLOOINTERFACESGIXPROC, glIglooInterfaceSGIX); \
    HandleUnsupported(PFNGLGETINSTRUMENTSSGIXPROC, glGetInstrumentsSGIX); \
    HandleUnsupported(PFNGLINSTRUMENTSBUFFERSGIXPROC, glInstrumentsBufferSGIX); \
    HandleUnsupported(PFNGLPOLLINSTRUMENTSSGIXPROC, glPollInstrumentsSGIX); \
    HandleUnsupported(PFNGLREADINSTRUMENTSSGIXPROC, glReadInstrumentsSGIX); \
    HandleUnsupported(PFNGLSTARTINSTRUMENTSSGIXPROC, glStartInstrumentsSGIX); \
    HandleUnsupported(PFNGLSTOPINSTRUMENTSSGIXPROC, glStopInstrumentsSGIX); \
    HandleUnsupported(PFNGLGETLISTPARAMETERFVSGIXPROC, glGetListParameterfvSGIX); \
    HandleUnsupported(PFNGLGETLISTPARAMETERIVSGIXPROC, glGetListParameterivSGIX); \
    HandleUnsupported(PFNGLLISTPARAMETERFSGIXPROC, glListParameterfSGIX); \
    HandleUnsupported(PFNGLLISTPARAMETERFVSGIXPROC, glListParameterfvSGIX); \
    HandleUnsupported(PFNGLLISTPARAMETERISGIXPROC, glListParameteriSGIX); \
    HandleUnsupported(PFNGLLISTPARAMETERIVSGIXPROC, glListParameterivSGIX); \
    HandleUnsupported(PFNGLPIXELTEXGENSGIXPROC, glPixelTexGenSGIX); \
    HandleUnsupported(PFNGLDEFORMATIONMAP3DSGIXPROC, glDeformationMap3dSGIX); \
    HandleUnsupported(PFNGLDEFORMATIONMAP3FSGIXPROC, glDeformationMap3fSGIX); \
    HandleUnsupported(PFNGLDEFORMSGIXPROC, glDeformSGIX); \
    HandleUnsupported(PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC, glLoadIdentityDeformationMapSGIX); \
    HandleUnsupported(PFNGLREFERENCEPLANESGIXPROC, glReferencePlaneSGIX); \
    HandleUnsupported(PFNGLSPRITEPARAMETERFSGIXPROC, glSpriteParameterfSGIX); \
    HandleUnsupported(PFNGLSPRITEPARAMETERFVSGIXPROC, glSpriteParameterfvSGIX); \
    HandleUnsupported(PFNGLSPRITEPARAMETERISGIXPROC, glSpriteParameteriSGIX); \
    HandleUnsupported(PFNGLSPRITEPARAMETERIVSGIXPROC, glSpriteParameterivSGIX); \
    HandleUnsupported(PFNGLTAGSAMPLEBUFFERSGIXPROC, glTagSampleBufferSGIX); \
    HandleUnsupported(PFNGLCOLORTABLESGIPROC, glColorTableSGI); \
    HandleUnsupported(PFNGLCOLORTABLEPARAMETERFVSGIPROC, glColorTableParameterfvSGI); \
    HandleUnsupported(PFNGLCOLORTABLEPARAMETERIVSGIPROC, glColorTableParameterivSGI); \
    HandleUnsupported(PFNGLCOPYCOLORTABLESGIPROC, glCopyColorTableSGI); \
    HandleUnsupported(PFNGLGETCOLORTABLESGIPROC, glGetColorTableSGI); \
    HandleUnsupported(PFNGLGETCOLORTABLEPARAMETERFVSGIPROC, glGetColorTableParameterfvSGI); \
    HandleUnsupported(PFNGLGETCOLORTABLEPARAMETERIVSGIPROC, glGetColorTableParameterivSGI); \
    HandleUnsupported(PFNGLFINISHTEXTURESUNXPROC, glFinishTextureSUNX); \
    HandleUnsupported(PFNGLGLOBALALPHAFACTORBSUNPROC, glGlobalAlphaFactorbSUN); \
    HandleUnsupported(PFNGLGLOBALALPHAFACTORSSUNPROC, glGlobalAlphaFactorsSUN); \
    HandleUnsupported(PFNGLGLOBALALPHAFACTORISUNPROC, glGlobalAlphaFactoriSUN); \
    HandleUnsupported(PFNGLGLOBALALPHAFACTORFSUNPROC, glGlobalAlphaFactorfSUN); \
    HandleUnsupported(PFNGLGLOBALALPHAFACTORDSUNPROC, glGlobalAlphaFactordSUN); \
    HandleUnsupported(PFNGLGLOBALALPHAFACTORUBSUNPROC, glGlobalAlphaFactorubSUN); \
    HandleUnsupported(PFNGLGLOBALALPHAFACTORUSSUNPROC, glGlobalAlphaFactorusSUN); \
    HandleUnsupported(PFNGLGLOBALALPHAFACTORUISUNPROC, glGlobalAlphaFactoruiSUN); \
    HandleUnsupported(PFNGLDRAWMESHARRAYSSUNPROC, glDrawMeshArraysSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUISUNPROC, glReplacementCodeuiSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUSSUNPROC, glReplacementCodeusSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUBSUNPROC, glReplacementCodeubSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUIVSUNPROC, glReplacementCodeuivSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUSVSUNPROC, glReplacementCodeusvSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUBVSUNPROC, glReplacementCodeubvSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEPOINTERSUNPROC, glReplacementCodePointerSUN); \
    HandleUnsupported(PFNGLCOLOR4UBVERTEX2FSUNPROC, glColor4ubVertex2fSUN); \
    HandleUnsupported(PFNGLCOLOR4UBVERTEX2FVSUNPROC, glColor4ubVertex2fvSUN); \
    HandleUnsupported(PFNGLCOLOR4UBVERTEX3FSUNPROC, glColor4ubVertex3fSUN); \
    HandleUnsupported(PFNGLCOLOR4UBVERTEX3FVSUNPROC, glColor4ubVertex3fvSUN); \
    HandleUnsupported(PFNGLCOLOR3FVERTEX3FSUNPROC, glColor3fVertex3fSUN); \
    HandleUnsupported(PFNGLCOLOR3FVERTEX3FVSUNPROC, glColor3fVertex3fvSUN); \
    HandleUnsupported(PFNGLNORMAL3FVERTEX3FSUNPROC, glNormal3fVertex3fSUN); \
    HandleUnsupported(PFNGLNORMAL3FVERTEX3FVSUNPROC, glNormal3fVertex3fvSUN); \
    HandleUnsupported(PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC, glColor4fNormal3fVertex3fSUN); \
    HandleUnsupported(PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC, glColor4fNormal3fVertex3fvSUN); \
    HandleUnsupported(PFNGLTEXCOORD2FVERTEX3FSUNPROC, glTexCoord2fVertex3fSUN); \
    HandleUnsupported(PFNGLTEXCOORD2FVERTEX3FVSUNPROC, glTexCoord2fVertex3fvSUN); \
    HandleUnsupported(PFNGLTEXCOORD4FVERTEX4FSUNPROC, glTexCoord4fVertex4fSUN); \
    HandleUnsupported(PFNGLTEXCOORD4FVERTEX4FVSUNPROC, glTexCoord4fVertex4fvSUN); \
    HandleUnsupported(PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC, glTexCoord2fColor4ubVertex3fSUN); \
    HandleUnsupported(PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC, glTexCoord2fColor4ubVertex3fvSUN); \
    HandleUnsupported(PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC, glTexCoord2fColor3fVertex3fSUN); \
    HandleUnsupported(PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC, glTexCoord2fColor3fVertex3fvSUN); \
    HandleUnsupported(PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC, glTexCoord2fNormal3fVertex3fSUN); \
    HandleUnsupported(PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC, glTexCoord2fNormal3fVertex3fvSUN); \
    HandleUnsupported(PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC, glTexCoord2fColor4fNormal3fVertex3fSUN); \
    HandleUnsupported(PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC, glTexCoord2fColor4fNormal3fVertex3fvSUN); \
    HandleUnsupported(PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC, glTexCoord4fColor4fNormal3fVertex4fSUN); \
    HandleUnsupported(PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC, glTexCoord4fColor4fNormal3fVertex4fvSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC, glReplacementCodeuiVertex3fSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC, glReplacementCodeuiVertex3fvSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC, glReplacementCodeuiColor4ubVertex3fSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC, glReplacementCodeuiColor4ubVertex3fvSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC, glReplacementCodeuiColor3fVertex3fSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC, glReplacementCodeuiColor3fVertex3fvSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC, glReplacementCodeuiNormal3fVertex3fSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC, glReplacementCodeuiNormal3fVertex3fvSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC, glReplacementCodeuiColor4fNormal3fVertex3fSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC, glReplacementCodeuiColor4fNormal3fVertex3fvSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC, glReplacementCodeuiTexCoord2fVertex3fSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC, glReplacementCodeuiTexCoord2fVertex3fvSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC, glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC, glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC, glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN); \
    HandleUnsupported(PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC, glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN); \
    HandleUnsupported(PFNGLGETGRAPHICSRESETSTATUSKHRPROC, glGetGraphicsResetStatusKHR); \
    HandleUnsupported(PFNGLREADNPIXELSKHRPROC, glReadnPixelsKHR); \
    HandleUnsupported(PFNGLGETNUNIFORMFVKHRPROC, glGetnUniformfvKHR); \
    HandleUnsupported(PFNGLGETNUNIFORMIVKHRPROC, glGetnUniformivKHR); \
    HandleUnsupported(PFNGLGETNUNIFORMUIVKHRPROC, glGetnUniformuivKHR); \
    HandleUnsupported(PFNGLEGLIMAGETARGETTEXTURE2DOESPROC, glEGLImageTargetTexture2DOES); \
    HandleUnsupported(PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC, glEGLImageTargetRenderbufferStorageOES); \
    HandleUnsupported(PFNGLGETPROGRAMBINARYOESPROC, glGetProgramBinaryOES); \
    HandleUnsupported(PFNGLPROGRAMBINARYOESPROC, glProgramBinaryOES); \
    HandleUnsupported(PFNGLBLITFRAMEBUFFERANGLEPROC, glBlitFramebufferANGLE); \
    HandleUnsupported(PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC, glRenderbufferStorageMultisampleANGLE); \
    HandleUnsupported(PFNGLDRAWARRAYSINSTANCEDANGLEPROC, glDrawArraysInstancedANGLE); \
    HandleUnsupported(PFNGLDRAWELEMENTSINSTANCEDANGLEPROC, glDrawElementsInstancedANGLE); \
    HandleUnsupported(PFNGLVERTEXATTRIBDIVISORANGLEPROC, glVertexAttribDivisorANGLE); \
    HandleUnsupported(PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC, glGetTranslatedShaderSourceANGLE); \
    HandleUnsupported(PFNGLCOPYTEXTURELEVELSAPPLEPROC, glCopyTextureLevelsAPPLE); \
    HandleUnsupported(PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC, glRenderbufferStorageMultisampleAPPLE); \
    HandleUnsupported(PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC, glResolveMultisampleFramebufferAPPLE); \
    HandleUnsupported(PFNGLFENCESYNCAPPLEPROC, glFenceSyncAPPLE); \
    HandleUnsupported(PFNGLISSYNCAPPLEPROC, glIsSyncAPPLE); \
    HandleUnsupported(PFNGLDELETESYNCAPPLEPROC, glDeleteSyncAPPLE); \
    HandleUnsupported(PFNGLCLIENTWAITSYNCAPPLEPROC, glClientWaitSyncAPPLE); \
    HandleUnsupported(PFNGLWAITSYNCAPPLEPROC, glWaitSyncAPPLE); \
    HandleUnsupported(PFNGLGETINTEGER64VAPPLEPROC, glGetInteger64vAPPLE); \
    HandleUnsupported(PFNGLGETSYNCIVAPPLEPROC, glGetSyncivAPPLE); \
    HandleUnsupported(PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC, glBindFragDataLocationIndexedEXT); \
    HandleUnsupported(PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC, glGetProgramResourceLocationIndexEXT); \
    HandleUnsupported(PFNGLGETFRAGDATAINDEXEXTPROC, glGetFragDataIndexEXT); \
    HandleUnsupported(PFNGLBUFFERSTORAGEEXTPROC, glBufferStorageEXT); \
    HandleUnsupported(PFNGLCLEARTEXIMAGEEXTPROC, glClearTexImageEXT); \
    HandleUnsupported(PFNGLCLEARTEXSUBIMAGEEXTPROC, glClearTexSubImageEXT); \
    HandleUnsupported(PFNGLCLIPCONTROLEXTPROC, glClipControlEXT); \
    HandleUnsupported(PFNGLDRAWTRANSFORMFEEDBACKEXTPROC, glDrawTransformFeedbackEXT); \
    HandleUnsupported(PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDEXTPROC, glDrawTransformFeedbackInstancedEXT); \
    HandleUnsupported(PFNGLVERTEXATTRIBDIVISOREXTPROC, glVertexAttribDivisorEXT); \
    HandleUnsupported(PFNGLMAPBUFFERRANGEEXTPROC, glMapBufferRangeEXT); \
    HandleUnsupported(PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC, glFlushMappedBufferRangeEXT); \
    HandleUnsupported(PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC, glMultiDrawArraysIndirectEXT); \
    HandleUnsupported(PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC, glMultiDrawElementsIndirectEXT); \
    HandleUnsupported(PFNGLREADBUFFERINDEXEDEXTPROC, glReadBufferIndexedEXT); \
    HandleUnsupported(PFNGLDRAWBUFFERSINDEXEDEXTPROC, glDrawBuffersIndexedEXT); \
    HandleUnsupported(PFNGLGETINTEGERI_VEXTPROC, glGetIntegeri_vEXT); \
    HandleUnsupported(PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC, glFramebufferPixelLocalStorageSizeEXT); \
    HandleUnsupported(PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC, glGetFramebufferPixelLocalStorageSizeEXT); \
    HandleUnsupported(PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC, glClearPixelLocalStorageuiEXT); \
    HandleUnsupported(PFNGLTEXPAGECOMMITMENTEXTPROC, glTexPageCommitmentEXT); \
    HandleUnsupported(PFNGLGETTEXTUREHANDLEIMGPROC, glGetTextureHandleIMG); \
    HandleUnsupported(PFNGLGETTEXTURESAMPLERHANDLEIMGPROC, glGetTextureSamplerHandleIMG); \
    HandleUnsupported(PFNGLUNIFORMHANDLEUI64IMGPROC, glUniformHandleui64IMG); \
    HandleUnsupported(PFNGLUNIFORMHANDLEUI64VIMGPROC, glUniformHandleui64vIMG); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMHANDLEUI64IMGPROC, glProgramUniformHandleui64IMG); \
    HandleUnsupported(PFNGLPROGRAMUNIFORMHANDLEUI64VIMGPROC, glProgramUniformHandleui64vIMG); \
    HandleUnsupported(PFNGLFRAMEBUFFERTEXTURE2DDOWNSAMPLEIMGPROC, glFramebufferTexture2DDownsampleIMG); \
    HandleUnsupported(PFNGLFRAMEBUFFERTEXTURELAYERDOWNSAMPLEIMGPROC, glFramebufferTextureLayerDownsampleIMG); \
    HandleUnsupported(PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC, glRenderbufferStorageMultisampleIMG); \
    HandleUnsupported(PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC, glFramebufferTexture2DMultisampleIMG); \
    HandleUnsupported(PFNGLCOPYBUFFERSUBDATANVPROC, glCopyBufferSubDataNV); \
    HandleUnsupported(PFNGLCOVERAGEMASKNVPROC, glCoverageMaskNV); \
    HandleUnsupported(PFNGLCOVERAGEOPERATIONNVPROC, glCoverageOperationNV); \
    HandleUnsupported(PFNGLDRAWBUFFERSNVPROC, glDrawBuffersNV); \
    HandleUnsupported(PFNGLDRAWARRAYSINSTANCEDNVPROC, glDrawArraysInstancedNV); \
    HandleUnsupported(PFNGLDRAWELEMENTSINSTANCEDNVPROC, glDrawElementsInstancedNV); \
    HandleUnsupported(PFNGLBLITFRAMEBUFFERNVPROC, glBlitFramebufferNV); \
    HandleUnsupported(PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC, glRenderbufferStorageMultisampleNV); \
    HandleUnsupported(PFNGLVERTEXATTRIBDIVISORNVPROC, glVertexAttribDivisorNV); \
    HandleUnsupported(PFNGLUNIFORMMATRIX2X3FVNVPROC, glUniformMatrix2x3fvNV); \
    HandleUnsupported(PFNGLUNIFORMMATRIX3X2FVNVPROC, glUniformMatrix3x2fvNV); \
    HandleUnsupported(PFNGLUNIFORMMATRIX2X4FVNVPROC, glUniformMatrix2x4fvNV); \
    HandleUnsupported(PFNGLUNIFORMMATRIX4X2FVNVPROC, glUniformMatrix4x2fvNV); \
    HandleUnsupported(PFNGLUNIFORMMATRIX3X4FVNVPROC, glUniformMatrix3x4fvNV); \
    HandleUnsupported(PFNGLUNIFORMMATRIX4X3FVNVPROC, glUniformMatrix4x3fvNV); \
    HandleUnsupported(PFNGLPOLYGONMODENVPROC, glPolygonModeNV); \
    HandleUnsupported(PFNGLREADBUFFERNVPROC, glReadBufferNV); \
    HandleUnsupported(PFNGLALPHAFUNCQCOMPROC, glAlphaFuncQCOM); \
    HandleUnsupported(PFNGLGETDRIVERCONTROLSQCOMPROC, glGetDriverControlsQCOM); \
    HandleUnsupported(PFNGLGETDRIVERCONTROLSTRINGQCOMPROC, glGetDriverControlStringQCOM); \
    HandleUnsupported(PFNGLENABLEDRIVERCONTROLQCOMPROC, glEnableDriverControlQCOM); \
    HandleUnsupported(PFNGLDISABLEDRIVERCONTROLQCOMPROC, glDisableDriverControlQCOM); \
    HandleUnsupported(PFNGLEXTGETTEXTURESQCOMPROC, glExtGetTexturesQCOM); \
    HandleUnsupported(PFNGLEXTGETBUFFERSQCOMPROC, glExtGetBuffersQCOM); \
    HandleUnsupported(PFNGLEXTGETRENDERBUFFERSQCOMPROC, glExtGetRenderbuffersQCOM); \
    HandleUnsupported(PFNGLEXTGETFRAMEBUFFERSQCOMPROC, glExtGetFramebuffersQCOM); \
    HandleUnsupported(PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC, glExtGetTexLevelParameterivQCOM); \
    HandleUnsupported(PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC, glExtTexObjectStateOverrideiQCOM); \
    HandleUnsupported(PFNGLEXTGETTEXSUBIMAGEQCOMPROC, glExtGetTexSubImageQCOM); \
    HandleUnsupported(PFNGLEXTGETBUFFERPOINTERVQCOMPROC, glExtGetBufferPointervQCOM); \
    HandleUnsupported(PFNGLEXTGETSHADERSQCOMPROC, glExtGetShadersQCOM); \
    HandleUnsupported(PFNGLEXTGETPROGRAMSQCOMPROC, glExtGetProgramsQCOM); \
    HandleUnsupported(PFNGLEXTISPROGRAMBINARYQCOMPROC, glExtIsProgramBinaryQCOM); \
    HandleUnsupported(PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC, glExtGetProgramBinarySourceQCOM); \
    HandleUnsupported(PFNGLFRAMEBUFFERFOVEATIONCONFIGQCOMPROC, glFramebufferFoveationConfigQCOM); \
    HandleUnsupported(PFNGLFRAMEBUFFERFOVEATIONPARAMETERSQCOMPROC, glFramebufferFoveationParametersQCOM); \
    HandleUnsupported(PFNGLFRAMEBUFFERFETCHBARRIERQCOMPROC, glFramebufferFetchBarrierQCOM); \
    HandleUnsupported(PFNGLTEXTUREFOVEATIONPARAMETERSQCOMPROC, glTextureFoveationParametersQCOM); \
    HandleUnsupported(PFNGLSTARTTILINGQCOMPROC, glStartTilingQCOM); \
    HandleUnsupported(PFNGLENDTILINGQCOMPROC, glEndTilingQCOM); \
    HandleUnsupported(PFNGLNEWLISTPROC, glNewList); \
    HandleUnsupported(PFNGLENDLISTPROC, glEndList); \
    HandleUnsupported(PFNGLCALLLISTPROC, glCallList); \
    HandleUnsupported(PFNGLCALLLISTSPROC, glCallLists); \
    HandleUnsupported(PFNGLDELETELISTSPROC, glDeleteLists); \
    HandleUnsupported(PFNGLGENLISTSPROC, glGenLists); \
    HandleUnsupported(PFNGLLISTBASEPROC, glListBase); \
    HandleUnsupported(PFNGLBEGINPROC, glBegin); \
    HandleUnsupported(PFNGLBITMAPPROC, glBitmap); \
    HandleUnsupported(PFNGLCOLOR3BPROC, glColor3b); \
    HandleUnsupported(PFNGLCOLOR3BVPROC, glColor3bv); \
    HandleUnsupported(PFNGLCOLOR3DPROC, glColor3d); \
    HandleUnsupported(PFNGLCOLOR3DVPROC, glColor3dv); \
    HandleUnsupported(PFNGLCOLOR3FPROC, glColor3f); \
    HandleUnsupported(PFNGLCOLOR3FVPROC, glColor3fv); \
    HandleUnsupported(PFNGLCOLOR3IPROC, glColor3i); \
    HandleUnsupported(PFNGLCOLOR3IVPROC, glColor3iv); \
    HandleUnsupported(PFNGLCOLOR3SPROC, glColor3s); \
    HandleUnsupported(PFNGLCOLOR3SVPROC, glColor3sv); \
    HandleUnsupported(PFNGLCOLOR3UBPROC, glColor3ub); \
    HandleUnsupported(PFNGLCOLOR3UBVPROC, glColor3ubv); \
    HandleUnsupported(PFNGLCOLOR3UIPROC, glColor3ui); \
    HandleUnsupported(PFNGLCOLOR3UIVPROC, glColor3uiv); \
    HandleUnsupported(PFNGLCOLOR3USPROC, glColor3us); \
    HandleUnsupported(PFNGLCOLOR3USVPROC, glColor3usv); \
    HandleUnsupported(PFNGLCOLOR4BPROC, glColor4b); \
    HandleUnsupported(PFNGLCOLOR4BVPROC, glColor4bv); \
    HandleUnsupported(PFNGLCOLOR4DPROC, glColor4d); \
    HandleUnsupported(PFNGLCOLOR4DVPROC, glColor4dv); \
    HandleUnsupported(PFNGLCOLOR4FPROC, glColor4f); \
    HandleUnsupported(PFNGLCOLOR4FVPROC, glColor4fv); \
    HandleUnsupported(PFNGLCOLOR4IPROC, glColor4i); \
    HandleUnsupported(PFNGLCOLOR4IVPROC, glColor4iv); \
    HandleUnsupported(PFNGLCOLOR4SPROC, glColor4s); \
    HandleUnsupported(PFNGLCOLOR4SVPROC, glColor4sv); \
    HandleUnsupported(PFNGLCOLOR4UBPROC, glColor4ub); \
    HandleUnsupported(PFNGLCOLOR4UBVPROC, glColor4ubv); \
    HandleUnsupported(PFNGLCOLOR4UIPROC, glColor4ui); \
    HandleUnsupported(PFNGLCOLOR4UIVPROC, glColor4uiv); \
    HandleUnsupported(PFNGLCOLOR4USPROC, glColor4us); \
    HandleUnsupported(PFNGLCOLOR4USVPROC, glColor4usv); \
    HandleUnsupported(PFNGLEDGEFLAGPROC, glEdgeFlag); \
    HandleUnsupported(PFNGLEDGEFLAGVPROC, glEdgeFlagv); \
    HandleUnsupported(PFNGLENDPROC, glEnd); \
    HandleUnsupported(PFNGLINDEXDPROC, glIndexd); \
    HandleUnsupported(PFNGLINDEXDVPROC, glIndexdv); \
    HandleUnsupported(PFNGLINDEXFPROC, glIndexf); \
    HandleUnsupported(PFNGLINDEXFVPROC, glIndexfv); \
    HandleUnsupported(PFNGLINDEXIPROC, glIndexi); \
    HandleUnsupported(PFNGLINDEXIVPROC, glIndexiv); \
    HandleUnsupported(PFNGLINDEXSPROC, glIndexs); \
    HandleUnsupported(PFNGLINDEXSVPROC, glIndexsv); \
    HandleUnsupported(PFNGLNORMAL3BPROC, glNormal3b); \
    HandleUnsupported(PFNGLNORMAL3BVPROC, glNormal3bv); \
    HandleUnsupported(PFNGLNORMAL3DPROC, glNormal3d); \
    HandleUnsupported(PFNGLNORMAL3DVPROC, glNormal3dv); \
    HandleUnsupported(PFNGLNORMAL3FPROC, glNormal3f); \
    HandleUnsupported(PFNGLNORMAL3FVPROC, glNormal3fv); \
    HandleUnsupported(PFNGLNORMAL3IPROC, glNormal3i); \
    HandleUnsupported(PFNGLNORMAL3IVPROC, glNormal3iv); \
    HandleUnsupported(PFNGLNORMAL3SPROC, glNormal3s); \
    HandleUnsupported(PFNGLNORMAL3SVPROC, glNormal3sv); \
    HandleUnsupported(PFNGLRASTERPOS2DPROC, glRasterPos2d); \
    HandleUnsupported(PFNGLRASTERPOS2DVPROC, glRasterPos2dv); \
    HandleUnsupported(PFNGLRASTERPOS2FPROC, glRasterPos2f); \
    HandleUnsupported(PFNGLRASTERPOS2FVPROC, glRasterPos2fv); \
    HandleUnsupported(PFNGLRASTERPOS2IPROC, glRasterPos2i); \
    HandleUnsupported(PFNGLRASTERPOS2IVPROC, glRasterPos2iv); \
    HandleUnsupported(PFNGLRASTERPOS2SPROC, glRasterPos2s); \
    HandleUnsupported(PFNGLRASTERPOS2SVPROC, glRasterPos2sv); \
    HandleUnsupported(PFNGLRASTERPOS3DPROC, glRasterPos3d); \
    HandleUnsupported(PFNGLRASTERPOS3DVPROC, glRasterPos3dv); \
    HandleUnsupported(PFNGLRASTERPOS3FPROC, glRasterPos3f); \
    HandleUnsupported(PFNGLRASTERPOS3FVPROC, glRasterPos3fv); \
    HandleUnsupported(PFNGLRASTERPOS3IPROC, glRasterPos3i); \
    HandleUnsupported(PFNGLRASTERPOS3IVPROC, glRasterPos3iv); \
    HandleUnsupported(PFNGLRASTERPOS3SPROC, glRasterPos3s); \
    HandleUnsupported(PFNGLRASTERPOS3SVPROC, glRasterPos3sv); \
    HandleUnsupported(PFNGLRASTERPOS4DPROC, glRasterPos4d); \
    HandleUnsupported(PFNGLRASTERPOS4DVPROC, glRasterPos4dv); \
    HandleUnsupported(PFNGLRASTERPOS4FPROC, glRasterPos4f); \
    HandleUnsupported(PFNGLRASTERPOS4FVPROC, glRasterPos4fv); \
    HandleUnsupported(PFNGLRASTERPOS4IPROC, glRasterPos4i); \
    HandleUnsupported(PFNGLRASTERPOS4IVPROC, glRasterPos4iv); \
    HandleUnsupported(PFNGLRASTERPOS4SPROC, glRasterPos4s); \
    HandleUnsupported(PFNGLRASTERPOS4SVPROC, glRasterPos4sv); \
    HandleUnsupported(PFNGLRECTDPROC, glRectd); \
    HandleUnsupported(PFNGLRECTDVPROC, glRectdv); \
    HandleUnsupported(PFNGLRECTFPROC, glRectf); \
    HandleUnsupported(PFNGLRECTFVPROC, glRectfv); \
    HandleUnsupported(PFNGLRECTIPROC, glRecti); \
    HandleUnsupported(PFNGLRECTIVPROC, glRectiv); \
    HandleUnsupported(PFNGLRECTSPROC, glRects); \
    HandleUnsupported(PFNGLRECTSVPROC, glRectsv); \
    HandleUnsupported(PFNGLTEXCOORD1DPROC, glTexCoord1d); \
    HandleUnsupported(PFNGLTEXCOORD1DVPROC, glTexCoord1dv); \
    HandleUnsupported(PFNGLTEXCOORD1FPROC, glTexCoord1f); \
    HandleUnsupported(PFNGLTEXCOORD1FVPROC, glTexCoord1fv); \
    HandleUnsupported(PFNGLTEXCOORD1IPROC, glTexCoord1i); \
    HandleUnsupported(PFNGLTEXCOORD1IVPROC, glTexCoord1iv); \
    HandleUnsupported(PFNGLTEXCOORD1SPROC, glTexCoord1s); \
    HandleUnsupported(PFNGLTEXCOORD1SVPROC, glTexCoord1sv); \
    HandleUnsupported(PFNGLTEXCOORD2DPROC, glTexCoord2d); \
    HandleUnsupported(PFNGLTEXCOORD2DVPROC, glTexCoord2dv); \
    HandleUnsupported(PFNGLTEXCOORD2FPROC, glTexCoord2f); \
    HandleUnsupported(PFNGLTEXCOORD2FVPROC, glTexCoord2fv); \
    HandleUnsupported(PFNGLTEXCOORD2IPROC, glTexCoord2i); \
    HandleUnsupported(PFNGLTEXCOORD2IVPROC, glTexCoord2iv); \
    HandleUnsupported(PFNGLTEXCOORD2SPROC, glTexCoord2s); \
    HandleUnsupported(PFNGLTEXCOORD2SVPROC, glTexCoord2sv); \
    HandleUnsupported(PFNGLTEXCOORD3DPROC, glTexCoord3d); \
    HandleUnsupported(PFNGLTEXCOORD3DVPROC, glTexCoord3dv); \
    HandleUnsupported(PFNGLTEXCOORD3FPROC, glTexCoord3f); \
    HandleUnsupported(PFNGLTEXCOORD3FVPROC, glTexCoord3fv); \
    HandleUnsupported(PFNGLTEXCOORD3IPROC, glTexCoord3i); \
    HandleUnsupported(PFNGLTEXCOORD3IVPROC, glTexCoord3iv); \
    HandleUnsupported(PFNGLTEXCOORD3SPROC, glTexCoord3s); \
    HandleUnsupported(PFNGLTEXCOORD3SVPROC, glTexCoord3sv); \
    HandleUnsupported(PFNGLTEXCOORD4DPROC, glTexCoord4d); \
    HandleUnsupported(PFNGLTEXCOORD4DVPROC, glTexCoord4dv); \
    HandleUnsupported(PFNGLTEXCOORD4FPROC, glTexCoord4f); \
    HandleUnsupported(PFNGLTEXCOORD4FVPROC, glTexCoord4fv); \
    HandleUnsupported(PFNGLTEXCOORD4IPROC, glTexCoord4i); \
    HandleUnsupported(PFNGLTEXCOORD4IVPROC, glTexCoord4iv); \
    HandleUnsupported(PFNGLTEXCOORD4SPROC, glTexCoord4s); \
    HandleUnsupported(PFNGLTEXCOORD4SVPROC, glTexCoord4sv); \
    HandleUnsupported(PFNGLVERTEX2DPROC, glVertex2d); \
    HandleUnsupported(PFNGLVERTEX2DVPROC, glVertex2dv); \
    HandleUnsupported(PFNGLVERTEX2FPROC, glVertex2f); \
    HandleUnsupported(PFNGLVERTEX2FVPROC, glVertex2fv); \
    HandleUnsupported(PFNGLVERTEX2IPROC, glVertex2i); \
    HandleUnsupported(PFNGLVERTEX2IVPROC, glVertex2iv); \
    HandleUnsupported(PFNGLVERTEX2SPROC, glVertex2s); \
    HandleUnsupported(PFNGLVERTEX2SVPROC, glVertex2sv); \
    HandleUnsupported(PFNGLVERTEX3DPROC, glVertex3d); \
    HandleUnsupported(PFNGLVERTEX3DVPROC, glVertex3dv); \
    HandleUnsupported(PFNGLVERTEX3FPROC, glVertex3f); \
    HandleUnsupported(PFNGLVERTEX3FVPROC, glVertex3fv); \
    HandleUnsupported(PFNGLVERTEX3IPROC, glVertex3i); \
    HandleUnsupported(PFNGLVERTEX3IVPROC, glVertex3iv); \
    HandleUnsupported(PFNGLVERTEX3SPROC, glVertex3s); \
    HandleUnsupported(PFNGLVERTEX3SVPROC, glVertex3sv); \
    HandleUnsupported(PFNGLVERTEX4DPROC, glVertex4d); \
    HandleUnsupported(PFNGLVERTEX4DVPROC, glVertex4dv); \
    HandleUnsupported(PFNGLVERTEX4FPROC, glVertex4f); \
    HandleUnsupported(PFNGLVERTEX4FVPROC, glVertex4fv); \
    HandleUnsupported(PFNGLVERTEX4IPROC, glVertex4i); \
    HandleUnsupported(PFNGLVERTEX4IVPROC, glVertex4iv); \
    HandleUnsupported(PFNGLVERTEX4SPROC, glVertex4s); \
    HandleUnsupported(PFNGLVERTEX4SVPROC, glVertex4sv); \
    HandleUnsupported(PFNGLCLIPPLANEPROC, glClipPlane); \
    HandleUnsupported(PFNGLCOLORMATERIALPROC, glColorMaterial); \
    HandleUnsupported(PFNGLFOGFPROC, glFogf); \
    HandleUnsupported(PFNGLFOGFVPROC, glFogfv); \
    HandleUnsupported(PFNGLFOGIPROC, glFogi); \
    HandleUnsupported(PFNGLFOGIVPROC, glFogiv); \
    HandleUnsupported(PFNGLLIGHTFPROC, glLightf); \
    HandleUnsupported(PFNGLLIGHTFVPROC, glLightfv); \
    HandleUnsupported(PFNGLLIGHTIPROC, glLighti); \
    HandleUnsupported(PFNGLLIGHTIVPROC, glLightiv); \
    HandleUnsupported(PFNGLLIGHTMODELFPROC, glLightModelf); \
    HandleUnsupported(PFNGLLIGHTMODELFVPROC, glLightModelfv); \
    HandleUnsupported(PFNGLLIGHTMODELIPROC, glLightModeli); \
    HandleUnsupported(PFNGLLIGHTMODELIVPROC, glLightModeliv); \
    HandleUnsupported(PFNGLLINESTIPPLEPROC, glLineStipple); \
    HandleUnsupported(PFNGLMATERIALFPROC, glMaterialf); \
    HandleUnsupported(PFNGLMATERIALFVPROC, glMaterialfv); \
    HandleUnsupported(PFNGLMATERIALIPROC, glMateriali); \
    HandleUnsupported(PFNGLMATERIALIVPROC, glMaterialiv); \
    HandleUnsupported(PFNGLPOLYGONSTIPPLEPROC, glPolygonStipple); \
    HandleUnsupported(PFNGLSHADEMODELPROC, glShadeModel); \
    HandleUnsupported(PFNGLTEXENVFPROC, glTexEnvf); \
    HandleUnsupported(PFNGLTEXENVFVPROC, glTexEnvfv); \
    HandleUnsupported(PFNGLTEXENVIPROC, glTexEnvi); \
    HandleUnsupported(PFNGLTEXENVIVPROC, glTexEnviv); \
    HandleUnsupported(PFNGLTEXGENDPROC, glTexGend); \
    HandleUnsupported(PFNGLTEXGENDVPROC, glTexGendv); \
    HandleUnsupported(PFNGLTEXGENFPROC, glTexGenf); \
    HandleUnsupported(PFNGLTEXGENFVPROC, glTexGenfv); \
    HandleUnsupported(PFNGLTEXGENIPROC, glTexGeni); \
    HandleUnsupported(PFNGLTEXGENIVPROC, glTexGeniv); \
    HandleUnsupported(PFNGLFEEDBACKBUFFERPROC, glFeedbackBuffer); \
    HandleUnsupported(PFNGLSELECTBUFFERPROC, glSelectBuffer); \
    HandleUnsupported(PFNGLRENDERMODEPROC, glRenderMode); \
    HandleUnsupported(PFNGLINITNAMESPROC, glInitNames); \
    HandleUnsupported(PFNGLLOADNAMEPROC, glLoadName); \
    HandleUnsupported(PFNGLPASSTHROUGHPROC, glPassThrough); \
    HandleUnsupported(PFNGLPOPNAMEPROC, glPopName); \
    HandleUnsupported(PFNGLPUSHNAMEPROC, glPushName); \
    HandleUnsupported(PFNGLCLEARACCUMPROC, glClearAccum); \
    HandleUnsupported(PFNGLCLEARINDEXPROC, glClearIndex); \
    HandleUnsupported(PFNGLINDEXMASKPROC, glIndexMask); \
    HandleUnsupported(PFNGLACCUMPROC, glAccum); \
    HandleUnsupported(PFNGLPOPATTRIBPROC, glPopAttrib); \
    HandleUnsupported(PFNGLPUSHATTRIBPROC, glPushAttrib); \
    HandleUnsupported(PFNGLMAP1DPROC, glMap1d); \
    HandleUnsupported(PFNGLMAP1FPROC, glMap1f); \
    HandleUnsupported(PFNGLMAP2DPROC, glMap2d); \
    HandleUnsupported(PFNGLMAP2FPROC, glMap2f); \
    HandleUnsupported(PFNGLMAPGRID1DPROC, glMapGrid1d); \
    HandleUnsupported(PFNGLMAPGRID1FPROC, glMapGrid1f); \
    HandleUnsupported(PFNGLMAPGRID2DPROC, glMapGrid2d); \
    HandleUnsupported(PFNGLMAPGRID2FPROC, glMapGrid2f); \
    HandleUnsupported(PFNGLEVALCOORD1DPROC, glEvalCoord1d); \
    HandleUnsupported(PFNGLEVALCOORD1DVPROC, glEvalCoord1dv); \
    HandleUnsupported(PFNGLEVALCOORD1FPROC, glEvalCoord1f); \
    HandleUnsupported(PFNGLEVALCOORD1FVPROC, glEvalCoord1fv); \
    HandleUnsupported(PFNGLEVALCOORD2DPROC, glEvalCoord2d); \
    HandleUnsupported(PFNGLEVALCOORD2DVPROC, glEvalCoord2dv); \
    HandleUnsupported(PFNGLEVALCOORD2FPROC, glEvalCoord2f); \
    HandleUnsupported(PFNGLEVALCOORD2FVPROC, glEvalCoord2fv); \
    HandleUnsupported(PFNGLEVALMESH1PROC, glEvalMesh1); \
    HandleUnsupported(PFNGLEVALPOINT1PROC, glEvalPoint1); \
    HandleUnsupported(PFNGLEVALMESH2PROC, glEvalMesh2); \
    HandleUnsupported(PFNGLEVALPOINT2PROC, glEvalPoint2); \
    HandleUnsupported(PFNGLALPHAFUNCPROC, glAlphaFunc); \
    HandleUnsupported(PFNGLPIXELZOOMPROC, glPixelZoom); \
    HandleUnsupported(PFNGLPIXELTRANSFERFPROC, glPixelTransferf); \
    HandleUnsupported(PFNGLPIXELTRANSFERIPROC, glPixelTransferi); \
    HandleUnsupported(PFNGLPIXELMAPFVPROC, glPixelMapfv); \
    HandleUnsupported(PFNGLPIXELMAPUIVPROC, glPixelMapuiv); \
    HandleUnsupported(PFNGLPIXELMAPUSVPROC, glPixelMapusv); \
    HandleUnsupported(PFNGLCOPYPIXELSPROC, glCopyPixels); \
    HandleUnsupported(PFNGLDRAWPIXELSPROC, glDrawPixels); \
    HandleUnsupported(PFNGLGETCLIPPLANEPROC, glGetClipPlane); \
    HandleUnsupported(PFNGLGETLIGHTFVPROC, glGetLightfv); \
    HandleUnsupported(PFNGLGETLIGHTIVPROC, glGetLightiv); \
    HandleUnsupported(PFNGLGETMAPDVPROC, glGetMapdv); \
    HandleUnsupported(PFNGLGETMAPFVPROC, glGetMapfv); \
    HandleUnsupported(PFNGLGETMAPIVPROC, glGetMapiv); \
    HandleUnsupported(PFNGLGETMATERIALFVPROC, glGetMaterialfv); \
    HandleUnsupported(PFNGLGETMATERIALIVPROC, glGetMaterialiv); \
    HandleUnsupported(PFNGLGETPIXELMAPFVPROC, glGetPixelMapfv); \
    HandleUnsupported(PFNGLGETPIXELMAPUIVPROC, glGetPixelMapuiv); \
    HandleUnsupported(PFNGLGETPIXELMAPUSVPROC, glGetPixelMapusv); \
    HandleUnsupported(PFNGLGETPOLYGONSTIPPLEPROC, glGetPolygonStipple); \
    HandleUnsupported(PFNGLGETTEXENVFVPROC, glGetTexEnvfv); \
    HandleUnsupported(PFNGLGETTEXENVIVPROC, glGetTexEnviv); \
    HandleUnsupported(PFNGLGETTEXGENDVPROC, glGetTexGendv); \
    HandleUnsupported(PFNGLGETTEXGENFVPROC, glGetTexGenfv); \
    HandleUnsupported(PFNGLGETTEXGENIVPROC, glGetTexGeniv); \
    HandleUnsupported(PFNGLISLISTPROC, glIsList); \
    HandleUnsupported(PFNGLFRUSTUMPROC, glFrustum); \
    HandleUnsupported(PFNGLLOADIDENTITYPROC, glLoadIdentity); \
    HandleUnsupported(PFNGLLOADMATRIXFPROC, glLoadMatrixf); \
    HandleUnsupported(PFNGLLOADMATRIXDPROC, glLoadMatrixd); \
    HandleUnsupported(PFNGLMATRIXMODEPROC, glMatrixMode); \
    HandleUnsupported(PFNGLMULTMATRIXFPROC, glMultMatrixf); \
    HandleUnsupported(PFNGLMULTMATRIXDPROC, glMultMatrixd); \
    HandleUnsupported(PFNGLORTHOPROC, glOrtho); \
    HandleUnsupported(PFNGLPOPMATRIXPROC, glPopMatrix); \
    HandleUnsupported(PFNGLPUSHMATRIXPROC, glPushMatrix); \
    HandleUnsupported(PFNGLROTATEDPROC, glRotated); \
    HandleUnsupported(PFNGLROTATEFPROC, glRotatef); \
    HandleUnsupported(PFNGLSCALEDPROC, glScaled); \
    HandleUnsupported(PFNGLSCALEFPROC, glScalef); \
    HandleUnsupported(PFNGLTRANSLATEDPROC, glTranslated); \
    HandleUnsupported(PFNGLTRANSLATEFPROC, glTranslatef); \
    HandleUnsupported(PFNGLARRAYELEMENTPROC, glArrayElement); \
    HandleUnsupported(PFNGLCOLORPOINTERPROC, glColorPointer); \
    HandleUnsupported(PFNGLDISABLECLIENTSTATEPROC, glDisableClientState); \
    HandleUnsupported(PFNGLEDGEFLAGPOINTERPROC, glEdgeFlagPointer); \
    HandleUnsupported(PFNGLENABLECLIENTSTATEPROC, glEnableClientState); \
    HandleUnsupported(PFNGLINDEXPOINTERPROC, glIndexPointer); \
    HandleUnsupported(PFNGLINTERLEAVEDARRAYSPROC, glInterleavedArrays); \
    HandleUnsupported(PFNGLNORMALPOINTERPROC, glNormalPointer); \
    HandleUnsupported(PFNGLTEXCOORDPOINTERPROC, glTexCoordPointer); \
    HandleUnsupported(PFNGLVERTEXPOINTERPROC, glVertexPointer); \
    HandleUnsupported(PFNGLARETEXTURESRESIDENTPROC, glAreTexturesResident); \
    HandleUnsupported(PFNGLPRIORITIZETEXTURESPROC, glPrioritizeTextures); \
    HandleUnsupported(PFNGLINDEXUBPROC, glIndexub); \
    HandleUnsupported(PFNGLINDEXUBVPROC, glIndexubv); \
    HandleUnsupported(PFNGLPOPCLIENTATTRIBPROC, glPopClientAttrib); \
    HandleUnsupported(PFNGLPUSHCLIENTATTRIBPROC, glPushClientAttrib);

// clang-format on
