version: '{build}'

branches:
  only:
  - master

image: Visual Studio 2015

configuration:
  - Development
  - Release

platform:
  - Win32
  - x64

clone_depth: 1

environment:
  coverity_token:
    secure: cvo7MHcff1Razyw9WcbJVBrEP8MkGIo7kvJ1RHYFIu0=
  coverity_email:
    secure: ndq7n9R6NhCV8mENhPAH4VTFNUeROGK/uFlqfUVwxAc=

# Can't exclude things in the build matrix, just skip development win32
matrix:
  allow_failures:
    - configuration: Development
      platform: Win32

init:
  - if "%PLATFORM%" EQU "Win32" ( if "%CONFIGURATION%"=="Development" (echo "Skipping Win32 Development" && exit /b 1 ) )

install:
- ps: $env:PATH = 'C:\MinGW\bin;C:\MinGW\mingw32\bin;C:\MinGW\msys\1.0\bin;' + $env:PATH

build:
  project: renderdoc.sln
  parallel: true
  verbosity: minimal

build_script:
- ps: >-
    if ( ($env:APPVEYOR_SCHEDULED_BUILD -eq "True" ) -and ($env:PLATFORM -eq "x64") -and ($env:CONFIGURATION -eq "Development") )
    {
      cov-build.exe --dir cov-int msbuild renderdoc.sln /p:Configuration=Development /p:Platform=x64 /p:PlatformToolset=v120

      nuget.exe install PublishCoverity -ExcludeVersion

      PublishCoverity\tools\PublishCoverity.exe compress -o coverity.zip -i cov-int

      PublishCoverity\tools\PublishCoverity.exe publish `
        -t "$env:coverity_token" `
        -e "$env:coverity_email" `
        -r "$env:APPVEYOR_REPO_NAME" `
        -z coverity.zip `
        -d "AppVeyor scheduled build ($env:APPVEYOR_REPO_COMMIT)." `
        --codeVersion "$env:APPVEYOR_REPO_COMMIT"

      return
    }

    if ( $env:APPVEYOR_SCHEDULED_BUILD -eq "True" )
    {
      return
    }

    sh -c ./scripts/hash_version.sh

    msbuild renderdoc.sln /v:m "/p:Configuration=$env:CONFIGURATION" "/p:Platform=$env:PLATFORM" /p:PlatformToolset=v140
